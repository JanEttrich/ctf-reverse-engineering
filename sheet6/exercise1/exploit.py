#!/usr/bin/python3

import socket
import telnetlib
import base64
import time
import angr
import claripy

prefix_bytes = b"here's the crackme:\n"
suffix_bytes = b"\nYou have 30 seconds. Solution? "

def receive_elf_file(s):
    data = b''
    while True:
        try:
            received = s.recv(2048)
            data += received
            if b"Solution? " in received:
                break
        except socket.timeout:
            break
    data = data[len(prefix_bytes):]
    data = data[:-len(suffix_bytes)]
    return data
        

# start connection
s = socket.create_connection(('localhost', 2001))

elf_file = receive_elf_file(s)
if not elf_file:
    print("No elf file received")
else: 
    print("Elf file received")

decoded = base64.b64decode(elf_file)
with open("binary", "wb") as file:
    file.write(decoded)
    print("File saved successfully")

# set up angr project and input
proj = angr.Project("binary", load_options={'auto_load_libs': False})

input_length = 32
input_str = claripy.BVS("input", input_length * 8)

entry_state = proj.factory.entry_state(args=["./binary", input_str])
simgr = proj.factory.simulation_manager(entry_state)
simgr.explore(find=proj.loader.main_object.get_symbol('print_flag').rebased_addr)

# extract input and send
assert(len(simgr.found) > 0)
solution_state = simgr.found[0]
solution = solution_state.solver.eval(input_str, cast_to=bytes)
print("Valid input:")
print(solution.decode())
s.send(solution + b'\n')

t = telnetlib.Telnet()
t.sock = s
t.interact()

s.close()

