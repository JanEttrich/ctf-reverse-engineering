/
type=rizin rz-db project
version=11

/core
blocksize=0x400
offset=0x2bff

/core/analysis

/core/analysis/blocks
0x2000={"size":20,"jump":8214,"fail":8212,"traced":true,"ninstr":5,"op_pos":[4,8,15,18],"sp_delta":[0,8,8,8,8],"sp":0}
0x2014={"size":2,"jump":8214,"ninstr":1,"sp":8}
0x2016={"size":5,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[-8,-16],"sp":8}
0x22a0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x22b0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x22c0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x22d0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x22e0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x22f0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2300={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2310={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2320={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2330={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2340={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2350={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2360={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2370={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2380={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2390={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x23a0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x23b0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x23c0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x23d0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x23e0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x23f0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2400={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2410={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2420={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2430={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2440={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2450={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2460={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2470={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2480={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2490={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x24a0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x24b0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x24c0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x24d0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x24e0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x24f0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2500={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2510={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2520={"size":37,"traced":true,"ninstr":12,"op_pos":[4,6,9,10,13,17,18,19,22,24,31],"sp_delta":[0,0,0,-8,-8,-8,0,8,8,8,8,8],"sp":0}
0x2550={"size":19,"jump":9592,"fail":9571,"traced":true,"ninstr":4,"op_pos":[7,14,17],"sp_delta":[0,0,0,0],"sp":0}
0x2563={"size":12,"jump":9592,"fail":9583,"traced":true,"ninstr":3,"op_pos":[7,10],"sp_delta":[0,0,0],"sp":0}
0x256f={"size":2,"ninstr":1,"sp":0}
0x2578={"size":1,"ninstr":1,"sp":0}
0x2580={"size":36,"jump":9656,"fail":9636,"traced":true,"ninstr":9,"op_pos":[7,14,17,20,24,28,31,34],"sp_delta":[0,0,0,0,0,0,0,0,0],"sp":0}
0x25a4={"size":12,"jump":9656,"fail":9648,"traced":true,"ninstr":3,"op_pos":[7,10],"sp_delta":[0,0,0],"sp":0}
0x25b0={"size":2,"ninstr":1,"sp":0}
0x25b8={"size":1,"ninstr":1,"sp":0}
0x25c0={"size":13,"jump":9720,"fail":9677,"traced":true,"ninstr":3,"op_pos":[4,11],"sp_delta":[0,0,0],"sp":0}
0x25cd={"size":14,"jump":9703,"fail":9691,"traced":true,"ninstr":4,"op_pos":[1,9,12],"sp_delta":[8,8,8,8],"sp":0}
0x25db={"size":12,"jump":9703,"traced":true,"ninstr":2,"op_pos":[7],"sp_delta":[0,0],"sp":8}
0x25e7={"size":14,"traced":true,"ninstr":4,"op_pos":[5,12,13],"sp_delta":[0,0,-8,-16],"sp":8}
0x25f8={"size":1,"ninstr":1,"sp":0}
0x2600={"size":9,"jump":9600,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x2609={"size":79,"jump":10042,"fail":9816,"traced":true,"ninstr":19,"op_pos":[4,5,8,10,11,15,17,26,30,32,39,46,50,56,61,66,71,73],"sp_delta":[0,8,8,16,24,40,40,40,40,40,40,40,40,40,40,40,40,40,40],"sp":0}
0x2658={"size":55,"jump":10059,"fail":9871,"traced":true,"ninstr":14,"op_pos":[5,7,12,15,20,22,27,30,35,37,42,45,49],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sp":40}
0x268f={"size":92,"jump":10076,"fail":9963,"traced":true,"ninstr":19,"op_pos":[5,10,15,22,27,30,35,40,45,52,57,60,65,70,75,82,87,90],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sp":40}
0x26eb={"size":42,"jump":10090,"fail":10005,"traced":true,"ninstr":9,"op_pos":[5,10,17,22,25,32,37,40],"sp_delta":[0,0,0,0,0,0,0,0,0],"sp":40}
0x2715={"size":16,"jump":10104,"fail":10021,"traced":true,"ninstr":5,"op_pos":[5,7,12,14],"sp_delta":[0,0,0,0,0],"sp":40}
0x2725={"size":11,"jump":10118,"fail":10032,"traced":true,"ninstr":4,"op_pos":[2,7,9],"sp_delta":[0,0,0,0],"sp":40}
0x2730={"size":10,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":40}
0x273a={"size":12,"traced":true,"ninstr":3,"op_pos":[7,12],"sp_delta":[0,0,0],"sp":40}
0x274b={"size":12,"traced":true,"ninstr":3,"op_pos":[7,12],"sp_delta":[0,0,0],"sp":40}
0x275c={"size":12,"traced":true,"ninstr":3,"op_pos":[7,12],"sp_delta":[0,0,0],"sp":40}
0x276a={"size":12,"traced":true,"ninstr":3,"op_pos":[7,12],"sp_delta":[0,0,0],"sp":40}
0x2778={"size":12,"traced":true,"ninstr":3,"op_pos":[7,12],"sp_delta":[0,0,0],"sp":40}
0x2786={"size":12,"traced":true,"ninstr":3,"op_pos":[7,12],"sp_delta":[0,0,0],"sp":40}
0x2794={"size":21,"jump":10169,"fail":10153,"traced":true,"ninstr":8,"op_pos":[4,5,8,9,13,16,19],"sp_delta":[0,8,8,16,24,24,24,24],"sp":0,"cmpval":2}
0x27a9={"size":16,"jump":10169,"traced":true,"ninstr":4,"op_pos":[4,9,11],"sp_delta":[0,0,0,0],"sp":24}
0x27b9={"size":12,"traced":true,"ninstr":3,"op_pos":[7,12],"sp_delta":[0,0,0],"sp":24}
0x27c7={"size":189,"jump":10469,"traced":true,"ninstr":49,"op_pos":[4,5,8,12,16,20,24,28,31,36,40,44,47,52,56,61,65,70,74,78,82,87,90,93,98,101,105,109,113,116,119,124,127,131,135,139,142,145,150,153,157,161,166,169,172,177,180,187],"sp_delta":[0,8,8,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88],"sp":0}
0x2884={"size":97,"jump":10469,"traced":true,"ninstr":25,"op_pos":[4,7,12,16,20,25,28,31,36,39,43,47,52,55,58,63,66,70,74,79,82,85,90,93],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sp":88,"cmpval":9999}
0x28e5={"size":9,"jump":10372,"fail":10478,"traced":true,"ninstr":2,"op_pos":[7],"sp_delta":[0,0],"sp":88,"cmpval":9999}
0x28ee={"size":18,"jump":10511,"fail":10496,"traced":true,"ninstr":5,"op_pos":[4,7,12,16],"sp_delta":[0,0,0,0,0],"sp":88,"cmpval":1}
0x2900={"size":15,"jump":10511,"traced":true,"ninstr":3,"op_pos":[7,10],"sp_delta":[0,0,0],"sp":88}
0x290f={"size":3,"traced":true,"ninstr":3,"op_pos":[1,2],"sp_delta":[0,-88,-96],"sp":88}
0x2912={"size":23,"jump":10552,"fail":10537,"traced":true,"ninstr":8,"op_pos":[4,5,8,12,14,17,21],"sp_delta":[0,8,8,24,24,24,24,24],"sp":0,"cmpval":47}
0x2929={"size":6,"jump":10552,"fail":10543,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":24,"cmpval":57}
0x292f={"size":9,"jump":10614,"traced":true,"ninstr":3,"op_pos":[4,7],"sp_delta":[0,0,0],"sp":24}
0x2938={"size":6,"jump":10573,"fail":10558,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":24,"cmpval":96}
0x293e={"size":6,"jump":10573,"fail":10564,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":24,"cmpval":102}
0x2944={"size":9,"jump":10614,"traced":true,"ninstr":3,"op_pos":[4,7],"sp_delta":[0,0,0],"sp":24}
0x294d={"size":6,"jump":10594,"fail":10579,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":24,"cmpval":64}
0x2953={"size":6,"jump":10594,"fail":10585,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":24,"cmpval":70}
0x2959={"size":9,"jump":10614,"traced":true,"ninstr":3,"op_pos":[4,7],"sp_delta":[0,0,0],"sp":24}
0x2962={"size":15,"traced":true,"ninstr":4,"op_pos":[7,10,15],"sp_delta":[0,0,0,0],"sp":24}
0x2976={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"sp_delta":[-24,-32],"sp":24}
0x2978={"size":37,"jump":10693,"fail":10653,"traced":true,"ninstr":12,"op_pos":[4,5,8,9,13,17,21,25,29,32,35],"sp_delta":[0,8,8,16,72,72,72,72,72,72,72,72],"sp":0}
0x299d={"size":40,"traced":true,"ninstr":8,"op_pos":[7,10,15,22,25,32,35],"sp_delta":[0,0,0,0,0,0,0,0],"sp":72}
0x29c5={"size":10,"jump":10792,"traced":true,"ninstr":2,"op_pos":[8],"sp_delta":[0,0],"sp":72}
0x29cf={"size":89,"jump":10792,"traced":true,"ninstr":27,"op_pos":[4,8,12,15,18,21,23,28,31,34,36,40,43,47,51,54,57,60,62,67,69,73,77,80,82,84],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sp":72}
0x2a28={"size":13,"jump":10703,"fail":10805,"traced":true,"ninstr":4,"op_pos":[4,7,11],"sp_delta":[0,0,0,0],"sp":72}
0x2a35={"size":8,"traced":true,"ninstr":5,"op_pos":[1,2,6,7],"sp_delta":[0,0,0,-72,-80],"sp":72}
0x2a3d={"size":72,"jump":10900,"fail":10885,"traced":true,"ninstr":15,"op_pos":[4,5,8,15,22,29,36,43,46,53,56,61,65,70],"sp_delta":[0,8,8,600,600,600,600,600,600,600,600,600,600,600,600],"sp":0}
0x2a85={"size":15,"jump":10900,"traced":true,"ninstr":3,"op_pos":[7,10],"sp_delta":[0,0,0],"sp":600}
0x2a94={"size":13,"jump":11217,"traced":true,"ninstr":2,"op_pos":[8],"sp_delta":[0,0],"sp":600}
0x2aa1={"size":35,"jump":10964,"fail":10948,"traced":true,"ninstr":10,"op_pos":[4,7,12,15,18,21,23,31,33],"sp_delta":[0,0,0,0,0,0,0,0,0,0],"sp":600,"cmpval":10}
0x2ac4={"size":16,"jump":10964,"traced":true,"ninstr":4,"op_pos":[3,6,8],"sp_delta":[0,0,0,0],"sp":600}
0x2ad4={"size":43,"jump":11022,"fail":11007,"traced":true,"ninstr":9,"op_pos":[7,14,21,24,27,32,36,41],"sp_delta":[0,0,0,0,0,0,0,0,0],"sp":600}
0x2aff={"size":15,"jump":11022,"traced":true,"ninstr":3,"op_pos":[7,10],"sp_delta":[0,0,0],"sp":600}
0x2b0e={"size":30,"jump":11217,"fail":11052,"traced":true,"ninstr":7,"op_pos":[4,11,14,17,22,24],"sp_delta":[0,0,0,0,0,0,0],"sp":600}
0x2b2c={"size":41,"jump":11108,"fail":11093,"traced":true,"ninstr":9,"op_pos":[7,10,17,20,25,30,34,39],"sp_delta":[0,0,0,0,0,0,0,0,0],"sp":600}
0x2b55={"size":15,"jump":11108,"traced":true,"ninstr":3,"op_pos":[7,10],"sp_delta":[0,0,0],"sp":600}
0x2b64={"size":63,"jump":11186,"fail":11171,"traced":true,"ninstr":14,"op_pos":[4,11,14,17,22,29,32,39,42,47,52,56,61],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sp":600}
0x2ba3={"size":15,"jump":11186,"traced":true,"ninstr":3,"op_pos":[7,10],"sp_delta":[0,0,0],"sp":600}
0x2bb2={"size":31,"jump":11261,"traced":true,"ninstr":7,"op_pos":[7,11,16,19,24,29],"sp_delta":[0,0,0,0,0,0,0],"sp":600}
0x2bd1={"size":39,"jump":10913,"fail":11256,"traced":true,"ninstr":8,"op_pos":[4,11,16,19,24,28,33],"sp_delta":[0,0,0,0,0,0,0,0],"sp":600}
0x2bf8={"size":5,"jump":11261,"traced":true,"ninstr":1,"sp":600}
0x2bfd={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"sp_delta":[-600,-608],"sp":600}
0x2bff={"size":81,"jump":11359,"fail":11344,"traced":true,"ninstr":19,"op_pos":[4,5,8,15,22,25,30,35,42,45,50,55,59,62,67,71,75,79],"sp_delta":[0,8,8,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168],"sp":0}
0x2c50={"size":15,"jump":11359,"traced":true,"ninstr":3,"op_pos":[7,10],"sp_delta":[0,0,0],"sp":168,"cmpval":10}
0x2c5f={"size":32,"jump":11404,"fail":11391,"traced":true,"ninstr":10,"op_pos":[4,7,12,15,18,21,23,28,30],"sp_delta":[0,0,0,0,0,0,0,0,0,0],"sp":168,"cmpval":10}
0x2c7f={"size":13,"jump":11404,"traced":true,"ninstr":4,"op_pos":[3,6,8],"sp_delta":[0,0,0,0],"sp":168,"cmpval":1}
0x2c8c={"size":35,"jump":11464,"fail":11439,"traced":true,"ninstr":9,"op_pos":[7,11,15,18,21,26,29,33],"sp_delta":[0,0,0,0,0,0,0,0,0],"sp":168,"cmpval":1}
0x2caf={"size":25,"jump":11640,"traced":true,"ninstr":5,"op_pos":[7,10,15,20],"sp_delta":[0,0,0,0,0],"sp":168}
0x2cc8={"size":46,"jump":11525,"fail":11510,"traced":true,"ninstr":11,"op_pos":[7,10,15,20,24,27,32,36,40,44],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0],"sp":168}
0x2cf6={"size":15,"jump":11525,"traced":true,"ninstr":3,"op_pos":[7,10],"sp_delta":[0,0,0],"sp":168,"cmpval":10}
0x2d05={"size":32,"jump":11570,"fail":11557,"traced":true,"ninstr":10,"op_pos":[4,7,12,15,18,21,23,28,30],"sp_delta":[0,0,0,0,0,0,0,0,0,0],"sp":168,"cmpval":10}
0x2d25={"size":13,"jump":11570,"traced":true,"ninstr":4,"op_pos":[3,6,8],"sp_delta":[0,0,0,0],"sp":168}
0x2d32={"size":54,"jump":11633,"fail":11624,"traced":true,"ninstr":14,"op_pos":[4,8,12,15,18,23,30,34,39,42,45,50,52],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sp":168}
0x2d68={"size":9,"jump":11640,"traced":true,"ninstr":2,"op_pos":[7],"sp_delta":[0,0],"sp":168}
0x2d71={"size":7,"jump":11640,"traced":true,"ninstr":1,"sp":168,"cmpval":1}
0x2d78={"size":6,"jump":11753,"fail":11646,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":168}
0x2d7e={"size":53,"jump":11731,"fail":11699,"traced":true,"ninstr":13,"op_pos":[4,7,14,17,22,27,31,38,41,44,49,51],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0,0],"sp":168}
0x2db3={"size":32,"jump":11773,"traced":true,"ninstr":7,"op_pos":[7,10,15,20,25,30],"sp_delta":[0,0,0,0,0,0,0],"sp":168}
0x2dd3={"size":22,"jump":11773,"traced":true,"ninstr":5,"op_pos":[7,10,15,20],"sp_delta":[0,0,0,0,0],"sp":168}
0x2de9={"size":20,"jump":11773,"traced":true,"ninstr":4,"op_pos":[7,10,15],"sp_delta":[0,0,0,0],"sp":168}
0x2dfd={"size":23,"traced":true,"ninstr":7,"op_pos":[7,10,15,20,21,22],"sp_delta":[0,0,0,0,0,-168,-176],"sp":168}
0x2e14={"size":59,"traced":true,"ninstr":13,"op_pos":[4,5,8,13,18,20,27,32,39,44,49,54],"sp_delta":[0,8,8,8,8,8,8,8,8,8,8,8,8],"sp":0}
0x2e4f={"size":31,"jump":11962,"fail":11886,"traced":true,"ninstr":11,"op_pos":[4,5,8,10,12,13,17,20,25,29],"sp_delta":[0,8,8,16,24,32,40,40,40,40,40],"sp":0}
0x2e6e={"size":25,"jump":11974,"fail":11911,"traced":true,"ninstr":7,"op_pos":[3,8,13,16,21,23],"sp_delta":[0,0,0,0,0,0,0],"sp":40}
0x2e87={"size":17,"jump":11986,"fail":11928,"traced":true,"ninstr":5,"op_pos":[3,8,11,15],"sp_delta":[0,0,0,0,0],"sp":40}
0x2e98={"size":20,"jump":11998,"fail":11948,"traced":true,"ninstr":6,"op_pos":[5,8,11,16,18],"sp_delta":[0,0,0,0,0,0],"sp":40}
0x2eac={"size":14,"traced":true,"ninstr":7,"op_pos":[3,7,8,10,12,13],"sp_delta":[0,-8,-16,-24,-32,-40,-48],"sp":40}
0x2eba={"size":12,"jump":11974,"traced":true,"ninstr":2,"op_pos":[7],"sp_delta":[0,0],"sp":40}
0x2ec6={"size":12,"jump":11986,"traced":true,"ninstr":2,"op_pos":[7],"sp_delta":[0,0],"sp":40}
0x2ed2={"size":12,"jump":11998,"traced":true,"ninstr":2,"op_pos":[7],"sp_delta":[0,0],"sp":40}
0x2ede={"size":12,"jump":12010,"traced":true,"ninstr":2,"op_pos":[7],"sp_delta":[0,0],"sp":40}
0x2eea={"size":60,"jump":12134,"fail":12070,"traced":true,"ninstr":17,"op_pos":[4,5,8,10,12,13,20,22,25,28,37,41,43,50,55,58],"sp_delta":[0,8,8,16,24,32,200,200,200,200,200,200,200,200,200,200,200],"sp":0}
0x2f26={"size":35,"jump":12146,"fail":12105,"traced":true,"ninstr":8,"op_pos":[7,11,18,23,25,30,33],"sp_delta":[0,0,0,0,0,0,0,0],"sp":200}
0x2f49={"size":15,"jump":12158,"fail":12120,"traced":true,"ninstr":3,"op_pos":[4,13],"sp_delta":[0,0,0],"sp":200}
0x2f58={"size":14,"traced":true,"ninstr":6,"op_pos":[7,8,10,12,13],"sp_delta":[-168,-176,-184,-192,-200,-208],"sp":200}
0x2f66={"size":12,"jump":12146,"traced":true,"ninstr":2,"op_pos":[7],"sp_delta":[0,0],"sp":200}
0x2f72={"size":12,"jump":12158,"traced":true,"ninstr":2,"op_pos":[7],"sp_delta":[0,0],"sp":200}
0x2f7e={"size":5,"ninstr":1,"sp":200}
0x2f83={"size":40,"jump":12267,"fail":12203,"traced":true,"ninstr":14,"op_pos":[4,5,8,10,12,14,15,18,21,26,31,36,38],"sp_delta":[0,8,8,16,24,32,40,40,40,40,40,40,40,40],"sp":0}
0x2fab={"size":31,"jump":12326,"fail":12234,"traced":true,"ninstr":10,"op_pos":[2,5,10,13,16,18,23,26,29],"sp_delta":[0,0,0,0,0,0,0,0,0,0],"sp":40}
0x2fca={"size":13,"jump":12326,"fail":12247,"traced":true,"ninstr":4,"op_pos":[3,8,11],"sp_delta":[0,0,0,0],"sp":40}
0x2fd7={"size":11,"jump":12385,"fail":12258,"traced":true,"ninstr":4,"op_pos":[2,7,9],"sp_delta":[0,0,0,0],"sp":40}
0x2fe2={"size":9,"traced":true,"ninstr":6,"op_pos":[1,3,5,7,8],"sp_delta":[-8,-16,-24,-32,-40,-48],"sp":40}
0x2feb={"size":59,"jump":12326,"traced":true,"ninstr":12,"op_pos":[5,7,12,15,18,25,30,37,42,47,54],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0],"sp":40}
0x3026={"size":59,"jump":12385,"traced":true,"ninstr":12,"op_pos":[5,7,12,15,18,25,30,37,42,47,54],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0],"sp":40}
0x3061={"size":44,"jump":12429,"traced":true,"ninstr":8,"op_pos":[3,10,15,22,27,32,39],"sp_delta":[0,0,0,0,0,0,0,0],"sp":40}
0x308d={"size":68,"jump":12647,"fail":12497,"traced":true,"ninstr":17,"op_pos":[4,5,8,10,12,14,15,22,31,35,37,44,51,56,59,62],"sp_delta":[0,8,8,16,24,32,40,1080,1080,1080,1080,1080,1080,1080,1080,1080,1080],"sp":0}
0x30d1={"size":23,"jump":12664,"fail":12520,"traced":true,"ninstr":5,"op_pos":[3,8,11,17],"sp_delta":[0,0,0,0,0],"sp":1080,"cmpval":1023}
0x30e8={"size":28,"jump":12596,"fail":12548,"traced":true,"ninstr":7,"op_pos":[7,12,17,20,23,26],"sp_delta":[0,0,0,0,0,0,0],"sp":1080}
0x3104={"size":11,"jump":12559,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":1080}
0x310f={"size":35,"jump":12559,"fail":12594,"traced":true,"ninstr":9,"op_pos":[3,6,14,17,22,27,30,33],"sp_delta":[0,0,0,0,0,0,0,0,0],"sp":1080}
0x3132={"size":2,"jump":12695,"fail":12596,"ninstr":1,"sp":1080}
0x3134={"size":35,"jump":12726,"fail":12631,"traced":true,"ninstr":7,"op_pos":[3,8,15,20,24,33],"sp_delta":[0,0,0,0,0,0,0],"sp":1080}
0x3157={"size":16,"traced":true,"ninstr":7,"op_pos":[7,8,10,12,14,15],"sp_delta":[-1040,-1048,-1056,-1064,-1072,-1080,-1088],"sp":1080}
0x3167={"size":12,"traced":true,"ninstr":3,"op_pos":[7,12],"sp_delta":[0,0,0],"sp":1080}
0x3178={"size":31,"traced":true,"ninstr":5,"op_pos":[7,12,19,26],"sp_delta":[0,0,0,0,0],"sp":1080}
0x3197={"size":31,"traced":true,"ninstr":5,"op_pos":[7,12,19,26],"sp_delta":[0,0,0,0,0],"sp":1080}
0x31b6={"size":5,"ninstr":1,"sp":1080}
0x31bc={"size":13,"traced":true,"ninstr":4,"op_pos":[4,8,12],"sp_delta":[0,8,0,-8],"sp":0}

/core/analysis/callables
_Exit=func
__assert_fail=func
__bzero=func
__cxa_throw=func
__error=func
__libc_init=func
__libc_init_array=func
__libc_start_main=func
__maskrune=func
__stack_chk_fail=func
__tolower=func
__toupper=func
__uClibc_main=func
_exit=func
abort=func
abs=func
access=func
acos=func
acosf=func
acosh=func
acoshf=func
acoshl=func
acosl=func
aligned_alloc=func
arc4random=func
asctime=func
asin=func
asinf=func
asinh=func
asinhf=func
asinhl=func
asinl=func
at_quick_exit=func
atan=func
atan2=func
atan2f=func
atan2l=func
atanf=func
atanh=func
atanhf=func
atanhl=func
atanl=func
atexit=func
atof=func
atoi=func
atol=func
atoll=func
basename=func
bind=func
bindtextdomain=func
bsearch=func
btowc=func
bzero=func
calloc=func
cbrt=func
cbrtf=func
cbrtl=func
ceil=func
ceilf=func
ceill=func
chmod=func
clearerr=func
clock=func
close=func
compat_mode=func
connect=func
copysign=func
copysignf=func
copysignl=func
cos=func
cosf=func
cosh=func
coshf=func
coshl=func
cosl=func
ctime=func
difftime=func
div=func
entry.init0=func
entry0=func
erf=func
erfc=func
erfcf=func
erfcl=func
erff=func
erfl=func
err=func
errc=func
error=func
errx=func
exit=func
exp=func
exp2=func
exp2f=func
exp2l=func
expf=func
expl=func
expm1=func
expm1f=func
expm1l=func
fabs=func
fabsf=func
fabsl=func
fchmod=func
fclose=func
fdim=func
fdimf=func
fdiml=func
feclearexcept=func
fegetenv=func
fegetexceptflag=func
fegetround=func
feholdexcept=func
feof=func
feraiseexcept=func
ferror=func
fesetenv=func
fesetexceptflag=func
fesetround=func
fetestexcept=func
feupdateenv=func
fflush=func
fgetc=func
fgetpos=func
fgets=func
fgetwc=func
fgetws=func
fileno=func
floor=func
floorf=func
floorl=func
fma=func
fmaf=func
fmal=func
fmax=func
fmaxf=func
fmaxl=func
fmin=func
fminf=func
fminl=func
fmod=func
fmodf=func
fmodl=func
fopen=func
fpclassify=func
fprintf=func
fputc=func
fputs=func
fputwc=func
fputws=func
fread=func
free=func
freopen=func
frexp=func
frexpf=func
frexpl=func
fscanf=func
fseek=func
fsetpos=func
fstat=func
ftell=func
fts_children_INODE64=func
fts_close_INODE64=func
fts_open_INODE64=func
fts_read_INODE64=func
fts_set_INODE64=func
func._Exit.arg.0=int,status
func._Exit.args=0x1
func._Exit.noreturn=true
func._Exit.ret=void
func.__assert_fail.arg.0=const char *,function
func.__assert_fail.args=0x4
func.__assert_fail.noreturn=true
func.__assert_fail.ret=void
func.__bzero.arg.0=size_t,n
func.__bzero.args=0x2
func.__bzero.ret=void
func.__cxa_throw.arg.0=void *,dest
func.__cxa_throw.args=0x3
func.__cxa_throw.noreturn=true
func.__cxa_throw.ret=void
func.__error.arg.0=char *,format
func.__error.args=0x3
func.__error.ret=void
func.__libc_init.arg.0=char **,envp
func.__libc_init.args=0x3
func.__libc_init.noreturn=true
func.__libc_init.ret=void
func.__libc_init_array.args=0
func.__libc_init_array.ret=void
func.__libc_start_main.arg.0=void *,stack_end
func.__libc_start_main.args=0x7
func.__libc_start_main.noreturn=true
func.__libc_start_main.ret=int
func.__maskrune.arg.0=long,f
func.__maskrune.args=0x2
func.__maskrune.ret=int
func.__stack_chk_fail.args=0
func.__stack_chk_fail.noreturn=true
func.__stack_chk_fail.ret=void
func.__tolower.arg.0=int,c
func.__tolower.args=0x1
func.__tolower.ret=int
func.__toupper.arg.0=int,c
func.__toupper.args=0x1
func.__toupper.ret=int
func.__uClibc_main.arg.0=void *,stack_end
func.__uClibc_main.args=0x7
func.__uClibc_main.noreturn=true
func.__uClibc_main.ret=int
func._exit.arg.0=int,status
func._exit.args=0x1
func._exit.noreturn=true
func._exit.ret=void
func.abort.args=0
func.abort.noreturn=true
func.abort.ret=void
func.abs.arg.0=int,j
func.abs.args=0x1
func.abs.ret=int
func.access.arg.0=enum access_perm,mode
func.access.args=0x2
func.access.ret=int
func.acos.arg.0=double,x
func.acos.args=0x1
func.acos.ret=double
func.acosf.arg.0=float,x
func.acosf.args=0x1
func.acosf.ret=float
func.acosh.arg.0=double,x
func.acosh.args=0x1
func.acosh.ret=double
func.acoshf.arg.0=float,x
func.acoshf.args=0x1
func.acoshf.ret=float
func.acoshl.arg.0=long double,x
func.acoshl.args=0x1
func.acoshl.ret=long double
func.acosl.arg.0=long double,x
func.acosl.args=0x1
func.acosl.ret=long double
func.aligned_alloc.arg.0=size_t,size
func.aligned_alloc.args=0x2
func.aligned_alloc.ret=void
func.arc4random.args=0
func.arc4random.ret=uint32_t
func.asctime.arg.0=struct tm *,timeptr
func.asctime.args=0x1
func.asctime.ret=char *
func.asin.arg.0=double,x
func.asin.args=0x1
func.asin.ret=double
func.asinf.arg.0=float,x
func.asinf.args=0x1
func.asinf.ret=float
func.asinh.arg.0=double,x
func.asinh.args=0x1
func.asinh.ret=double
func.asinhf.arg.0=float,x
func.asinhf.args=0x1
func.asinhf.ret=float
func.asinhl.arg.0=long double,x
func.asinhl.args=0x1
func.asinhl.ret=long double
func.asinl.arg.0=long double,x
func.asinl.args=0x1
func.asinl.ret=long double
func.at_quick_exit.args=0
func.at_quick_exit.ret=int
func.atan.arg.0=double,x
func.atan.args=0x1
func.atan.ret=double
func.atan2.arg.0=double,x
func.atan2.args=0x2
func.atan2.ret=double
func.atan2f.arg.0=float,x
func.atan2f.args=0x2
func.atan2f.ret=float
func.atan2l.arg.0=long double,x
func.atan2l.args=0x2
func.atan2l.ret=long double
func.atanf.arg.0=float,x
func.atanf.args=0x1
func.atanf.ret=float
func.atanh.arg.0=double,x
func.atanh.args=0x1
func.atanh.ret=double
func.atanhf.arg.0=float,x
func.atanhf.args=0x1
func.atanhf.ret=float
func.atanhl.arg.0=long double,x
func.atanhl.args=0x1
func.atanhl.ret=long double
func.atanl.arg.0=long double,x
func.atanl.args=0x1
func.atanl.ret=long double
func.atexit.arg.0=void *,function
func.atexit.args=0x1
func.atexit.ret=int
func.atof.arg.0=const char *,str
func.atof.args=0x1
func.atof.ret=double
func.atoi.arg.0=const char *,str
func.atoi.args=0x1
func.atoi.ret=int
func.atol.arg.0=const char *,str
func.atol.args=0x1
func.atol.ret=long
func.atoll.arg.0=const char *,str
func.atoll.args=0x1
func.atoll.ret=long long
func.basename.arg.0=char *,path
func.basename.args=0x1
func.basename.ret=char *
func.bind.arg.0=socklen_t,address_len
func.bind.args=0x3
func.bind.ret=int
func.bindtextdomain.arg.0=char *,dirname
func.bindtextdomain.args=0x2
func.bindtextdomain.ret=char *
func.bsearch.arg.0=void *,compar
func.bsearch.args=0x5
func.bsearch.ret=void *
func.btowc.arg.0=int,c
func.btowc.args=0x1
func.btowc.ret=wint_t
func.bzero.arg.0=size_t,n
func.bzero.args=0x2
func.bzero.ret=void
func.calloc.arg.0=size_t,size
func.calloc.args=0x2
func.calloc.ret=void *
func.cbrt.arg.0=double,x
func.cbrt.args=0x1
func.cbrt.ret=double
func.cbrtf.arg.0=float,x
func.cbrtf.args=0x1
func.cbrtf.ret=float
func.cbrtl.arg.0=long double,x
func.cbrtl.args=0x1
func.cbrtl.ret=long double
func.ceil.arg.0=double,x
func.ceil.args=0x1
func.ceil.ret=double
func.ceilf.arg.0=float,x
func.ceilf.args=0x1
func.ceilf.ret=float
func.ceill.arg.0=long double,x
func.ceill.args=0x1
func.ceill.ret=long double
func.chmod.arg.0=int,mode
func.chmod.args=0x2
func.chmod.ret=int
func.clearerr.arg.0=FILE *,stream
func.clearerr.args=0x1
func.clearerr.ret=void
func.clock.args=0
func.clock.ret=clock_t
func.close.arg.0=int,fildes
func.close.args=0x1
func.close.ret=int
func.compat_mode.arg.0=const char *,mode
func.compat_mode.args=0x2
func.compat_mode.ret=bool
func.connect.arg.0=size_t,addrlen
func.connect.args=0x3
func.connect.ret=ssize_t
func.copysign.arg.0=double,y
func.copysign.args=0x2
func.copysign.ret=double
func.copysignf.arg.0=float,y
func.copysignf.args=0x2
func.copysignf.ret=float
func.copysignl.arg.0=long double,y
func.copysignl.args=0x2
func.copysignl.ret=long double
func.cos.arg.0=double,x
func.cos.args=0x1
func.cos.ret=double
func.cosf.arg.0=float,x
func.cosf.args=0x1
func.cosf.ret=float
func.cosh.arg.0=double,x
func.cosh.args=0x1
func.cosh.ret=double
func.coshf.arg.0=float,x
func.coshf.args=0x1
func.coshf.ret=float
func.coshl.arg.0=long double,x
func.coshl.args=0x1
func.coshl.ret=long double
func.cosl.arg.0=long double,x
func.cosl.args=0x1
func.cosl.ret=long double
func.ctime.arg.0=time_t *,timer
func.ctime.args=0x1
func.ctime.ret=char *
func.difftime.arg.0=time_t,time0
func.difftime.args=0x2
func.difftime.ret=double
func.div.arg.0=int,denom
func.div.args=0x2
func.div.ret=div_t
func.entry.init0.args=0
func.entry0.arg.0=void *,rtld_fini
func.entry0.args=0x1
func.erf.arg.0=double,x
func.erf.args=0x1
func.erf.ret=double
func.erfc.arg.0=double,x
func.erfc.args=0x1
func.erfc.ret=double
func.erfcf.arg.0=float,x
func.erfcf.args=0x1
func.erfcf.ret=float
func.erfcl.arg.0=long double,x
func.erfcl.args=0x1
func.erfcl.ret=long double
func.erff.arg.0=float,x
func.erff.args=0x1
func.erff.ret=float
func.erfl.arg.0=long double,x
func.erfl.args=0x1
func.erfl.ret=long double
func.err.arg.0=int,eval
func.err.args=0x1
func.err.noreturn=true
func.err.ret=void
func.errc.arg.0=int,eval
func.errc.args=0x1
func.errc.noreturn=true
func.errc.ret=void
func.error.arg.0=char *,format
func.error.args=0x3
func.error.ret=void
func.errx.arg.0=int,eval
func.errx.args=0x1
func.errx.noreturn=true
func.errx.ret=void
func.exit.arg.0=int,status
func.exit.args=0x1
func.exit.noreturn=true
func.exit.ret=void
func.exp.arg.0=double,x
func.exp.args=0x1
func.exp.ret=double
func.exp2.arg.0=double,x
func.exp2.args=0x1
func.exp2.ret=double
func.exp2f.arg.0=float,x
func.exp2f.args=0x1
func.exp2f.ret=float
func.exp2l.arg.0=long double,x
func.exp2l.args=0x1
func.exp2l.ret=long double
func.expf.arg.0=float,x
func.expf.args=0x1
func.expf.ret=float
func.expl.arg.0=long double,x
func.expl.args=0x1
func.expl.ret=long double
func.expm1.arg.0=double,x
func.expm1.args=0x1
func.expm1.ret=double
func.expm1f.arg.0=float,x
func.expm1f.args=0x1
func.expm1f.ret=float
func.expm1l.arg.0=long double,x
func.expm1l.args=0x1
func.expm1l.ret=long double
func.fabs.arg.0=double,x
func.fabs.args=0x1
func.fabs.ret=double
func.fabsf.arg.0=float,x
func.fabsf.args=0x1
func.fabsf.ret=float
func.fabsl.arg.0=long double,x
func.fabsl.args=0x1
func.fabsl.ret=long double
func.fchmod.arg.0=int,mode
func.fchmod.args=0x2
func.fchmod.ret=int
func.fclose.arg.0=FILE *,stream
func.fclose.args=0x1
func.fclose.ret=int
func.fdim.arg.0=double,y
func.fdim.args=0x2
func.fdim.ret=double
func.fdimf.arg.0=float,y
func.fdimf.args=0x2
func.fdimf.ret=float
func.fdiml.arg.0=long double,y
func.fdiml.args=0x2
func.fdiml.ret=long double
func.feclearexcept.arg.0=int,excepts
func.feclearexcept.args=0x1
func.feclearexcept.ret=int
func.fegetenv.arg.0=fenv_t *,envp
func.fegetenv.args=0x1
func.fegetenv.ret=int
func.fegetexceptflag.arg.0=int,excepts
func.fegetexceptflag.args=0x2
func.fegetexceptflag.ret=int
func.fegetround.args=0
func.fegetround.ret=int
func.feholdexcept.arg.0=fenv_t *,envp
func.feholdexcept.args=0x1
func.feholdexcept.ret=int
func.feof.arg.0=FILE *,stream
func.feof.args=0x1
func.feof.ret=int
func.feraiseexcept.arg.0=int,excepts
func.feraiseexcept.args=0x1
func.feraiseexcept.ret=int
func.ferror.arg.0=FILE *,stream
func.ferror.args=0x1
func.ferror.ret=int
func.fesetenv.arg.0=fenv_t *,arg
func.fesetenv.args=0x1
func.fesetenv.ret=int
func.fesetexceptflag.arg.0=int,excepts
func.fesetexceptflag.args=0x2
func.fesetexceptflag.ret=int
func.fesetround.arg.0=int,round
func.fesetround.args=0x1
func.fesetround.ret=int
func.fetestexcept.arg.0=int,excepts
func.fetestexcept.args=0x1
func.fetestexcept.ret=int
func.feupdateenv.arg.0=fenv_t *,arg
func.feupdateenv.args=0x1
func.feupdateenv.ret=int
func.fflush.arg.0=FILE *,stream
func.fflush.args=0x1
func.fflush.ret=int
func.fgetc.arg.0=FILE *,stream
func.fgetc.args=0x1
func.fgetc.ret=int
func.fgetpos.arg.0=fpos_t *,pos
func.fgetpos.args=0x2
func.fgetpos.ret=int
func.fgets.arg.0=FILE *,stream
func.fgets.args=0x3
func.fgets.ret=char *
func.fgetwc.arg.0=FILE *,stream
func.fgetwc.args=0x1
func.fgetwc.ret=wint_t
func.fgetws.arg.0=FILE *,stream
func.fgetws.args=0x3
func.fgetws.ret=wchar_t *
func.fileno.arg.0=FILE *,stream
func.fileno.args=0x1
func.fileno.ret=int
func.floor.arg.0=double,x
func.floor.args=0x1
func.floor.ret=double
func.floorf.arg.0=float,x
func.floorf.args=0x1
func.floorf.ret=float
func.floorl.arg.0=long double,x
func.floorl.args=0x1
func.floorl.ret=long double
func.fma.arg.0=double,z
func.fma.args=0x3
func.fma.ret=double
func.fmaf.arg.0=float,z
func.fmaf.args=0x3
func.fmaf.ret=float
func.fmal.arg.0=long double,z
func.fmal.args=0x3
func.fmal.ret=long double
func.fmax.arg.0=double,y
func.fmax.args=0x2
func.fmax.ret=double
func.fmaxf.arg.0=float,y
func.fmaxf.args=0x2
func.fmaxf.ret=float
func.fmaxl.arg.0=long double,y
func.fmaxl.args=0x2
func.fmaxl.ret=long double
func.fmin.arg.0=double,y
func.fmin.args=0x2
func.fmin.ret=double
func.fminf.arg.0=float,y
func.fminf.args=0x2
func.fminf.ret=float
func.fminl.arg.0=long double,y
func.fminl.args=0x2
func.fminl.ret=long double
func.fmod.arg.0=double,y
func.fmod.args=0x2
func.fmod.ret=double
func.fmodf.arg.0=float,y
func.fmodf.args=0x2
func.fmodf.ret=float
func.fmodl.arg.0=long double,y
func.fmodl.args=0x2
func.fmodl.ret=long double
func.fopen.arg.0=const char *,mode
func.fopen.args=0x2
func.fopen.ret=FILE *
func.fpclassify.arg.0=double,x
func.fpclassify.args=0x1
func.fpclassify.ret=int
func.fprintf.arg.0=void *,va_args
func.fprintf.args=0x3
func.fprintf.ret=int
func.fputc.arg.0=FILE *,stream
func.fputc.args=0x2
func.fputc.ret=int
func.fputs.arg.0=FILE *,stream
func.fputs.args=0x2
func.fputs.ret=int
func.fputwc.arg.0=FILE *,stream
func.fputwc.args=0x2
func.fputwc.ret=wint_t
func.fputws.arg.0=FILE *,stream
func.fputws.args=0x2
func.fputws.ret=int
func.fread.arg.0=FILE *,stream
func.fread.args=0x4
func.fread.ret=size_t
func.free.arg.0=void *,ptr
func.free.args=0x1
func.free.ret=void
func.freopen.arg.0=FILE *,stream
func.freopen.args=0x3
func.freopen.ret=FILE *
func.frexp.arg.0=int *,exp
func.frexp.args=0x2
func.frexp.ret=double
func.frexpf.arg.0=int *,exp
func.frexpf.args=0x2
func.frexpf.ret=float
func.frexpl.arg.0=int *,exp
func.frexpl.args=0x2
func.frexpl.ret=long double
func.fscanf.arg.0=void *,va_args
func.fscanf.args=0x3
func.fscanf.ret=int
func.fseek.arg.0=int,whence
func.fseek.args=0x3
func.fseek.ret=int
func.fsetpos.arg.0=fpos_t *,pos
func.fsetpos.args=0x2
func.fsetpos.ret=int
func.fstat.arg.0=void *,buf
func.fstat.args=0x2
func.fstat.ret=int
func.ftell.arg.0=FILE *,stream
func.ftell.args=0x1
func.ftell.ret=long
func.fts_children_INODE64.arg.0=int,opotions
func.fts_children_INODE64.args=0x2
func.fts_children_INODE64.ret=void *
func.fts_close_INODE64.arg.0=void *,ftsp
func.fts_close_INODE64.args=0x1
func.fts_close_INODE64.ret=int
func.fts_open_INODE64.arg.0=void *,ftsen_INODE64t
func.fts_open_INODE64.args=0x4
func.fts_open_INODE64.ret=void *
func.fts_read_INODE64.arg.0=void *,ftsp
func.fts_read_INODE64.args=0x1
func.fts_read_INODE64.ret=void *
func.fts_set_INODE64.arg.0=int,options
func.fts_set_INODE64.args=0x3
func.fts_set_INODE64.ret=int
func.fwide.arg.0=int,mode
func.fwide.args=0x2
func.fwide.ret=int
func.fwprintf.arg.0=wchar_t *,format
func.fwprintf.args=0x2
func.fwprintf.ret=int
func.fwrite.arg.0=FILE *,stream
func.fwrite.args=0x4
func.fwrite.ret=size_t
func.fwscanf.arg.0=wchar_t *,format
func.fwscanf.args=0x2
func.fwscanf.ret=int
func.getc.arg.0=FILE *,stream
func.getc.args=0x1
func.getc.ret=int
func.getchar.args=0
func.getchar.ret=int
func.getenv.arg.0=const char *,name
func.getenv.args=0x1
func.getenv.ret=char *
func.geteuid.args=0
func.geteuid.ret=uid_t
func.getopt.arg.0=const char *,optstring
func.getopt.args=0x3
func.getopt.ret=int
func.getpid.args=0
func.getpid.ret=int
func.getprogname.args=0
func.getprogname.ret=const char *
func.gets.arg.0=char *,s
func.gets.args=0x1
func.gets.ret=char *
func.getsockname.arg.0=socklen_t *,addrlen
func.getsockname.args=0x3
func.getsockname.ret=int
func.getsockopt.arg.0=socklen_t *,optlen
func.getsockopt.args=0x5
func.getsockopt.ret=int
func.getuid.args=0
func.getuid.ret=uid_t
func.getwc.arg.0=FILE *,stream
func.getwc.args=0x1
func.getwc.ret=wint_t
func.getwchar.args=0
func.getwchar.ret=wint_t
func.gmtime.arg.0=time_t *,timer
func.gmtime.args=0x1
func.gmtime.ret=struct tm *
func.group_from_gid.arg.0=int,nogroup
func.group_from_gid.args=0x2
func.group_from_gid.ret=char *
func.humanize_number.arg.0=char *,buf
func.humanize_number.args=0x1
func.humanize_number.ret=int
func.hypot.arg.0=double,y
func.hypot.args=0x2
func.hypot.ret=double
func.hypotf.arg.0=float,y
func.hypotf.args=0x2
func.hypotf.ret=float
func.hypotl.arg.0=long double,y
func.hypotl.args=0x2
func.hypotl.ret=long double
func.ilogb.arg.0=double,x
func.ilogb.args=0x1
func.ilogb.ret=int
func.ilogbf.arg.0=float,x
func.ilogbf.args=0x1
func.ilogbf.ret=int
func.ilogbl.arg.0=long double,x
func.ilogbl.args=0x1
func.ilogbl.ret=int
func.imaxabs.arg.0=intmax_t,j
func.imaxabs.args=0x1
func.imaxabs.ret=intmax_t
func.imaxdiv.arg.0=intmax_t,denom
func.imaxdiv.args=0x2
func.imaxdiv.ret=imaxdiv_t
func.inet_aton.arg.0=void *,pin
func.inet_aton.args=0x2
func.inet_aton.ret=int
func.inet_ntoa.arg.0=void *,in
func.inet_ntoa.args=0x1
func.inet_ntoa.ret=char *
func.initstate.arg.0=size_t,size
func.initstate.args=0x3
func.initstate.ret=char *
func.ioctl.arg.0=unsigned long,request
func.ioctl.args=0x2
func.ioctl.ret=int
func.isalnum.arg.0=int,c
func.isalnum.args=0x1
func.isalnum.ret=int
func.isalpha.arg.0=int,c
func.isalpha.args=0x1
func.isalpha.ret=int
func.isatty.arg.0=int,fd
func.isatty.args=0x1
func.isatty.ret=int
func.isblank.arg.0=int,c
func.isblank.args=0x1
func.isblank.ret=int
func.iscntrl.arg.0=int,c
func.iscntrl.args=0x1
func.iscntrl.ret=int
func.isdigit.arg.0=int,c
func.isdigit.args=0x1
func.isdigit.ret=int
func.isfinite.arg.0=double,x
func.isfinite.args=0x1
func.isfinite.ret=bool
func.isgraph.arg.0=int,c
func.isgraph.args=0x1
func.isgraph.ret=int
func.isgreater.arg.0=double,y
func.isgreater.args=0x2
func.isgreater.ret=bool
func.isgreaterequal.arg.0=double,y
func.isgreaterequal.args=0x2
func.isgreaterequal.ret=bool
func.isinf.arg.0=double,x
func.isinf.args=0x1
func.isinf.ret=bool
func.isless.arg.0=double,y
func.isless.args=0x2
func.isless.ret=bool
func.islessequal.arg.0=double,y
func.islessequal.args=0x2
func.islessequal.ret=bool
func.islessgreater.arg.0=double,y
func.islessgreater.args=0x2
func.islessgreater.ret=bool
func.islower.arg.0=int,c
func.islower.args=0x1
func.islower.ret=int
func.isnan.arg.0=double,x
func.isnan.args=0x1
func.isnan.ret=bool
func.isnormal.arg.0=double,x
func.isnormal.args=0x1
func.isnormal.ret=bool
func.isprint.arg.0=int,c
func.isprint.args=0x1
func.isprint.ret=int
func.ispunct.arg.0=int,c
func.ispunct.args=0x1
func.ispunct.ret=int
func.isspace.arg.0=int,c
func.isspace.args=0x1
func.isspace.ret=int
func.isunordered.arg.0=double,y
func.isunordered.args=0x2
func.isunordered.ret=bool
func.isupper.arg.0=int,c
func.isupper.args=0x1
func.isupper.ret=int
func.iswalnum.arg.0=wint_t,wc
func.iswalnum.args=0x1
func.iswalnum.ret=int
func.iswalpha.arg.0=wint_t,wc
func.iswalpha.args=0x1
func.iswalpha.ret=int
func.iswblank.arg.0=wint_t,wc
func.iswblank.args=0x1
func.iswblank.ret=int
func.iswcntrl.arg.0=wint_t,wc
func.iswcntrl.args=0x1
func.iswcntrl.ret=int
func.iswctype.arg.0=wctype_t,desc
func.iswctype.args=0x2
func.iswctype.ret=int
func.iswdigit.arg.0=wint_t,wc
func.iswdigit.args=0x1
func.iswdigit.ret=int
func.iswgraph.arg.0=wint_t,wc
func.iswgraph.args=0x1
func.iswgraph.ret=int
func.iswlower.arg.0=wint_t,wc
func.iswlower.args=0x1
func.iswlower.ret=int
func.iswprint.arg.0=wint_t,wc
func.iswprint.args=0x1
func.iswprint.ret=int
func.iswpunct.arg.0=wint_t,wc
func.iswpunct.args=0x1
func.iswpunct.ret=int
func.iswspace.arg.0=wint_t,wc
func.iswspace.args=0x1
func.iswspace.ret=int
func.iswupper.arg.0=wint_t,wc
func.iswupper.args=0x1
func.iswupper.ret=int
func.iswxdigit.arg.0=wint_t,wc
func.iswxdigit.args=0x1
func.iswxdigit.ret=int
func.isxdigit.arg.0=int,c
func.isxdigit.args=0x1
func.isxdigit.ret=int
func.kill.arg.0=int,sig
func.kill.args=0x2
func.kill.ret=int
func.labs.arg.0=long,j
func.labs.args=0x1
func.labs.ret=long
func.ldexp.arg.0=int,exp
func.ldexp.args=0x2
func.ldexp.ret=double
func.ldexpf.arg.0=int,exp
func.ldexpf.args=0x2
func.ldexpf.ret=float
func.ldexpl.arg.0=int,exp
func.ldexpl.args=0x2
func.ldexpl.ret=long double
func.ldiv.arg.0=long,denom
func.ldiv.args=0x2
func.ldiv.ret=ldiv_t
func.lgamma.arg.0=double,x
func.lgamma.args=0x1
func.lgamma.ret=double
func.lgammaf.arg.0=float,x
func.lgammaf.args=0x1
func.lgammaf.ret=float
func.lgammal.arg.0=long double,x
func.lgammal.args=0x1
func.lgammal.ret=long double
func.llabs.arg.0=long long,j
func.llabs.args=0x1
func.llabs.ret=long long
func.lldiv.arg.0=long long,denom
func.lldiv.args=0x2
func.lldiv.ret=lldiv_t
func.llrint.arg.0=double,x
func.llrint.args=0x1
func.llrint.ret=long long
func.llrintf.arg.0=float,x
func.llrintf.args=0x1
func.llrintf.ret=long long
func.llrintl.arg.0=long double,x
func.llrintl.args=0x1
func.llrintl.ret=long long
func.llround.arg.0=double,x
func.llround.args=0x1
func.llround.ret=long long
func.llroundf.arg.0=float,x
func.llroundf.args=0x1
func.llroundf.ret=long long
func.llroundl.arg.0=long double,x
func.llroundl.args=0x1
func.llroundl.ret=long long
func.localeconv.args=0
func.localeconv.ret=struct lconv *
func.localtime.arg.0=time_t *,timer
func.localtime.args=0x1
func.localtime.ret=struct tm *
func.log.arg.0=double,x
func.log.args=0x1
func.log.ret=double
func.log10.arg.0=double,x
func.log10.args=0x1
func.log10.ret=double
func.log10f.arg.0=float,x
func.log10f.args=0x1
func.log10f.ret=float
func.log10l.arg.0=long double,x
func.log10l.args=0x1
func.log10l.ret=long double
func.log1p.arg.0=double,x
func.log1p.args=0x1
func.log1p.ret=double
func.log1pf.arg.0=float,x
func.log1pf.args=0x1
func.log1pf.ret=float
func.log1pl.arg.0=long double,x
func.log1pl.args=0x1
func.log1pl.ret=long double
func.log2.arg.0=double,x
func.log2.args=0x1
func.log2.ret=double
func.log2f.arg.0=float,x
func.log2f.args=0x1
func.log2f.ret=float
func.log2l.arg.0=long double,x
func.log2l.args=0x1
func.log2l.ret=long double
func.logb.arg.0=double,x
func.logb.args=0x1
func.logb.ret=double
func.logbf.arg.0=float,x
func.logbf.args=0x1
func.logbf.ret=float
func.logbl.arg.0=long double,x
func.logbl.args=0x1
func.logbl.ret=long double
func.logf.arg.0=float,x
func.logf.args=0x1
func.logf.ret=float
func.logl.arg.0=long double,x
func.logl.args=0x1
func.logl.ret=long double
func.longjmp.arg.0=int,val
func.longjmp.args=0x2
func.longjmp.ret=void
func.lrint.arg.0=double,x
func.lrint.args=0x1
func.lrint.ret=long
func.lrintf.arg.0=float,x
func.lrintf.args=0x1
func.lrintf.ret=long
func.lrintl.arg.0=long double,x
func.lrintl.args=0x1
func.lrintl.ret=long
func.lround.arg.0=double,x
func.lround.args=0x1
func.lround.ret=long
func.lroundf.arg.0=float,x
func.lroundf.args=0x1
func.lroundf.ret=long
func.lroundl.arg.0=long double,x
func.lroundl.args=0x1
func.lroundl.ret=long
func.lstat.arg.0=void *,buf
func.lstat.args=0x2
func.lstat.ret=void
func.main.arg.0=char **,envp
func.main.args=0x3
func.main.ret=int
func.malloc.arg.0=size_t,size
func.malloc.args=0x1
func.malloc.ret=void *
func.maskrune.arg.0=unsigned long,f
func.maskrune.args=0x2
func.maskrune.ret=int
func.mblen.arg.0=size_t,n
func.mblen.args=0x2
func.mblen.ret=int
func.mbrlen.arg.0=mbstate_t *,ps
func.mbrlen.args=0x3
func.mbrlen.ret=size_t
func.mbrtowc.arg.0=mbstate_t *,ps
func.mbrtowc.args=0x4
func.mbrtowc.ret=size_t
func.mbsinit.arg.0=mbstate_t *,ps
func.mbsinit.args=0x1
func.mbsinit.ret=int
func.mbsrtowcs.arg.0=mbstate_t *,ps
func.mbsrtowcs.args=0x4
func.mbsrtowcs.ret=size_t
func.mbstowcs.arg.0=size_t,n
func.mbstowcs.args=0x3
func.mbstowcs.ret=size_t
func.mbtowc.arg.0=size_t,n
func.mbtowc.args=0x3
func.mbtowc.ret=int
func.memchr.arg.0=size_t,n
func.memchr.args=0x3
func.memchr.ret=void *
func.memcmp.arg.0=size_t,n
func.memcmp.args=0x3
func.memcmp.ret=int
func.memcpy.arg.0=size_t,n
func.memcpy.args=0x3
func.memcpy.ret=void *
func.memmem.arg.0=int,little_len
func.memmem.args=0x4
func.memmem.ret=void *
func.memmove.arg.0=size_t,n
func.memmove.args=0x3
func.memmove.ret=void *
func.memset.arg.0=size_t,n
func.memset.args=0x3
func.memset.ret=void *
func.mkstemp.arg.0=char *,template
func.mkstemp.args=0x1
func.mkstemp.ret=int
func.mktemp.arg.0=char *,template
func.mktemp.args=0x1
func.mktemp.ret=char *
func.mktime.arg.0=struct tm *,timeptr
func.mktime.args=0x1
func.mktime.ret=time_t
func.mmap.arg.0=size_t,offset
func.mmap.args=0x6
func.mmap.ret=void *
func.modf.arg.0=double *,iptr
func.modf.args=0x2
func.modf.ret=double
func.modff.arg.0=float *,iptr
func.modff.args=0x2
func.modff.ret=float
func.modfl.arg.0=long double *,iptr
func.modfl.args=0x2
func.modfl.ret=long double
func.munmap.arg.0=size_t,length
func.munmap.args=0x2
func.munmap.ret=int
func.nan.arg.0=const char *,str
func.nan.args=0x1
func.nan.ret=double
func.nanf.arg.0=const char *,str
func.nanf.args=0x1
func.nanf.ret=float
func.nanl.arg.0=const char *,str
func.nanl.args=0x1
func.nanl.ret=long double
func.nanosleep.arg.0=struct timespec *,rem
func.nanosleep.args=0x2
func.nanosleep.ret=int
func.nearbyint.arg.0=double,x
func.nearbyint.args=0x1
func.nearbyint.ret=double
func.nearbyintf.arg.0=float,x
func.nearbyintf.args=0x1
func.nearbyintf.ret=float
func.nearbyintl.arg.0=long double,x
func.nearbyintl.args=0x1
func.nearbyintl.ret=long double
func.nextafter.arg.0=double,y
func.nextafter.args=0x2
func.nextafter.ret=double
func.nextafterf.arg.0=float,y
func.nextafterf.args=0x2
func.nextafterf.ret=float
func.nextafterl.arg.0=long double,y
func.nextafterl.args=0x2
func.nextafterl.ret=long double
func.nexttoward.arg.0=long double,y
func.nexttoward.args=0x2
func.nexttoward.ret=double
func.nexttowardf.arg.0=long double,y
func.nexttowardf.args=0x2
func.nexttowardf.ret=float
func.nexttowardl.arg.0=long double,y
func.nexttowardl.args=0x2
func.nexttowardl.ret=long double
func.nl_langinfo.arg.0=nl_item,item
func.nl_langinfo.args=0x1
func.nl_langinfo.ret=char *
func.nl_langinfo_l.arg.0=locale_t,locale
func.nl_langinfo_l.args=0x2
func.nl_langinfo_l.ret=char *
func.objc_enumerationMutation.arg.0=void *,instance
func.objc_enumerationMutation.args=0x1
func.objc_enumerationMutation.ret=void
func.objc_msgSend.arg.0=char *,selector
func.objc_msgSend.args=0x2
func.objc_msgSend.ret=void *
func.objc_msgSendSuper2.arg.0=char *,selector
func.objc_msgSendSuper2.args=0x2
func.objc_msgSendSuper2.ret=void *
func.objc_release.arg.0=void *,instance
func.objc_release.args=0x1
func.objc_release.ret=void
func.objc_retain.arg.0=void *,instance
func.objc_retain.args=0x1
func.objc_retain.ret=void
func.objc_retainAutoreleasedReturnValue.arg.0=void *,instance
func.objc_retainAutoreleasedReturnValue.args=0x1
func.objc_retainAutoreleasedReturnValue.ret=void
func.objc_storeStrong.arg.0=int,type
func.objc_storeStrong.args=0x2
func.objc_storeStrong.ret=void *
func.open.arg.0=int,oflag
func.open.args=0x2
func.open.ret=int
func.openat.arg.0=int,oflag
func.openat.args=0x3
func.openat.ret=int
func.pclose.arg.0=FILE *,stream
func.pclose.args=0x1
func.pclose.ret=int
func.perror.arg.0=const char *,s
func.perror.args=0x1
func.perror.ret=void
func.popen.arg.0=const char *,mode
func.popen.args=0x2
func.popen.ret=FILE *
func.pow.arg.0=double,y
func.pow.args=0x2
func.pow.ret=double
func.powf.arg.0=float,y
func.powf.args=0x2
func.powf.ret=float
func.powl.arg.0=long double,y
func.powl.args=0x2
func.powl.ret=long double
func.prctl.arg.0=unsigned long,v5
func.prctl.args=0x5
func.prctl.ret=int
func.printf.arg.0=const char *,format
func.printf.args=0x1
func.printf.ret=int
func.ptrace.arg.0=void *,data
func.ptrace.args=0x4
func.ptrace.ret=long
func.putc.arg.0=FILE *,stream
func.putc.args=0x2
func.putc.ret=int
func.putchar.arg.0=int,c
func.putchar.args=0x1
func.putchar.ret=int
func.puts.arg.0=const char *,s
func.puts.args=0x1
func.puts.ret=int
func.pututxline.arg.0=void *,utx
func.pututxline.args=0x1
func.pututxline.ret=void *
func.putwc.arg.0=FILE *,stream
func.putwc.args=0x2
func.putwc.ret=wint_t
func.putwchar.arg.0=wchar_t,c
func.putwchar.args=0x1
func.putwchar.ret=wint_t
func.qsort.arg.0=void *,compar
func.qsort.args=0x4
func.qsort.ret=void
func.quick_exit.arg.0=int,status
func.quick_exit.args=0x1
func.quick_exit.ret=void
func.raise.arg.0=int,sig
func.raise.args=0x1
func.raise.ret=int
func.rand.args=0
func.rand.ret=int
func.random.args=0
func.random.ret=uint32_t
func.read.arg.0=size_t,nbyte
func.read.args=0x3
func.read.ret=ssize_t
func.realloc.arg.0=size_t,size
func.realloc.args=0x2
func.realloc.ret=void *
func.reallocf.arg.0=size_t,size
func.reallocf.args=0x2
func.reallocf.ret=void *
func.recv.arg.0=int,flags
func.recv.args=0x4
func.recv.ret=ssize_t
func.remainder.arg.0=double,y
func.remainder.args=0x2
func.remainder.ret=double
func.remainderf.arg.0=float,y
func.remainderf.args=0x2
func.remainderf.ret=float
func.remainderl.arg.0=long double,y
func.remainderl.args=0x2
func.remainderl.ret=long double
func.remove.arg.0=const char *,filename
func.remove.args=0x1
func.remove.ret=int
func.remquo.arg.0=int *,pquo
func.remquo.args=0x3
func.remquo.ret=double
func.remquof.arg.0=int *,pquo
func.remquof.args=0x3
func.remquof.ret=float
func.remquol.arg.0=int *,pquo
func.remquol.args=0x3
func.remquol.ret=long double
func.rename.arg.0=const char *,newpath
func.rename.args=0x2
func.rename.ret=int
func.rewind.arg.0=FILE *,stream
func.rewind.args=0x1
func.rewind.ret=void
func.rint.arg.0=double,x
func.rint.args=0x1
func.rint.ret=double
func.rintf.arg.0=float,x
func.rintf.args=0x1
func.rintf.ret=float
func.rintl.arg.0=long double,x
func.rintl.args=0x1
func.rintl.ret=long double
func.round.arg.0=double,x
func.round.args=0x1
func.round.ret=double
func.roundf.arg.0=float,x
func.roundf.args=0x1
func.roundf.ret=float
func.roundl.arg.0=long double,x
func.roundl.args=0x1
func.roundl.ret=long double
func.scalbln.arg.0=long,ex
func.scalbln.args=0x2
func.scalbln.ret=double
func.scalblnf.arg.0=long,ex
func.scalblnf.args=0x2
func.scalblnf.ret=float
func.scalblnl.arg.0=long,ex
func.scalblnl.args=0x2
func.scalblnl.ret=long double
func.scalbn.arg.0=int,ex
func.scalbn.args=0x2
func.scalbn.ret=double
func.scalbnf.arg.0=int,ex
func.scalbnf.args=0x2
func.scalbnf.ret=float
func.scalbnl.arg.0=int,ex
func.scalbnl.args=0x2
func.scalbnl.ret=long double
func.scanf.arg.0=const char *,format
func.scanf.args=0x1
func.scanf.ret=int
func.select.arg.0=struct timeval *,timeout
func.select.args=0x5
func.select.ret=int
func.send.arg.0=int,flags
func.send.args=0x4
func.send.ret=ssize_t
func.setbuf.arg.0=char *,buf
func.setbuf.args=0x2
func.setbuf.ret=void
func.setenv.arg.0=int,overwrite
func.setenv.args=0x3
func.setenv.ret=int
func.setjmp.arg.0=jmp_buf,env
func.setjmp.args=0x1
func.setjmp.ret=int
func.setlocale.arg.0=const char *,locale
func.setlocale.args=0x2
func.setlocale.ret=char *
func.setsockopt.arg.0=socklen_t,optlen
func.setsockopt.args=0x5
func.setsockopt.ret=int
func.setstate.arg.0=const char *,state
func.setstate.args=0x1
func.setstate.ret=const char *
func.setvbuf.arg.0=size_t,size
func.setvbuf.args=0x4
func.setvbuf.ret=int
func.sigaction.arg.0=struct sigaction *,oldact
func.sigaction.args=0x3
func.sigaction.ret=int
func.signal.arg.0=void *,func
func.signal.args=0x2
func.signal.ret=void
func.signbit.arg.0=double,x
func.signbit.args=0x1
func.signbit.ret=bool
func.sin.arg.0=double,x
func.sin.args=0x1
func.sin.ret=double
func.sinf.arg.0=float,x
func.sinf.args=0x1
func.sinf.ret=float
func.sinh.arg.0=double,x
func.sinh.args=0x1
func.sinh.ret=double
func.sinhf.arg.0=float,x
func.sinhf.args=0x1
func.sinhf.ret=float
func.sinhl.arg.0=long double,x
func.sinhl.args=0x1
func.sinhl.ret=long double
func.sinl.arg.0=long double,x
func.sinl.args=0x1
func.sinl.ret=long double
func.sleep.arg.0=int,s
func.sleep.args=0x1
func.sleep.ret=int
func.snprintf.arg.0=va_list,args
func.snprintf.args=0x4
func.snprintf.ret=int
func.snprintf_chk.arg.0=va_list,args
func.snprintf_chk.args=0x4
func.snprintf_chk.ret=int
func.socket.arg.0=int,protocol
func.socket.args=0x3
func.socket.ret=int
func.sprintf.arg.0=va_list,args
func.sprintf.args=0x3
func.sprintf.ret=int
func.sprintf_chk.arg.0=va_list,args
func.sprintf_chk.args=0x3
func.sprintf_chk.ret=int
func.sqrt.arg.0=double,x
func.sqrt.args=0x1
func.sqrt.ret=double
func.sqrtf.arg.0=float,x
func.sqrtf.args=0x1
func.sqrtf.ret=float
func.sqrtl.arg.0=long double,x
func.sqrtl.args=0x1
func.sqrtl.ret=long double
func.srand.arg.0=int,seed
func.srand.args=0x1
func.srand.ret=void
func.srandom.arg.0=uint32_t,seed
func.srandom.args=0x1
func.srandom.ret=uint32_t
func.srandomdev.args=0
func.srandomdev.ret=void
func.sscanf.arg.0=va_list,args
func.sscanf.args=0x3
func.sscanf.ret=int
func.strcasecmp.arg.0=const char *,s2
func.strcasecmp.args=0x2
func.strcasecmp.ret=int
func.strcat.arg.0=const char *,s2
func.strcat.args=0x2
func.strcat.ret=char *
func.strchr.arg.0=int,c
func.strchr.args=0x2
func.strchr.ret=char *
func.strcmp.arg.0=const char *,s2
func.strcmp.args=0x2
func.strcmp.ret=int
func.strcoll.arg.0=const char *,s2
func.strcoll.args=0x2
func.strcoll.ret=int
func.strcpy.arg.0=const char *,src
func.strcpy.args=0x2
func.strcpy.ret=char *
func.strcpy_chk.arg.0=const char *,src
func.strcpy_chk.args=0x2
func.strcpy_chk.ret=char *
func.strcspn.arg.0=const char *,s2
func.strcspn.args=0x2
func.strcspn.ret=size_t
func.strdup.arg.0=const char *,src
func.strdup.args=0x1
func.strdup.ret=char *
func.strerror.arg.0=int,errnum
func.strerror.args=0x1
func.strerror.ret=char *
func.strftime.arg.0=struct tm *,timeptr
func.strftime.args=0x4
func.strftime.ret=size_t
func.strlcpy.arg.0=size_t,_n
func.strlcpy.args=0x3
func.strlcpy.ret=char *
func.strlen.arg.0=const char *,s
func.strlen.args=0x1
func.strlen.ret=size_t
func.strmode.arg.0=char *,bp
func.strmode.args=0x2
func.strmode.ret=void
func.strncasecmp.arg.0=size_t,n
func.strncasecmp.args=0x3
func.strncasecmp.ret=int
func.strncat.arg.0=size_t,n
func.strncat.args=0x3
func.strncat.ret=char *
func.strncmp.arg.0=size_t,n
func.strncmp.args=0x3
func.strncmp.ret=int
func.strncpy.arg.0=size_t,_n
func.strncpy.args=0x3
func.strncpy.ret=char *
func.strndup.arg.0=int,n
func.strndup.args=0x2
func.strndup.ret=char *
func.strpbrk.arg.0=const char *,s2
func.strpbrk.args=0x2
func.strpbrk.ret=char *
func.strrchr.arg.0=int,c
func.strrchr.args=0x2
func.strrchr.ret=char *
func.strspn.arg.0=const char *,s2
func.strspn.args=0x2
func.strspn.ret=size_t
func.strstr.arg.0=const char *,s2
func.strstr.args=0x2
func.strstr.ret=char *
func.strtod.arg.0=char **,endptr
func.strtod.args=0x2
func.strtod.ret=double
func.strtof.arg.0=char **,endptr
func.strtof.args=0x2
func.strtof.ret=float
func.strtoimax.arg.0=int,base
func.strtoimax.args=0x3
func.strtoimax.ret=intmax_t
func.strtok.arg.0=const char *,s2
func.strtok.args=0x2
func.strtok.ret=char *
func.strtol.arg.0=int,base
func.strtol.args=0x3
func.strtol.ret=long
func.strtold.arg.0=char **,endptr
func.strtold.args=0x2
func.strtold.ret=long double
func.strtoll.arg.0=int,base
func.strtoll.args=0x3
func.strtoll.ret=long long
func.strtoul.arg.0=int,base
func.strtoul.args=0x3
func.strtoul.ret=long
func.strtoull.arg.0=int,base
func.strtoull.args=0x3
func.strtoull.ret=long long
func.strtoumax.arg.0=int,base
func.strtoumax.args=0x3
func.strtoumax.ret=uintmax_t
func.strxfrm.arg.0=size_t,n
func.strxfrm.args=0x3
func.strxfrm.ret=size_t
func.swprintf.arg.0=wchar_t *,format
func.swprintf.args=0x3
func.swprintf.ret=int
func.swscanf.arg.0=wchar_t *,format
func.swscanf.args=0x2
func.swscanf.ret=int
func.sym.handle_client.args=0
func.symlink.arg.0=const char *,path2
func.symlink.args=0x2
func.symlink.ret=int
func.system.arg.0=const char *,string
func.system.args=0x1
func.system.ret=int
func.tan.arg.0=double,x
func.tan.args=0x1
func.tan.ret=double
func.tanf.arg.0=float,x
func.tanf.args=0x1
func.tanf.ret=float
func.tanh.arg.0=double,x
func.tanh.args=0x1
func.tanh.ret=double
func.tanhf.arg.0=float,x
func.tanhf.args=0x1
func.tanhf.ret=float
func.tanhl.arg.0=long double,x
func.tanhl.args=0x1
func.tanhl.ret=long double
func.tanl.arg.0=long double,x
func.tanl.args=0x1
func.tanl.ret=long double
func.textdomain.arg.0=char *,domainname
func.textdomain.args=0x1
func.textdomain.ret=char *
func.tgamma.arg.0=double,x
func.tgamma.args=0x1
func.tgamma.ret=double
func.tgammaf.arg.0=float,x
func.tgammaf.args=0x1
func.tgammaf.ret=float
func.tgammal.arg.0=long double,x
func.tgammal.args=0x1
func.tgammal.ret=long double
func.tgoto.arg.0=int,row
func.tgoto.args=0x3
func.tgoto.ret=char *
func.time.arg.0=time_t *,timer
func.time.args=0x1
func.time.ret=time_t
func.tmpfile.args=0
func.tmpfile.ret=FILE *
func.tmpnam.arg.0=char *,s
func.tmpnam.args=0x1
func.tmpnam.ret=char *
func.tolower.arg.0=int,c
func.tolower.args=0x1
func.tolower.ret=int
func.toupper.arg.0=int,c
func.toupper.args=0x1
func.toupper.ret=int
func.towctrans.arg.0=wctrans_t,desc
func.towctrans.args=0x2
func.towctrans.ret=wint_t
func.towlower.arg.0=wint_t,wc
func.towlower.args=0x1
func.towlower.ret=wint_t
func.towupper.arg.0=wint_t,wc
func.towupper.args=0x1
func.towupper.ret=wint_t
func.trunc.arg.0=double,x
func.trunc.args=0x1
func.trunc.ret=double
func.truncf.arg.0=float,x
func.truncf.args=0x1
func.truncf.ret=float
func.truncl.arg.0=long double,x
func.truncl.args=0x1
func.truncl.ret=long double
func.umask.arg.0=int,m
func.umask.args=0x1
func.umask.ret=int
func.ungetc.arg.0=FILE *,stream
func.ungetc.args=0x2
func.ungetc.ret=int
func.ungetwc.arg.0=FILE *,stream
func.ungetwc.args=0x2
func.ungetwc.ret=wint_t
func.unlink.arg.0=const char *,path
func.unlink.args=0x1
func.unlink.ret=int
func.user_from_uid.arg.0=int,nouser
func.user_from_uid.args=0x2
func.user_from_uid.ret=char *
func.usleep.arg.0=int,s
func.usleep.args=0x1
func.usleep.ret=int
func.vfprintf.arg.0=va_list,ap
func.vfprintf.args=0x3
func.vfprintf.ret=int
func.vfscanf.arg.0=va_list,ap
func.vfscanf.args=0x3
func.vfscanf.ret=int
func.vfwprintf.arg.0=va_list,arg
func.vfwprintf.args=0x3
func.vfwprintf.ret=int
func.vfwscanf.arg.0=va_list,arg
func.vfwscanf.args=0x3
func.vfwscanf.ret=int
func.vprintf.arg.0=va_list,ap
func.vprintf.args=0x2
func.vprintf.ret=int
func.vscanf.arg.0=va_list,ap
func.vscanf.args=0x2
func.vscanf.ret=int
func.vsnprintf.arg.0=va_list,arg
func.vsnprintf.args=0x4
func.vsnprintf.ret=int
func.vsprintf.arg.0=va_list,arg
func.vsprintf.args=0x3
func.vsprintf.ret=int
func.vsscanf.arg.0=va_list,arg
func.vsscanf.args=0x3
func.vsscanf.ret=int
func.vswprintf.arg.0=va_list,arg
func.vswprintf.args=0x4
func.vswprintf.ret=int
func.vswscanf.arg.0=va_list,arg
func.vswscanf.args=0x3
func.vswscanf.ret=int
func.vwprintf.arg.0=va_list,arg
func.vwprintf.args=0x2
func.vwprintf.ret=int
func.vwscanf.arg.0=va_list,arg
func.vwscanf.args=0x2
func.vwscanf.ret=int
func.wait.arg.0=int *,wstatus
func.wait.args=0x1
func.wait.ret=pid_t
func.waitid.arg.0=int,options
func.waitid.args=0x4
func.waitid.ret=int
func.waitpid.arg.0=int,options
func.waitpid.args=0x3
func.waitpid.ret=pid_t
func.warn.arg.0=const char *,format
func.warn.args=0x1
func.warn.ret=void
func.warnc.arg.0=int,opt
func.warnc.args=0x2
func.warnc.ret=void
func.warnx.arg.0=const char *,format
func.warnx.args=0x1
func.warnx.ret=void
func.wcrtomb.arg.0=mbstate_t *,ps
func.wcrtomb.args=0x3
func.wcrtomb.ret=size_t
func.wcscat.arg.0=wchar_t *,s2
func.wcscat.args=0x2
func.wcscat.ret=wchar_t *
func.wcschr.arg.0=wchar_t,c
func.wcschr.args=0x2
func.wcschr.ret=wchar_t *
func.wcscmp.arg.0=wchar_t *,s2
func.wcscmp.args=0x2
func.wcscmp.ret=int
func.wcscoll.arg.0=wchar_t *,s2
func.wcscoll.args=0x2
func.wcscoll.ret=int
func.wcscpy.arg.0=wchar_t *,s2
func.wcscpy.args=0x2
func.wcscpy.ret=wchar_t *
func.wcscspn.arg.0=wchar_t *,s2
func.wcscspn.args=0x2
func.wcscspn.ret=size_t
func.wcsftime.arg.0=struct tm *,timeptr
func.wcsftime.args=0x4
func.wcsftime.ret=size_t
func.wcslen.arg.0=wchar_t *,s
func.wcslen.args=0x1
func.wcslen.ret=size_t
func.wcsncat.arg.0=size_t,n
func.wcsncat.args=0x3
func.wcsncat.ret=wchar_t *
func.wcsncmp.arg.0=size_t,n
func.wcsncmp.args=0x3
func.wcsncmp.ret=int
func.wcsncpy.arg.0=size_t,n
func.wcsncpy.args=0x3
func.wcsncpy.ret=wchar_t *
func.wcspbrk.arg.0=wchar_t *,s2
func.wcspbrk.args=0x2
func.wcspbrk.ret=wchar_t *
func.wcsrchr.arg.0=wchar_t,c
func.wcsrchr.args=0x2
func.wcsrchr.ret=wchar_t *
func.wcsrtombs.arg.0=mbstate_t *,ps
func.wcsrtombs.args=0x4
func.wcsrtombs.ret=size_t
func.wcsspn.arg.0=wchar_t *,s2
func.wcsspn.args=0x2
func.wcsspn.ret=size_t
func.wcsstr.arg.0=wchar_t *,s2
func.wcsstr.args=0x2
func.wcsstr.ret=wchar_t *
func.wcstod.arg.0=wchar_t **,endptr
func.wcstod.args=0x2
func.wcstod.ret=double
func.wcstof.arg.0=wchar_t **,endptr
func.wcstof.args=0x2
func.wcstof.ret=float
func.wcstoimax.arg.0=int,base
func.wcstoimax.args=0x3
func.wcstoimax.ret=intmax_t
func.wcstok.arg.0=wchar_t **,ptr
func.wcstok.args=0x3
func.wcstok.ret=wchar_t *
func.wcstol.arg.0=int,base
func.wcstol.args=0x3
func.wcstol.ret=long
func.wcstold.arg.0=wchar_t **,endptr
func.wcstold.args=0x2
func.wcstold.ret=long double
func.wcstoll.arg.0=int,base
func.wcstoll.args=0x3
func.wcstoll.ret=long long
func.wcstombs.arg.0=size_t,n
func.wcstombs.args=0x3
func.wcstombs.ret=size_t
func.wcstoul.arg.0=int,base
func.wcstoul.args=0x3
func.wcstoul.ret=long
func.wcstoull.arg.0=int,base
func.wcstoull.args=0x3
func.wcstoull.ret=long long
func.wcstoumax.arg.0=int,base
func.wcstoumax.args=0x3
func.wcstoumax.ret=uintmax_t
func.wcsxfrm.arg.0=size_t,n
func.wcsxfrm.args=0x3
func.wcsxfrm.ret=size_t
func.wctob.arg.0=wint_t,c
func.wctob.args=0x1
func.wctob.ret=int
func.wctomb.arg.0=wchar_t,wchar
func.wctomb.args=0x2
func.wctomb.ret=int
func.wctrans.arg.0=const char *,property
func.wctrans.args=0x1
func.wctrans.ret=wctrans_t
func.wctype.arg.0=const char *,property
func.wctype.args=0x1
func.wctype.ret=wctype_t
func.wmemchr.arg.0=size_t,n
func.wmemchr.args=0x3
func.wmemchr.ret=wchar_t *
func.wmemcmp.arg.0=size_t,n
func.wmemcmp.args=0x3
func.wmemcmp.ret=int
func.wmemcpy.arg.0=size_t,n
func.wmemcpy.args=0x3
func.wmemcpy.ret=wchar_t *
func.wmemmove.arg.0=size_t,n
func.wmemmove.args=0x3
func.wmemmove.ret=wchar_t *
func.wmemset.arg.0=size_t,n
func.wmemset.args=0x3
func.wmemset.ret=wchar_t *
func.wprintf.arg.0=wchar_t *,format
func.wprintf.args=0x1
func.wprintf.ret=int
func.write.arg.0=size_t,nbytes
func.write.args=0x3
func.write.ret=ssize_t
func.wscanf.arg.0=wchar_t *,format
func.wscanf.args=0x1
func.wscanf.ret=int
func.xmalloc.arg.0=size_t,size
func.xmalloc.args=0x1
func.xmalloc.ret=void *
fwide=func
fwprintf=func
fwrite=func
fwscanf=func
getc=func
getchar=func
getenv=func
geteuid=func
getopt=func
getpid=func
getprogname=func
gets=func
getsockname=func
getsockopt=func
getuid=func
getwc=func
getwchar=func
gmtime=func
group_from_gid=func
humanize_number=func
hypot=func
hypotf=func
hypotl=func
ilogb=func
ilogbf=func
ilogbl=func
imaxabs=func
imaxdiv=func
inet_aton=func
inet_ntoa=func
initstate=func
ioctl=func
isalnum=func
isalpha=func
isatty=func
isblank=func
iscntrl=func
isdigit=func
isfinite=func
isgraph=func
isgreater=func
isgreaterequal=func
isinf=func
isless=func
islessequal=func
islessgreater=func
islower=func
isnan=func
isnormal=func
isprint=func
ispunct=func
isspace=func
isunordered=func
isupper=func
iswalnum=func
iswalpha=func
iswblank=func
iswcntrl=func
iswctype=func
iswdigit=func
iswgraph=func
iswlower=func
iswprint=func
iswpunct=func
iswspace=func
iswupper=func
iswxdigit=func
isxdigit=func
kill=func
labs=func
ldexp=func
ldexpf=func
ldexpl=func
ldiv=func
lgamma=func
lgammaf=func
lgammal=func
llabs=func
lldiv=func
llrint=func
llrintf=func
llrintl=func
llround=func
llroundf=func
llroundl=func
localeconv=func
localtime=func
log=func
log10=func
log10f=func
log10l=func
log1p=func
log1pf=func
log1pl=func
log2=func
log2f=func
log2l=func
logb=func
logbf=func
logbl=func
logf=func
logl=func
longjmp=func
lrint=func
lrintf=func
lrintl=func
lround=func
lroundf=func
lroundl=func
lstat=func
main=func
malloc=func
maskrune=func
mblen=func
mbrlen=func
mbrtowc=func
mbsinit=func
mbsrtowcs=func
mbstowcs=func
mbtowc=func
memchr=func
memcmp=func
memcpy=func
memmem=func
memmove=func
memset=func
mkstemp=func
mktemp=func
mktime=func
mmap=func
modf=func
modff=func
modfl=func
munmap=func
nan=func
nanf=func
nanl=func
nanosleep=func
nearbyint=func
nearbyintf=func
nearbyintl=func
nextafter=func
nextafterf=func
nextafterl=func
nexttoward=func
nexttowardf=func
nexttowardl=func
nl_langinfo=func
nl_langinfo_l=func
objc_enumerationMutation=func
objc_msgSend=func
objc_msgSendSuper2=func
objc_release=func
objc_retain=func
objc_retainAutoreleasedReturnValue=func
objc_storeStrong=func
open=func
openat=func
pclose=func
perror=func
popen=func
pow=func
powf=func
powl=func
prctl=func
printf=func
ptrace=func
putc=func
putchar=func
puts=func
pututxline=func
putwc=func
putwchar=func
qsort=func
quick_exit=func
raise=func
rand=func
random=func
read=func
realloc=func
reallocf=func
recv=func
remainder=func
remainderf=func
remainderl=func
remove=func
remquo=func
remquof=func
remquol=func
rename=func
rewind=func
rint=func
rintf=func
rintl=func
round=func
roundf=func
roundl=func
scalbln=func
scalblnf=func
scalblnl=func
scalbn=func
scalbnf=func
scalbnl=func
scanf=func
select=func
send=func
setbuf=func
setenv=func
setjmp=func
setlocale=func
setsockopt=func
setstate=func
setvbuf=func
sigaction=func
signal=func
signbit=func
sin=func
sinf=func
sinh=func
sinhf=func
sinhl=func
sinl=func
sleep=func
snprintf=func
snprintf_chk=func
socket=func
sprintf=func
sprintf_chk=func
sqrt=func
sqrtf=func
sqrtl=func
srand=func
srandom=func
srandomdev=func
sscanf=func
strcasecmp=func
strcat=func
strchr=func
strcmp=func
strcoll=func
strcpy=func
strcpy_chk=func
strcspn=func
strdup=func
strerror=func
strftime=func
strlcpy=func
strlen=func
strmode=func
strncasecmp=func
strncat=func
strncmp=func
strncpy=func
strndup=func
strpbrk=func
strrchr=func
strspn=func
strstr=func
strtod=func
strtof=func
strtoimax=func
strtok=func
strtol=func
strtold=func
strtoll=func
strtoul=func
strtoull=func
strtoumax=func
strxfrm=func
swprintf=func
swscanf=func
sym.handle_client=func
symlink=func
system=func
tan=func
tanf=func
tanh=func
tanhf=func
tanhl=func
tanl=func
textdomain=func
tgamma=func
tgammaf=func
tgammal=func
tgoto=func
time=func
tmpfile=func
tmpnam=func
tolower=func
toupper=func
towctrans=func
towlower=func
towupper=func
trunc=func
truncf=func
truncl=func
umask=func
ungetc=func
ungetwc=func
unlink=func
user_from_uid=func
usleep=func
vfprintf=func
vfscanf=func
vfwprintf=func
vfwscanf=func
vprintf=func
vscanf=func
vsnprintf=func
vsprintf=func
vsscanf=func
vswprintf=func
vswscanf=func
vwprintf=func
vwscanf=func
wait=func
waitid=func
waitpid=func
warn=func
warnc=func
warnx=func
wcrtomb=func
wcscat=func
wcschr=func
wcscmp=func
wcscoll=func
wcscpy=func
wcscspn=func
wcsftime=func
wcslen=func
wcsncat=func
wcsncmp=func
wcsncpy=func
wcspbrk=func
wcsrchr=func
wcsrtombs=func
wcsspn=func
wcsstr=func
wcstod=func
wcstof=func
wcstoimax=func
wcstok=func
wcstol=func
wcstold=func
wcstoll=func
wcstombs=func
wcstoul=func
wcstoull=func
wcstoumax=func
wcsxfrm=func
wctob=func
wctomb=func
wctrans=func
wctype=func
wmemchr=func
wmemcmp=func
wmemcpy=func
wmemmove=func
wmemset=func
wprintf=func
write=func
wscanf=func
xmalloc=func

/core/analysis/cc
amd64=cc
amd64syscall=cc
cc.amd64.arg0=rdi
cc.amd64.arg1=rsi
cc.amd64.arg10=xmm4
cc.amd64.arg2=rdx
cc.amd64.arg3=rcx
cc.amd64.arg4=r8
cc.amd64.arg5=r9
cc.amd64.arg6=xmm0
cc.amd64.arg7=xmm1
cc.amd64.arg8=xmm2
cc.amd64.arg9=xmm3
cc.amd64.ret=rax
cc.amd64syscall.arg0=rdi
cc.amd64syscall.arg1=rsi
cc.amd64syscall.arg2=rdx
cc.amd64syscall.arg3=r10
cc.amd64syscall.arg4=r8
cc.amd64syscall.arg5=r9
cc.amd64syscall.ret=rax
cc.ms.arg0=rcx
cc.ms.arg1=rdx
cc.ms.arg2=r8
cc.ms.arg3=r9
cc.ms.argn=stack
cc.ms.ret=rax
cc.reg.arg0=rdi
cc.reg.arg1=rsi
cc.reg.arg2=rdx
cc.reg.arg3=rcx
cc.reg.ret=rdi
cc.swift.arg0=rdi
cc.swift.arg1=rsi
cc.swift.arg10=xmm4
cc.swift.arg2=rdx
cc.swift.arg3=rcx
cc.swift.arg4=r8
cc.swift.arg5=r9
cc.swift.arg6=xmm0
cc.swift.arg7=xmm1
cc.swift.arg8=xmm2
cc.swift.arg9=xmm3
cc.swift.error=r12
cc.swift.ret=rax
cc.swift.self=r13
default.cc=amd64
ms=cc
reg=cc
swift=cc

/core/analysis/classes

/core/analysis/classes/attrs

/core/analysis/functions
0x2000={"name":"sym._init","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":8,"bp_frame":true,"bbs":[8192,8212,8214]}
0x22a0={"name":"fcn.000022a0","bits":64,"type":1,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[8864]}
0x22b0={"name":"sym.imp.dup2","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[8880]}
0x22c0={"name":"sym.imp.printf","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[8896]}
0x22d0={"name":"sym.imp.ftell","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[8912]}
0x22e0={"name":"sym.imp.shutdown","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[8928]}
0x22f0={"name":"sym.imp.close","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[8944]}
0x2300={"name":"sym.imp.__fprintf_chk","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[8960]}
0x2310={"name":"sym.imp.puts","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[8976]}
0x2320={"name":"sym.imp.fseek","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[8992]}
0x2330={"name":"sym.imp.exit","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"noreturn":true,"bbs":[9008]}
0x2340={"name":"sym.imp.__assert_fail","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"noreturn":true,"bbs":[9024]}
0x2350={"name":"sym.imp.setvbuf","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9040]}
0x2360={"name":"sym.imp.fopen","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9056]}
0x2370={"name":"sym.imp.sigfillset","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9072]}
0x2380={"name":"sym.imp.setsockopt","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9088]}
0x2390={"name":"sym.imp.EVP_sha256","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9104]}
0x23a0={"name":"sym.imp.fgets","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9120]}
0x23b0={"name":"sym.imp.EVP_MD_CTX_new","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9136]}
0x23c0={"name":"sym.imp.strlen","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9152]}
0x23d0={"name":"sym.imp.strtok_r","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9168]}
0x23e0={"name":"sym.imp.strerror","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9184]}
0x23f0={"name":"sym.imp.sigaction","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9200]}
0x2400={"name":"sym.imp.EVP_DigestUpdate","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9216]}
0x2410={"name":"sym.imp.atoi","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9232]}
0x2420={"name":"sym.imp.EVP_MD_CTX_reset","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9248]}
0x2430={"name":"sym.imp.gets","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9264]}
0x2440={"name":"sym.imp.fread","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9280]}
0x2450={"name":"sym.imp.EVP_MD_CTX_free","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9296]}
0x2460={"name":"sym.imp.__errno_location","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9312]}
0x2470={"name":"sym.imp.__stack_chk_fail","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"noreturn":true,"bbs":[9328]}
0x2480={"name":"sym.imp.strcmp","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9344]}
0x2490={"name":"sym.imp.strcpy","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9360]}
0x24a0={"name":"sym.imp.EVP_DigestInit_ex","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9376]}
0x24b0={"name":"sym.imp.memcmp","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9392]}
0x24c0={"name":"sym.imp.fclose","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9408]}
0x24d0={"name":"sym.imp.perror","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9424]}
0x24e0={"name":"sym.imp.write","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9440]}
0x24f0={"name":"sym.imp.open","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9456]}
0x2500={"name":"sym.imp.EVP_DigestFinal_ex","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9472]}
0x2510={"name":"sym.imp.fflush","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[9488]}
0x2520={"name":"entry0","bits":64,"type":1,"cc":"amd64","stack":8,"maxstack":8,"ninstr":12,"bp_frame":true,"bbs":[9504],"vars":[{"name":"rtld_fini","type":"void *","reg":"rdx","accs":[{"off":6,"type":"r","reg":"rdx"}]}]}
0x2550={"name":"sym.deregister_tm_clones","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":9,"bp_frame":true,"bbs":[9552,9571,9583,9592]}
0x2580={"name":"sym.register_tm_clones","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":14,"bp_frame":true,"bbs":[9600,9636,9648,9656]}
0x25c0={"name":"sym.__do_global_dtors_aux","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":14,"bp_frame":true,"bp_off":8,"bbs":[9664,9677,9691,9703,9720]}
0x2600={"name":"entry.init0","bits":64,"type":1,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[9728]}
0x2609={"name":"sym.handle_client_wrapper","bits":64,"type":4,"cc":"amd64","stack":40,"maxstack":40,"ninstr":90,"bp_frame":true,"bp_off":8,"noreturn":true,"bbs":[9737,9816,9871,9963,10005,10021,10032,10042,10059,10076,10090,10104,10118],"vars":[{"name":"var_20h","type":"int64_t","stack":-32,"accs":[{"off":26,"type":"w","sp":-24,"reg":"rbp"}]},{"name":"optval","type":"void *","stack":-40,"accs":[{"off":32,"type":"w","sp":-32,"reg":"rbp"},{"off":46,"type":"r","sp":-32,"reg":"rbp"}]},{"name":"arg1","type":"int64_t","reg":"rdi","accs":[{"off":15,"type":"r","reg":"rdi"}]}]}
0x2794={"name":"main","bits":64,"type":4,"cc":"amd64","stack":24,"maxstack":24,"ninstr":15,"bp_frame":true,"bp_off":8,"noreturn":true,"bbs":[10132,10153,10169],"vars":[{"name":"argv","type":"char **","reg":"rsi","accs":[{"off":13,"type":"r","reg":"rsi"}]},{"name":"argc","type":"unsigned long","reg":"rdi","accs":[{"off":16,"type":"r","reg":"rdi"}]}]}
0x27c7={"name":"sym.hash","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":88,"ninstr":87,"bp_frame":true,"bp_off":8,"bbs":[10183,10372,10469,10478,10496,10511],"vars":[{"name":"s","type":"const char *","stack":-64,"accs":[{"off":12,"type":"w","sp":-56,"reg":"rbp"},{"off":24,"type":"r","sp":-56,"reg":"rbp"},{"off":105,"type":"r","sp":-56,"reg":"rbp"}]},{"name":"var_48h","type":"const char *","stack":-72,"accs":[{"off":16,"type":"w","sp":-64,"reg":"rbp"},{"off":40,"type":"r","sp":-64,"reg":"rbp"},{"off":131,"type":"r","sp":-64,"reg":"rbp"}]},{"name":"var_50h","type":"int64_t","stack":-80,"accs":[{"off":20,"type":"w","sp":-72,"reg":"rbp"},{"off":153,"type":"r","sp":-72,"reg":"rbp"},{"off":228,"type":"r","sp":-72,"reg":"rbp"},{"off":255,"type":"r","sp":-72,"reg":"rbp"}]},{"name":"var_18h","type":"size_t","stack":-24,"accs":[{"off":36,"type":"w","sp":-16,"reg":"rbp"},{"off":101,"type":"r","sp":-16,"reg":"rbp"}]},{"name":"var_20h","type":"size_t","stack":-32,"accs":[{"off":52,"type":"w","sp":-24,"reg":"rbp"},{"off":127,"type":"r","sp":-24,"reg":"rbp"}]},{"name":"var_28h","type":"int64_t","stack":-40,"accs":[{"off":61,"type":"w","sp":-32,"reg":"rbp"},{"off":74,"type":"r","sp":-32,"reg":"rbp"},{"off":201,"type":"r","sp":-32,"reg":"rbp"}]},{"name":"var_30h","type":"int64_t","stack":-48,"accs":[{"off":70,"type":"w","sp":-40,"reg":"rbp"},{"off":78,"type":"r","sp":-40,"reg":"rbp"},{"off":109,"type":"r","sp":-40,"reg":"rbp"},{"off":135,"type":"r","sp":-40,"reg":"rbp"},{"off":157,"type":"r","sp":-40,"reg":"rbp"},{"off":189,"type":"r","sp":-40,"reg":"rbp"},{"off":205,"type":"r","sp":-40,"reg":"rbp"},{"off":232,"type":"r","sp":-40,"reg":"rbp"},{"off":259,"type":"r","sp":-40,"reg":"rbp"},{"off":295,"type":"r","sp":-40,"reg":"rbp"}]},{"name":"var_ch","type":"uint64_t","stack":-12,"accs":[{"off":98,"type":"w","sp":-4,"reg":"rbp"},{"off":124,"type":"r","sp":-4,"reg":"rbp"},{"off":150,"type":"r","sp":-4,"reg":"rbp"},{"off":177,"type":"r","sp":-4,"reg":"rbp"},{"off":225,"type":"r","sp":-4,"reg":"rbp"},{"off":252,"type":"r","sp":-4,"reg":"rbp"},{"off":279,"type":"r","sp":-4,"reg":"rbp"},{"off":307,"type":"r","sp":-4,"reg":"rbp"}]},{"name":"var_10h","type":"int64_t","stack":-16,"accs":[{"off":180,"type":"w","sp":-8,"reg":"rbp"},{"off":282,"type":"r","sp":-8,"reg":"rbp"},{"off":286,"type":"r","sp":-8,"reg":"rbp"}]},{"name":"arg1","type":"const char *","reg":"rdi","accs":[{"off":12,"type":"r","reg":"rdi"}]},{"name":"arg2","type":"const char *","reg":"rsi","accs":[{"off":16,"type":"r","reg":"rsi"}]},{"name":"arg3","type":"int64_t","reg":"rdx","accs":[{"off":20,"type":"r","reg":"rdx"}]}]}
0x2912={"name":"sym.hexdigit_to_int","bits":64,"type":4,"cc":"amd64","stack":24,"maxstack":24,"ninstr":33,"bp_frame":true,"bp_off":8,"bbs":[10514,10537,10543,10552,10558,10564,10573,10579,10585,10594,10614],"vars":[{"name":"var_ch","type":"int64_t","stack":-12,"accs":[{"off":14,"type":"w","sp":-4,"reg":"rbp"},{"off":17,"type":"r","sp":-4,"reg":"rbp"},{"off":23,"type":"r","sp":-4,"reg":"rbp"},{"off":29,"type":"r","sp":-4,"reg":"rbp"},{"off":38,"type":"r","sp":-4,"reg":"rbp"},{"off":44,"type":"r","sp":-4,"reg":"rbp"},{"off":50,"type":"r","sp":-4,"reg":"rbp"},{"off":59,"type":"r","sp":-4,"reg":"rbp"},{"off":65,"type":"r","sp":-4,"reg":"rbp"},{"off":71,"type":"r","sp":-4,"reg":"rbp"}]},{"name":"arg1","type":"int64_t","reg":"rdi","accs":[{"off":12,"type":"r","reg":"rdi"}]}]}
0x2978={"name":"sym.from_hex","bits":64,"type":4,"cc":"amd64","stack":72,"maxstack":72,"ninstr":58,"bp_frame":true,"bp_off":8,"bbs":[10616,10653,10693,10703,10792,10805],"vars":[{"name":"var_30h","type":"const char *","stack":-48,"accs":[{"off":13,"type":"w","sp":-40,"reg":"rbp"},{"off":95,"type":"r","sp":-40,"reg":"rbp"},{"off":134,"type":"r","sp":-40,"reg":"rbp"}]},{"name":"var_38h","type":"int64_t","stack":-56,"accs":[{"off":17,"type":"w","sp":-48,"reg":"rbp"},{"off":25,"type":"r","sp":-48,"reg":"rbp"},{"off":176,"type":"r","sp":-48,"reg":"rbp"}]},{"name":"var_40h","type":"int64_t","stack":-64,"accs":[{"off":21,"type":"w","sp":-56,"reg":"rbp"},{"off":156,"type":"r","sp":-56,"reg":"rbp"}]},{"name":"var_20h","type":"uint64_t","stack":-32,"accs":[{"off":77,"type":"w","sp":-24,"reg":"rbp"},{"off":87,"type":"r","sp":-24,"reg":"rbp"},{"off":123,"type":"r","sp":-24,"reg":"rbp"},{"off":160,"type":"r","sp":-24,"reg":"rbp"},{"off":171,"type":"r","sp":-24,"reg":"rbp"},{"off":183,"type":"r","sp":-24,"reg":"rbp"}]},{"name":"var_10h","type":"int64_t","stack":-16,"accs":[{"off":191,"type":"r","sp":-8,"reg":"rbp"}]},{"name":"arg1","type":"const char *","reg":"rdi","accs":[{"off":13,"type":"r","reg":"rdi"}]},{"name":"arg2","type":"int64_t","reg":"rsi","accs":[{"off":17,"type":"r","reg":"rsi"}]},{"name":"arg3","type":"int64_t","reg":"rdx","accs":[{"off":21,"type":"r","reg":"rdx"}]}]}
0x2a3d={"name":"sym.get_seed_and_hash","bits":64,"type":4,"cc":"amd64","stack":600,"maxstack":600,"ninstr":100,"bp_frame":true,"bp_off":8,"bbs":[10813,10885,10900,10913,10948,10964,11007,11022,11052,11093,11108,11171,11186,11217,11256,11261],"vars":[{"name":"s1","type":"const char *","stack":-576,"accs":[{"off":15,"type":"w","sp":-568,"reg":"rbp"},{"off":213,"type":"r","sp":-568,"reg":"rbp"}]},{"name":"dest","type":"char *","stack":-584,"accs":[{"off":22,"type":"w","sp":-576,"reg":"rbp"},{"off":299,"type":"r","sp":-576,"reg":"rbp"}]},{"name":"var_250h","type":"int64_t","stack":-592,"accs":[{"off":29,"type":"w","sp":-584,"reg":"rbp"},{"off":373,"type":"r","sp":-584,"reg":"rbp"}]},{"name":"stream","type":"FILE *","stack":-16,"accs":[{"off":61,"type":"w","sp":-8,"reg":"rbp"},{"off":65,"type":"r","sp":-8,"reg":"rbp"},{"off":404,"type":"r","sp":-8,"reg":"rbp"}]},{"name":"s","type":"const char *","stack":-24,"accs":[{"off":87,"type":"w","sp":-16,"reg":"rbp"},{"off":100,"type":"r","sp":-16,"reg":"rbp"},{"off":428,"type":"w","sp":-16,"reg":"rbp"},{"off":432,"type":"r","sp":-16,"reg":"rbp"}]},{"name":"var_228h","type":"char *","stack":-552,"accs":[{"off":123,"type":"r","sp":-544,"reg":"rbp"},{"off":158,"type":"r","sp":-544,"reg":"rbp"},{"off":408,"type":"r","sp":-544,"reg":"rbp"}]},{"name":"var_1ch","type":"size_t","stack":-28,"accs":[{"off":112,"type":"w","sp":-20,"reg":"rbp"},{"off":115,"type":"r","sp":-20,"reg":"rbp"},{"off":135,"type":"r","sp":-20,"reg":"rbp"}]},{"name":"var_230h","type":"int64_t","stack":-560,"accs":[{"off":151,"type":"r","sp":-552,"reg":"rbp"},{"off":239,"type":"r","sp":-552,"reg":"rbp"},{"off":317,"type":"r","sp":-552,"reg":"rbp"}]},{"name":"src","type":"const char *","stack":-40,"accs":[{"off":183,"type":"w","sp":-32,"reg":"rbp"},{"off":187,"type":"r","sp":-32,"reg":"rbp"},{"off":209,"type":"r","sp":-32,"reg":"rbp"},{"off":269,"type":"w","sp":-32,"reg":"rbp"},{"off":273,"type":"r","sp":-32,"reg":"rbp"},{"off":295,"type":"r","sp":-32,"reg":"rbp"},{"off":347,"type":"w","sp":-32,"reg":"rbp"},{"off":351,"type":"r","sp":-32,"reg":"rbp"},{"off":380,"type":"r","sp":-32,"reg":"rbp"}]},{"name":"username","type":"const char *","reg":"rdi","accs":[{"off":15,"type":"r","reg":"rdi"}]},{"name":"arg2","type":"char *","reg":"rsi","accs":[{"off":22,"type":"r","reg":"rsi"}]},{"name":"arg3","type":"int64_t","reg":"rdx","accs":[{"off":29,"type":"r","reg":"rdx"}]}]}
0x2bff={"name":"sym.handle_client","bits":64,"type":4,"cc":"amd64","stack":168,"maxstack":168,"ninstr":133,"bp_frame":true,"bp_off":8,"bbs":[11263,11344,11359,11391,11404,11439,11464,11510,11525,11557,11570,11624,11633,11640,11646,11699,11731,11753,11773],"vars":[{"name":"username","type":"char *","stack":-56,"accs":[{"off":55,"type":"r","sp":-48,"reg":"rbp"},{"off":71,"type":"r","sp":-48,"reg":"rbp"},{"off":119,"type":"r","sp":-48,"reg":"rbp"},{"off":152,"type":"r","sp":-48,"reg":"rbp"},{"off":383,"type":"r","sp":-48,"reg":"rbp"},{"off":410,"type":"r","sp":-48,"reg":"rbp"}]},{"name":"string_helper","type":"char *","stack":-24,"accs":[{"off":67,"type":"w","sp":-16,"reg":"rbp"},{"off":75,"type":"r","sp":-16,"reg":"rbp"},{"off":96,"type":"r","sp":-16,"reg":"rbp"},{"off":233,"type":"w","sp":-16,"reg":"rbp"},{"off":241,"type":"r","sp":-16,"reg":"rbp"}]},{"name":"length","type":"size_t","stack":-28,"accs":[{"off":108,"type":"w","sp":-20,"reg":"rbp"},{"off":111,"type":"r","sp":-20,"reg":"rbp"},{"off":128,"type":"r","sp":-20,"reg":"rbp"},{"off":274,"type":"w","sp":-20,"reg":"rbp"},{"off":277,"type":"r","sp":-20,"reg":"rbp"},{"off":294,"type":"r","sp":-20,"reg":"rbp"}]},{"name":"user_hash_res","type":"const void *","stack":-168,"accs":[{"off":141,"type":"r","sp":-160,"reg":"rbp"},{"off":330,"type":"r","sp":-160,"reg":"rbp"}]},{"name":"var_68h","type":"int64_t","stack":-104,"accs":[{"off":148,"type":"r","sp":-96,"reg":"rbp"},{"off":315,"type":"r","sp":-96,"reg":"rbp"}]},{"name":"seed_and_hash_res","type":"uint64_t","stack":-32,"accs":[{"off":167,"type":"w","sp":-24,"reg":"rbp"},{"off":170,"type":"r","sp":-24,"reg":"rbp"}]},{"name":"password","type":"char *","stack":-72,"accs":[{"off":221,"type":"r","sp":-64,"reg":"rbp"},{"off":237,"type":"r","sp":-64,"reg":"rbp"},{"off":262,"type":"r","sp":-64,"reg":"rbp"},{"off":285,"type":"r","sp":-64,"reg":"rbp"},{"off":311,"type":"r","sp":-64,"reg":"rbp"}]},{"name":"pw_hash_res","type":"const void *","stack":-136,"accs":[{"off":307,"type":"r","sp":-128,"reg":"rbp"},{"off":337,"type":"r","sp":-128,"reg":"rbp"}]},{"name":"var_ch","type":"uint64_t","stack":-12,"accs":[{"off":361,"type":"w","sp":-4,"reg":"rbp"},{"off":370,"type":"w","sp":-4,"reg":"rbp"},{"off":377,"type":"r","sp":-4,"reg":"rbp"}]}]}
0x2e14={"name":"sym.die","bits":64,"type":4,"cc":"amd64","stack":8,"maxstack":8,"ninstr":13,"bp_frame":true,"bp_off":8,"noreturn":true,"bbs":[11796],"vars":[{"name":"s","type":"const char *","reg":"rdi"}]}
0x2e4f={"name":"sym.get_file_size","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":240,"ninstr":44,"bp_frame":true,"bp_off":48,"bbs":[11855,11886,11911,11928,11948,11962,11974,11986,11998],"vars":[{"name":"var_58h","type":"int64_t","stack":-88,"accs":[{"off":192,"type":"w","sp":-40,"reg":"rbp"}]},{"name":"var_e8h","type":"int64_t","stack":-232,"accs":[{"off":198,"type":"r","sp":-184,"reg":"rbp"}]},{"name":"arg1","type":"int64_t","reg":"rdi","accs":[{"off":17,"type":"r","reg":"rdi"}]}]}
0x2eea={"name":"sym.set_signal_handler","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":200,"ninstr":39,"bp_frame":true,"bp_off":8,"bbs":[12010,12070,12105,12120,12134,12146,12158],"vars":[{"name":"var_30h","type":"int64_t","stack":-48,"accs":[{"off":37,"type":"w","sp":-40,"reg":"rbp"},{"off":95,"type":"r","sp":-40,"reg":"rbp"}]},{"name":"var_c0h","type":"int64_t","stack":-192,"accs":[{"off":43,"type":"r","sp":-184,"reg":"rbp"}]},{"name":"act","type":"struct sigaction *","stack":-200,"accs":[{"off":60,"type":"w","sp":-192,"reg":"rbp"},{"off":71,"type":"r","sp":-192,"reg":"rbp"}]},{"name":"var_40h","type":"int64_t","stack":-64,"accs":[{"off":67,"type":"w","sp":-56,"reg":"rbp"}]},{"name":"arg1","type":"int64_t","reg":"rdi","accs":[{"off":20,"type":"r","reg":"rdi"}]},{"name":"arg2","type":"int64_t","reg":"rsi","accs":[{"off":22,"type":"r","reg":"rsi"}]},{"name":"arg3","type":"int64_t","reg":"rdx","accs":[{"off":25,"type":"r","reg":"rdx"}]}]}
0x2f83={"name":"sym.immediate_write_to_file","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":1120,"ninstr":139,"bp_frame":true,"bp_off":48,"bbs":[12163,12203,12234,12247,12258,12267,12326,12385],"vars":[{"name":"arg1","type":"int64_t","reg":"rdi","accs":[{"off":15,"type":"r","reg":"rdi"}]},{"name":"arg2","type":"int64_t","reg":"rsi","accs":[{"off":18,"type":"r","reg":"rsi"}]}]}
0x308d={"name":"sym.print_flag","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":0,"bp_frame":true,"bbs":[12429,12497,12520,12548,12559,12594,12596,12631,12647,12664,12695,12726],"vars":[{"name":"var_58h","type":"int64_t","stack":-40,"accs":[{"off":31,"type":"w","sp":-40,"reg":"rbp"},{"off":187,"type":"r","sp":-40,"reg":"rbp"}]},{"name":"ptr","type":"const char *","stack":-1072,"accs":[{"off":91,"type":"r","sp":-1072,"reg":"rbp"},{"off":136,"type":"r","sp":-1072,"reg":"rbp"},{"off":175,"type":"r","sp":-1072,"reg":"rbp"}]}]}
0x31bc={"name":"sym._fini","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":4,"bp_frame":true,"pure":true,"bbs":[12732]}

/core/analysis/hints

/core/analysis/imports

/core/analysis/meta
0x1000=[{"size":8,"type":"d","str":"8"}]
0x1008=[{"size":8,"type":"d","str":"8"}]
0x1010=[{"size":8,"type":"d","str":"8"}]
0x1018=[{"size":8,"type":"d","str":"8"}]
0x2000=[{"type":"C","str":"[11] -r-x section size 27 named .init"}]
0x2020=[{"type":"C","str":"[12] -r-x section size 640 named .plt"}]
0x22a0=[{"type":"C","str":"[13] -r-x section size 16 named .plt.got"}]
0x22b0=[{"type":"C","str":"[14] -r-x section size 624 named .plt.sec"}]
0x2520=[{"type":"C","str":"[15] -r-x section size 3227 named .text"}]
0x2526=[{"type":"t","subtype":56,"str":"void *rtld_fini"}]
0x2529=[{"type":"t","subtype":56,"str":"int argc"}]
0x252a=[{"type":"t","subtype":56,"str":"char **ubp_av"}]
0x2533=[{"type":"t","subtype":56,"str":"void *fini"}]
0x2536=[{"type":"t","subtype":56,"str":"void *init"}]
0x2538=[{"type":"t","subtype":56,"str":"void *main"}]
0x2618=[{"type":"t","subtype":56,"str":"arg1"}]
0x2637=[{"type":"t","subtype":56,"str":"void *optval"}]
0x263b=[{"type":"t","subtype":56,"str":"socklen_t optlen"}]
0x2641=[{"type":"t","subtype":56,"str":"int optname"}]
0x2646=[{"type":"t","subtype":56,"str":"int level"}]
0x268f=[{"type":"t","subtype":56,"str":"size_t size"}]
0x2694=[{"type":"t","subtype":56,"str":"int mode"}]
0x2699=[{"type":"t","subtype":56,"str":"char *buf"}]
0x269e=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x26ad=[{"type":"t","subtype":56,"str":"size_t size"}]
0x26b2=[{"type":"t","subtype":56,"str":"int mode"}]
0x26b7=[{"type":"t","subtype":56,"str":"char *buf"}]
0x26bc=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x26cb=[{"type":"t","subtype":56,"str":"size_t size"}]
0x26d0=[{"type":"t","subtype":56,"str":"int mode"}]
0x26d5=[{"type":"t","subtype":56,"str":"char *buf"}]
0x26da=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x26f5=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x2704=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x2725=[{"type":"t","subtype":56,"str":"int fildes"}]
0x2730=[{"type":"t","subtype":56,"str":"int status"}]
0x273a=[{"type":"t","subtype":56,"str":"const char *s"}]
0x274b=[{"type":"t","subtype":56,"str":"const char *s"}]
0x275c=[{"type":"t","subtype":56,"str":"const char *s"}]
0x276a=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2778=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2786=[{"type":"t","subtype":56,"str":"const char *s"}]
0x27a1=[{"type":"t","subtype":56,"str":"argv"}]
0x27a4=[{"type":"t","subtype":56,"str":"argc"}]
0x27a9=[{"type":"t","subtype":56,"str":"const char *str"}]
0x27b2=[{"type":"t","subtype":56,"str":"int64_t arg1"}]
0x27b9=[{"type":"t","subtype":56,"str":"const char *s"}]
0x27d3=[{"type":"t","subtype":56,"str":"arg1"}]
0x27d7=[{"type":"t","subtype":56,"str":"arg2"}]
0x27db=[{"type":"t","subtype":56,"str":"arg3"}]
0x27e3=[{"type":"t","subtype":56,"str":"const char *s"}]
0x27f3=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2907=[{"type":"t","subtype":56,"str":"const char *s"}]
0x291e=[{"type":"t","subtype":56,"str":"arg1"}]
0x2969=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2985=[{"type":"t","subtype":56,"str":"arg1"}]
0x2989=[{"type":"t","subtype":56,"str":"arg2"}]
0x298d=[{"type":"t","subtype":56,"str":"arg3"}]
0x29a4=[{"type":"t","subtype":56,"str":"const char *function"}]
0x29a7=[{"type":"t","subtype":56,"str":"unsigned int line"}]
0x29b3=[{"type":"t","subtype":56,"str":"const char *file"}]
0x29bd=[{"type":"t","subtype":56,"str":"const char *assertion"}]
0x29e4=[{"type":"t","subtype":56,"str":"int64_t arg1"}]
0x2a0b=[{"type":"t","subtype":56,"str":"int64_t arg1"}]
0x2a4c=[{"type":"t","subtype":56,"str":"arg1"}]
0x2a53=[{"type":"t","subtype":56,"str":"arg2"}]
0x2a5a=[{"type":"t","subtype":56,"str":"arg3"}]
0x2a68=[{"type":"t","subtype":56,"str":"const char *mode"}]
0x2a72=[{"type":"t","subtype":56,"str":"const char *filename"}]
0x2a8c=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2aa5=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2b06=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2b19=[{"type":"t","subtype":56,"str":"const char *s2"}]
0x2b1c=[{"type":"t","subtype":56,"str":"const char *s1"}]
0x2b5c=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2b6f=[{"type":"t","subtype":56,"str":"const char *src"}]
0x2b72=[{"type":"t","subtype":56,"str":"char *dest"}]
0x2baa=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2bb2=[{"type":"t","subtype":56,"str":"int64_t arg3"}]
0x2bbd=[{"type":"t","subtype":56,"str":"int64_t arg2"}]
0x2bc2=[{"type":"t","subtype":56,"str":"int64_t arg1"}]
0x2bd1=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x2bdc=[{"type":"t","subtype":56,"str":"int size"}]
0x2be1=[{"type":"t","subtype":56,"str":"char *s"}]
0x2c15=[{"type":"t","subtype":56,"str":"const char *format"}]
0x2c29=[{"type":"t","subtype":56,"str":"const char *format"}]
0x2c3a=[{"type":"t","subtype":56,"str":"char *s"}]
0x2c57=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2c63=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2c8c=[{"type":"t","subtype":56,"str":"int64_t arg3"}]
0x2c9b=[{"type":"t","subtype":56,"str":"char *arg2"}]
0x2c9e=[{"type":"t","subtype":56,"str":"const char *arg1"}]
0x2cb6=[{"type":"t","subtype":56,"str":"const char *format"}]
0x2ccf=[{"type":"t","subtype":56,"str":"const char *format"}]
0x2ce0=[{"type":"t","subtype":56,"str":"char *s"}]
0x2cfd=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2d09=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2d32=[{"type":"t","subtype":56,"str":"int64_t arg3"}]
0x2d3e=[{"type":"t","subtype":56,"str":"const char *arg2"}]
0x2d41=[{"type":"t","subtype":56,"str":"const char *arg1"}]
0x2d54=[{"type":"t","subtype":56,"str":"size_t n"}]
0x2d59=[{"type":"t","subtype":56,"str":"const void *s2"}]
0x2d5c=[{"type":"t","subtype":56,"str":"const void *s1"}]
0x2d8c=[{"type":"t","subtype":56,"str":"const char *format"}]
0x2da4=[{"type":"t","subtype":56,"str":"const char *s2"}]
0x2da7=[{"type":"t","subtype":56,"str":"const char *s1"}]
0x2dba=[{"type":"t","subtype":56,"str":"const char *format"}]
0x2dda=[{"type":"t","subtype":56,"str":"const char *format"}]
0x2df0=[{"type":"t","subtype":56,"str":"const char *format"}]
0x2e04=[{"type":"t","subtype":56,"str":"const char *format"}]
0x2e45=[{"type":"t","subtype":56,"str":"int status"}]
0x2e60=[{"type":"t","subtype":56,"str":"arg1"}]
0x2e71=[{"type":"t","subtype":56,"str":"int whence"}]
0x2e76=[{"type":"t","subtype":56,"str":"long offset"}]
0x2e7b=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x2e87=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x2e98=[{"type":"t","subtype":56,"str":"int whence"}]
0x2e9d=[{"type":"t","subtype":56,"str":"long offset"}]
0x2ea0=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x2eba=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2ec6=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2ed2=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2ede=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2efe=[{"type":"t","subtype":56,"str":"arg1"}]
0x2f00=[{"type":"t","subtype":56,"str":"arg2"}]
0x2f03=[{"type":"t","subtype":56,"str":"arg3"}]
0x2f31=[{"type":"t","subtype":56,"str":"struct sigaction *act"}]
0x2f38=[{"type":"t","subtype":56,"str":"struct sigaction *oldact"}]
0x2f3d=[{"type":"t","subtype":56,"str":"int signum"}]
0x2f66=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2f72=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2f92=[{"type":"t","subtype":56,"str":"arg1"}]
0x2f95=[{"type":"t","subtype":56,"str":"arg2"}]
0x2f98=[{"type":"t","subtype":56,"str":"int oflag"}]
0x2fad=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2fb5=[{"type":"t","subtype":56,"str":"size_t nbytes"}]
0x2fb8=[{"type":"t","subtype":56,"str":"const char *ptr"}]
0x2fbb=[{"type":"t","subtype":56,"str":"int fd"}]
0x2fca=[{"type":"t","subtype":56,"str":"const char *s"}]
0x2fd7=[{"type":"t","subtype":56,"str":"int fildes"}]
0x2ff0=[{"type":"t","subtype":56,"str":"int errnum"}]
0x301a=[{"type":"t","subtype":56,"str":"const char *s"}]
0x302b=[{"type":"t","subtype":56,"str":"int errnum"}]
0x3055=[{"type":"t","subtype":56,"str":"const char *s"}]
0x3081=[{"type":"t","subtype":56,"str":"const char *s"}]
0x30b2=[{"type":"t","subtype":56,"str":"const char *mode"}]
0x30b9=[{"type":"t","subtype":56,"str":"const char *filename"}]
0x30d1=[{"type":"t","subtype":56,"str":"int64_t arg1"}]
0x3112=[{"type":"t","subtype":56,"str":"size_t nmemb"}]
0x3115=[{"type":"t","subtype":56,"str":"void *ptr"}]
0x311d=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x3120=[{"type":"t","subtype":56,"str":"size_t size"}]
0x3134=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x313c=[{"type":"t","subtype":56,"str":"const char *s"}]
0x3167=[{"type":"t","subtype":56,"str":"const char *s"}]
0x3178=[{"type":"t","subtype":56,"str":"const char *function"}]
0x317f=[{"type":"t","subtype":56,"str":"unsigned int line"}]
0x318=[{"type":"C","str":"[00] -r-- section size 28 named .interp"}]
0x3184=[{"type":"t","subtype":56,"str":"const char *file"}]
0x318b=[{"type":"t","subtype":56,"str":"const char *assertion"}]
0x3197=[{"type":"t","subtype":56,"str":"const char *function"}]
0x319e=[{"type":"t","subtype":56,"str":"unsigned int line"}]
0x31a3=[{"type":"t","subtype":56,"str":"const char *file"}]
0x31aa=[{"type":"t","subtype":56,"str":"const char *assertion"}]
0x31bc=[{"type":"C","str":"[16] -r-x section size 13 named .fini"}]
0x338=[{"type":"C","str":"[01] -r-- section size 48 named .note.gnu.property"}]
0x368=[{"type":"C","str":"[02] -r-- section size 36 named .note.gnu.build-id"}]
0x38c=[{"type":"C","str":"[03] -r-- section size 32 named .note.ABI-tag"}]
0x3b0=[{"type":"C","str":"[04] -r-- section size 52 named .gnu.hash"}]
0x3e8=[{"type":"C","str":"[05] -r-- section size 1152 named .dynsym"}]
0x4000=[{"type":"C","str":"[17] -r-- section size 1315 named .rodata"}]
0x4004=[{"size":18,"type":"s","subtype":98,"str":"setsockopt failed"}]
0x4016=[{"size":14,"type":"s","subtype":98,"str":"error on dup2"}]
0x4024=[{"size":15,"type":"s","subtype":98,"str":"setvbuf failed"}]
0x4033=[{"size":18,"type":"s","subtype":98,"str":"shutdown() failed"}]
0x4045=[{"size":18,"type":"s","subtype":98,"str":"too few arguments"}]
0x4058=[{"size":31,"type":"s","subtype":98,"str":"Flushing output buffers failed"}]
0x4078=[{"size":52,"type":"s","subtype":98,"str":"could not close client connection after handling it"}]
0x40b0=[{"size":24,"type":"s","subtype":98,"str":"Could not hash password"}]
0x40c8=[{"size":22,"type":"s","subtype":98,"str":"invalid hex character"}]
0x40de=[{"size":29,"type":"s","subtype":98,"str":"../shared/PasswordExercise.c"}]
0x40fb=[{"size":20,"type":"s","subtype":98,"str":"characters % 2 == 0"}]
0x4111=[{"size":12,"type":"s","subtype":98,"str":"./users.txt"}]
0x4120=[{"size":35,"type":"s","subtype":98,"str":"could not open file with usernames"}]
0x4148=[{"size":60,"type":"s","subtype":98,"str":"malformed line in user file: could not even read user name."}]
0x4188=[{"size":43,"type":"s","subtype":98,"str":"malformed line in user file: no seed found"}]
0x41b8=[{"size":43,"type":"s","subtype":98,"str":"malformed line in user file: no hash found"}]
0x41e3=[{"size":15,"type":"s","subtype":98,"str":"Hello, world!\\n"}]
0x41f2=[{"size":29,"type":"s","subtype":98,"str":"Please enter your username: "}]
0x4210=[{"size":35,"type":"s","subtype":98,"str":"could not get username from client"}]
0x4233=[{"size":26,"type":"s","subtype":98,"str":"no user having that name\\n"}]
0x424d=[{"size":11,"type":"s","subtype":98,"str":"Password: "}]
0x4258=[{"size":36,"type":"s","subtype":98,"str":"could not read password from client"}]
0x427c=[{"size":14,"type":"s","subtype":98,"str":"Welcome, %s!\\n"}]
0x428a=[{"size":6,"type":"s","subtype":98,"str":"admin"}]
0x4290=[{"size":20,"type":"s","subtype":98,"str":"Here is your flag:\\n"}]
0x42a4=[{"size":30,"type":"s","subtype":98,"str":"There is nothing you can do.\\n"}]
0x42c2=[{"size":15,"type":"s","subtype":98,"str":"Login failed.\\n"}]
0x42d1=[{"size":10,"type":"s","subtype":98,"str":"Goodbye!\\n"}]
0x42e0=[{"size":9,"type":"s","subtype":98,"str":"from_hex"}]
0x42e9=[{"size":27,"type":"s","subtype":98,"str":"Error number (errno): %d.\\n"}]
0x4304=[{"size":28,"type":"s","subtype":98,"str":"could not get file position"}]
0x4320=[{"size":30,"type":"s","subtype":98,"str":"could not seek to end of file"}]
0x433e=[{"size":24,"type":"s","subtype":98,"str":"failed to open \\"%s\\": %s"}]
0x4356=[{"size":28,"type":"s","subtype":98,"str":"failed to write to \\"%s\\": %s"}]
0x4372=[{"size":21,"type":"s","subtype":98,"str":"failed to close \\"%s\\""}]
0x4388=[{"size":35,"type":"s","subtype":98,"str":"could not get end of file position"}]
0x43b0=[{"size":69,"type":"s","subtype":98,"str":"could not seek back to old file position while determining file size"}]
0x43f8=[{"size":32,"type":"s","subtype":98,"str":"could not initialize signal set"}]
0x4418=[{"size":32,"type":"s","subtype":98,"str":"could not set up signal handler"}]
0x443a=[{"size":9,"type":"s","subtype":98,"str":"flag.txt"}]
0x4443=[{"size":19,"type":"s","subtype":98,"str":"size < sizeof(buf)"}]
0x4456=[{"size":19,"type":"s","subtype":98,"str":"bytes_read == size"}]
0x4470=[{"size":118,"type":"s","subtype":98,"str":"could not open flag file. Sorry! You actually did it!\\n This is just a problem with giving you your deserved solution."}]
0x44e8=[{"size":43,"type":"s","subtype":98,"str":"../../shared/plaintext_server/print_flag.c"}]
0x4518=[{"size":11,"type":"s","subtype":98,"str":"print_flag"}]
0x4524=[{"type":"C","str":"[18] -r-- section size 140 named .eh_frame_hdr"}]
0x45b0=[{"type":"C","str":"[19] -r-- section size 568 named .eh_frame"}]
0x5c78=[{"size":8,"type":"d"},{"type":"C","str":"[20] -rw- section size 8 named .init_array"}]
0x5c80=[{"size":8,"type":"d"},{"type":"C","str":"[21] -rw- section size 8 named .fini_array"}]
0x5c88=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[22] -rw- section size 512 named .dynamic"}]
0x5c90=[{"size":8,"type":"d","str":"8"}]
0x5c98=[{"size":8,"type":"d","str":"8"}]
0x5ca0=[{"size":8,"type":"d","str":"8"}]
0x5ca8=[{"size":8,"type":"d","str":"8"}]
0x5cb0=[{"size":8,"type":"d","str":"8"}]
0x5cb8=[{"size":8,"type":"d","str":"8"}]
0x5cc0=[{"size":8,"type":"d","str":"8"}]
0x5cc8=[{"size":8,"type":"d","str":"8"}]
0x5cd0=[{"size":8,"type":"d","str":"8"}]
0x5cd8=[{"size":8,"type":"d","str":"8"}]
0x5ce0=[{"size":8,"type":"d","str":"8"}]
0x5ce8=[{"size":8,"type":"d","str":"8"}]
0x5cf0=[{"size":8,"type":"d","str":"8"}]
0x5cf8=[{"size":8,"type":"d","str":"8"}]
0x5d00=[{"size":8,"type":"d","str":"8"}]
0x5d08=[{"size":8,"type":"d","str":"8"}]
0x5d10=[{"size":8,"type":"d","str":"8"}]
0x5d18=[{"size":8,"type":"d","str":"8"}]
0x5d20=[{"size":8,"type":"d","str":"8"}]
0x5d28=[{"size":8,"type":"d","str":"8"}]
0x5d30=[{"size":8,"type":"d","str":"8"}]
0x5d38=[{"size":8,"type":"d","str":"8"}]
0x5d40=[{"size":8,"type":"d","str":"8"}]
0x5d48=[{"size":8,"type":"d","str":"8"}]
0x5d50=[{"size":8,"type":"d","str":"8"}]
0x5d58=[{"size":8,"type":"d","str":"8"}]
0x5d60=[{"size":8,"type":"d","str":"8"}]
0x5d68=[{"size":8,"type":"d","str":"8"}]
0x5d70=[{"size":8,"type":"d","str":"8"}]
0x5d78=[{"size":8,"type":"d","str":"8"}]
0x5d80=[{"size":8,"type":"d","str":"8"}]
0x5d88=[{"size":8,"type":"d","str":"8"}]
0x5d90=[{"size":8,"type":"d","str":"8"}]
0x5d98=[{"size":8,"type":"d","str":"8"}]
0x5da0=[{"size":8,"type":"d","str":"8"}]
0x5da8=[{"size":8,"type":"d","str":"8"}]
0x5db0=[{"size":8,"type":"d","str":"8"}]
0x5db8=[{"size":8,"type":"d","str":"8"}]
0x5dc0=[{"size":8,"type":"d","str":"8"}]
0x5dc8=[{"size":8,"type":"d","str":"8"}]
0x5dd0=[{"size":8,"type":"d","str":"8"}]
0x5dd8=[{"size":8,"type":"d","str":"8"}]
0x5de0=[{"size":8,"type":"d","str":"8"}]
0x5de8=[{"size":8,"type":"d","str":"8"}]
0x5df0=[{"size":8,"type":"d","str":"8"}]
0x5df8=[{"size":8,"type":"d","str":"8"}]
0x5e00=[{"size":8,"type":"d","str":"8"}]
0x5e08=[{"size":8,"type":"d","str":"8"}]
0x5e10=[{"size":8,"type":"d","str":"8"}]
0x5e18=[{"size":8,"type":"d","str":"8"}]
0x5e20=[{"size":8,"type":"d","str":"8"}]
0x5e28=[{"size":8,"type":"d","str":"8"}]
0x5e30=[{"size":8,"type":"d","str":"8"}]
0x5e38=[{"size":8,"type":"d","str":"8"}]
0x5e40=[{"size":8,"type":"d","str":"8"}]
0x5e48=[{"size":8,"type":"d","str":"8"}]
0x5e50=[{"size":8,"type":"d","str":"8"}]
0x5e58=[{"size":8,"type":"d","str":"8"}]
0x5e60=[{"size":8,"type":"d","str":"8"}]
0x5e68=[{"size":8,"type":"d","str":"8"}]
0x5e70=[{"size":8,"type":"d","str":"8"}]
0x5e78=[{"size":8,"type":"d","str":"8"}]
0x5e80=[{"size":8,"type":"d","str":"8"}]
0x5e88=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[23] -rw- section size 376 named .got"}]
0x5e90=[{"size":8,"type":"d","str":"8"}]
0x5e98=[{"size":8,"type":"d","str":"8"}]
0x5ea0=[{"size":8,"type":"d"}]
0x5ea8=[{"size":8,"type":"d"}]
0x5eb0=[{"size":8,"type":"d"}]
0x5eb8=[{"size":8,"type":"d"}]
0x5ec0=[{"size":8,"type":"d"}]
0x5ec8=[{"size":8,"type":"d"}]
0x5ed0=[{"size":8,"type":"d"}]
0x5ed8=[{"size":8,"type":"d"}]
0x5ee0=[{"size":8,"type":"d"}]
0x5ee8=[{"size":8,"type":"d"}]
0x5ef0=[{"size":8,"type":"d"}]
0x5ef8=[{"size":8,"type":"d"}]
0x5f00=[{"size":8,"type":"d"}]
0x5f08=[{"size":8,"type":"d"}]
0x5f10=[{"size":8,"type":"d"}]
0x5f18=[{"size":8,"type":"d"}]
0x5f20=[{"size":8,"type":"d"}]
0x5f28=[{"size":8,"type":"d"}]
0x5f30=[{"size":8,"type":"d"}]
0x5f38=[{"size":8,"type":"d"}]
0x5f40=[{"size":8,"type":"d"}]
0x5f48=[{"size":8,"type":"d"}]
0x5f50=[{"size":8,"type":"d"}]
0x5f58=[{"size":8,"type":"d"}]
0x5f60=[{"size":8,"type":"d"}]
0x5f68=[{"size":8,"type":"d"}]
0x5f70=[{"size":8,"type":"d"}]
0x5f78=[{"size":8,"type":"d"}]
0x5f80=[{"size":8,"type":"d"}]
0x5f88=[{"size":8,"type":"d"}]
0x5f90=[{"size":8,"type":"d"}]
0x5f98=[{"size":8,"type":"d"}]
0x5fa0=[{"size":8,"type":"d"}]
0x5fa8=[{"size":8,"type":"d"}]
0x5fb0=[{"size":8,"type":"d"}]
0x5fb8=[{"size":8,"type":"d"}]
0x5fc0=[{"size":8,"type":"d"}]
0x5fc8=[{"size":8,"type":"d"}]
0x5fd0=[{"size":8,"type":"d"}]
0x5fd8=[{"size":8,"type":"d"}]
0x5fe0=[{"size":8,"type":"d"}]
0x5fe8=[{"size":8,"type":"d"}]
0x5ff0=[{"size":8,"type":"d"}]
0x5ff8=[{"size":8,"type":"d"}]
0x6000=[{"type":"C","str":"[24] -rw- section size 16 named .data"}]
0x6008=[{"size":8,"type":"d"}]
0x6020=[{"type":"C","str":"[25] -rw- section size 56 named .bss"},{"size":8,"type":"d"}]
0x6040=[{"size":8,"type":"d"}]
0x6048=[{"size":8,"type":"d"}]
0x6060=[{"size":8,"type":"d"}]
0x6068=[{"size":8,"type":"d"}]
0x6070=[{"size":8,"type":"d"}]
0x6078=[{"size":8,"type":"d"}]
0x6080=[{"size":8,"type":"d"}]
0x6088=[{"size":8,"type":"d"}]
0x6090=[{"size":8,"type":"d"}]
0x6098=[{"size":8,"type":"d"}]
0x60a0=[{"size":8,"type":"d"}]
0x60a8=[{"size":8,"type":"d"}]
0x60b0=[{"size":8,"type":"d"}]
0x60b8=[{"size":8,"type":"d"}]
0x60c0=[{"size":8,"type":"d"}]
0x60c8=[{"size":8,"type":"d"}]
0x60d0=[{"size":8,"type":"d"}]
0x60d8=[{"size":8,"type":"d"}]
0x60e0=[{"size":8,"type":"d"}]
0x60e8=[{"size":8,"type":"d"}]
0x60f0=[{"size":8,"type":"d"}]
0x60f8=[{"size":8,"type":"d"}]
0x6100=[{"size":8,"type":"d"}]
0x6108=[{"size":8,"type":"d"}]
0x6110=[{"size":8,"type":"d"}]
0x6118=[{"size":8,"type":"d"}]
0x6120=[{"size":8,"type":"d"}]
0x6128=[{"size":8,"type":"d"}]
0x6130=[{"size":8,"type":"d"}]
0x6138=[{"size":8,"type":"d"}]
0x6140=[{"size":8,"type":"d"}]
0x6148=[{"size":8,"type":"d"}]
0x6150=[{"size":8,"type":"d"}]
0x6158=[{"size":8,"type":"d"}]
0x6160=[{"size":8,"type":"d"}]
0x6168=[{"size":8,"type":"d"}]
0x6170=[{"size":8,"type":"d"}]
0x6178=[{"size":8,"type":"d"}]
0x6180=[{"size":8,"type":"d"}]
0x6188=[{"size":8,"type":"d"}]
0x6190=[{"size":8,"type":"d"}]
0x6198=[{"size":8,"type":"d"}]
0x61a0=[{"size":8,"type":"d"}]
0x61a8=[{"size":8,"type":"d"}]
0x61b0=[{"size":8,"type":"d"}]
0x61b8=[{"size":8,"type":"d"}]
0x868=[{"type":"C","str":"[06] -r-- section size 561 named .dynstr"}]
0xa9a=[{"type":"C","str":"[07] -r-- section size 96 named .gnu.version"}]
0xb00=[{"type":"C","str":"[08] -r-- section size 112 named .gnu.version_r"}]
0xb70=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[09] -r-- section size 264 named .rela.dyn"}]
0xb78=[{"size":8,"type":"d","str":"8"}]
0xb80=[{"size":8,"type":"d","str":"8"}]
0xb88=[{"size":8,"type":"d","str":"8"}]
0xb90=[{"size":8,"type":"d","str":"8"}]
0xb98=[{"size":8,"type":"d","str":"8"}]
0xba0=[{"size":8,"type":"d","str":"8"}]
0xba8=[{"size":8,"type":"d","str":"8"}]
0xbb0=[{"size":8,"type":"d","str":"8"}]
0xbb8=[{"size":8,"type":"d","str":"8"}]
0xbc0=[{"size":8,"type":"d","str":"8"}]
0xbc8=[{"size":8,"type":"d","str":"8"}]
0xbd0=[{"size":8,"type":"d","str":"8"}]
0xbd8=[{"size":8,"type":"d","str":"8"}]
0xbe0=[{"size":8,"type":"d","str":"8"}]
0xbe8=[{"size":8,"type":"d","str":"8"}]
0xbf0=[{"size":8,"type":"d","str":"8"}]
0xbf8=[{"size":8,"type":"d","str":"8"}]
0xc00=[{"size":8,"type":"d","str":"8"}]
0xc08=[{"size":8,"type":"d","str":"8"}]
0xc10=[{"size":8,"type":"d","str":"8"}]
0xc18=[{"size":8,"type":"d","str":"8"}]
0xc20=[{"size":8,"type":"d","str":"8"}]
0xc28=[{"size":8,"type":"d","str":"8"}]
0xc30=[{"size":8,"type":"d","str":"8"}]
0xc38=[{"size":8,"type":"d","str":"8"}]
0xc40=[{"size":8,"type":"d","str":"8"}]
0xc48=[{"size":8,"type":"d","str":"8"}]
0xc50=[{"size":8,"type":"d","str":"8"}]
0xc58=[{"size":8,"type":"d","str":"8"}]
0xc60=[{"size":8,"type":"d","str":"8"}]
0xc68=[{"size":8,"type":"d","str":"8"}]
0xc70=[{"size":8,"type":"d","str":"8"}]
0xc78=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[10] -r-- section size 936 named .rela.plt"}]
0xc80=[{"size":8,"type":"d","str":"8"}]
0xc88=[{"size":8,"type":"d","str":"8"}]
0xc90=[{"size":8,"type":"d","str":"8"}]
0xc98=[{"size":8,"type":"d","str":"8"}]
0xca0=[{"size":8,"type":"d","str":"8"}]
0xca8=[{"size":8,"type":"d","str":"8"}]
0xcb0=[{"size":8,"type":"d","str":"8"}]
0xcb8=[{"size":8,"type":"d","str":"8"}]
0xcc0=[{"size":8,"type":"d","str":"8"}]
0xcc8=[{"size":8,"type":"d","str":"8"}]
0xcd0=[{"size":8,"type":"d","str":"8"}]
0xcd8=[{"size":8,"type":"d","str":"8"}]
0xce0=[{"size":8,"type":"d","str":"8"}]
0xce8=[{"size":8,"type":"d","str":"8"}]
0xcf0=[{"size":8,"type":"d","str":"8"}]
0xcf8=[{"size":8,"type":"d","str":"8"}]
0xd00=[{"size":8,"type":"d","str":"8"}]
0xd08=[{"size":8,"type":"d","str":"8"}]
0xd10=[{"size":8,"type":"d","str":"8"}]
0xd18=[{"size":8,"type":"d","str":"8"}]
0xd20=[{"size":8,"type":"d","str":"8"}]
0xd28=[{"size":8,"type":"d","str":"8"}]
0xd30=[{"size":8,"type":"d","str":"8"}]
0xd38=[{"size":8,"type":"d","str":"8"}]
0xd40=[{"size":8,"type":"d","str":"8"}]
0xd48=[{"size":8,"type":"d","str":"8"}]
0xd50=[{"size":8,"type":"d","str":"8"}]
0xd58=[{"size":8,"type":"d","str":"8"}]
0xd60=[{"size":8,"type":"d","str":"8"}]
0xd68=[{"size":8,"type":"d","str":"8"}]
0xd70=[{"size":8,"type":"d","str":"8"}]
0xd78=[{"size":8,"type":"d","str":"8"}]
0xd80=[{"size":8,"type":"d","str":"8"}]
0xd88=[{"size":8,"type":"d","str":"8"}]
0xd90=[{"size":8,"type":"d","str":"8"}]
0xd98=[{"size":8,"type":"d","str":"8"}]
0xda0=[{"size":8,"type":"d","str":"8"}]
0xda8=[{"size":8,"type":"d","str":"8"}]
0xdb0=[{"size":8,"type":"d","str":"8"}]
0xdb8=[{"size":8,"type":"d","str":"8"}]
0xdc0=[{"size":8,"type":"d","str":"8"}]
0xdc8=[{"size":8,"type":"d","str":"8"}]
0xdd0=[{"size":8,"type":"d","str":"8"}]
0xdd8=[{"size":8,"type":"d","str":"8"}]
0xde0=[{"size":8,"type":"d","str":"8"}]
0xde8=[{"size":8,"type":"d","str":"8"}]
0xdf0=[{"size":8,"type":"d","str":"8"}]
0xdf8=[{"size":8,"type":"d","str":"8"}]
0xe00=[{"size":8,"type":"d","str":"8"}]
0xe08=[{"size":8,"type":"d","str":"8"}]
0xe10=[{"size":8,"type":"d","str":"8"}]
0xe18=[{"size":8,"type":"d","str":"8"}]
0xe20=[{"size":8,"type":"d","str":"8"}]
0xe28=[{"size":8,"type":"d","str":"8"}]
0xe30=[{"size":8,"type":"d","str":"8"}]
0xe38=[{"size":8,"type":"d","str":"8"}]
0xe40=[{"size":8,"type":"d","str":"8"}]
0xe48=[{"size":8,"type":"d","str":"8"}]
0xe50=[{"size":8,"type":"d","str":"8"}]
0xe58=[{"size":8,"type":"d","str":"8"}]
0xe60=[{"size":8,"type":"d","str":"8"}]
0xe68=[{"size":8,"type":"d","str":"8"}]
0xe70=[{"size":8,"type":"d","str":"8"}]
0xe78=[{"size":8,"type":"d","str":"8"}]
0xe80=[{"size":8,"type":"d","str":"8"}]
0xe88=[{"size":8,"type":"d","str":"8"}]
0xe90=[{"size":8,"type":"d","str":"8"}]
0xe98=[{"size":8,"type":"d","str":"8"}]
0xea0=[{"size":8,"type":"d","str":"8"}]
0xea8=[{"size":8,"type":"d","str":"8"}]
0xeb0=[{"size":8,"type":"d","str":"8"}]
0xeb8=[{"size":8,"type":"d","str":"8"}]
0xec0=[{"size":8,"type":"d","str":"8"}]
0xec8=[{"size":8,"type":"d","str":"8"}]
0xed0=[{"size":8,"type":"d","str":"8"}]
0xed8=[{"size":8,"type":"d","str":"8"}]
0xee0=[{"size":8,"type":"d","str":"8"}]
0xee8=[{"size":8,"type":"d","str":"8"}]
0xef0=[{"size":8,"type":"d","str":"8"}]
0xef8=[{"size":8,"type":"d","str":"8"}]
0xf00=[{"size":8,"type":"d","str":"8"}]
0xf08=[{"size":8,"type":"d","str":"8"}]
0xf10=[{"size":8,"type":"d","str":"8"}]
0xf18=[{"size":8,"type":"d","str":"8"}]
0xf20=[{"size":8,"type":"d","str":"8"}]
0xf28=[{"size":8,"type":"d","str":"8"}]
0xf30=[{"size":8,"type":"d","str":"8"}]
0xf38=[{"size":8,"type":"d","str":"8"}]
0xf40=[{"size":8,"type":"d","str":"8"}]
0xf48=[{"size":8,"type":"d","str":"8"}]
0xf50=[{"size":8,"type":"d","str":"8"}]
0xf58=[{"size":8,"type":"d","str":"8"}]
0xf60=[{"size":8,"type":"d","str":"8"}]
0xf68=[{"size":8,"type":"d","str":"8"}]
0xf70=[{"size":8,"type":"d","str":"8"}]
0xf78=[{"size":8,"type":"d","str":"8"}]
0xf80=[{"size":8,"type":"d","str":"8"}]
0xf88=[{"size":8,"type":"d","str":"8"}]
0xf90=[{"size":8,"type":"d","str":"8"}]
0xf98=[{"size":8,"type":"d","str":"8"}]
0xfa0=[{"size":8,"type":"d","str":"8"}]
0xfa8=[{"size":8,"type":"d","str":"8"}]
0xfb0=[{"size":8,"type":"d","str":"8"}]
0xfb8=[{"size":8,"type":"d","str":"8"}]
0xfc0=[{"size":8,"type":"d","str":"8"}]
0xfc8=[{"size":8,"type":"d","str":"8"}]
0xfd0=[{"size":8,"type":"d","str":"8"}]
0xfd8=[{"size":8,"type":"d","str":"8"}]
0xfe0=[{"size":8,"type":"d","str":"8"}]
0xfe8=[{"size":8,"type":"d","str":"8"}]
0xff0=[{"size":8,"type":"d","str":"8"}]
0xff8=[{"size":8,"type":"d","str":"8"}]

/core/analysis/meta/spaces
name=CS
spacestack=["*"]

/core/analysis/meta/spaces/spaces
bin=s

/core/analysis/noreturn
addr.2609.noreturn=true
addr.2794.noreturn=true
addr.2e14.noreturn=true

/core/analysis/typelinks

/core/analysis/types
FILE=typedef
__div_t=struct
__idtype=enum
__imaxdiv_t=struct
__ldiv_t=struct
__lldiv_t=struct
__siginfo_t=struct
__sigset_t=struct
_fd_set=struct
access_perm=enum
bool=type
char=type
char *=type
char16_t=type
char32_t=type
char8_t=type
clock_t=typedef
div_t=typedef
double=type
enum.__idtype=P_ALL,P_GID,P_PGID
enum.__idtype.0x0=P_ALL
enum.__idtype.0x1=P_GID
enum.__idtype.0x2=P_PGID
enum.__idtype.P_ALL=0x0
enum.__idtype.P_GID=0x1
enum.__idtype.P_PGID=0x2
enum.access_perm=F_OK,X_OK,W_OK,R_OK,WX_OK,RX_OK,RW_OK,RWX_OK
enum.access_perm.0x0=F_OK
enum.access_perm.0x1=X_OK
enum.access_perm.0x2=W_OK
enum.access_perm.0x3=WX_OK
enum.access_perm.0x4=R_OK
enum.access_perm.0x5=RX_OK
enum.access_perm.0x6=RW_OK
enum.access_perm.0x7=RWX_OK
enum.access_perm.F_OK=0x0
enum.access_perm.RWX_OK=0x7
enum.access_perm.RW_OK=0x6
enum.access_perm.RX_OK=0x5
enum.access_perm.R_OK=0x4
enum.access_perm.WX_OK=0x3
enum.access_perm.W_OK=0x2
enum.access_perm.X_OK=0x1
enum.sock_domain=AF_UNIX,AF_INET,AF_AX25,AF_IPX,AF_APPLETALK,AF_X25,AF_INET6,AF_DECnet,AF_KEY,AF_NETLINK,AF_PACKET,AF_RDS,AF_PPPOX,AF_LLC,AF_IB,AF_MPLS,AF_CAN,AF_TIPC,AF_BLUETOOTH,AF_ALG,AF_VSOCK,AF_KCM,AF_XDP
enum.sock_domain.0x1=AF_UNIX
enum.sock_domain.0x10=AF_INET6
enum.sock_domain.0x12=AF_DECnet
enum.sock_domain.0x15=AF_KEY
enum.sock_domain.0x16=AF_NETLINK
enum.sock_domain.0x17=AF_PACKET
enum.sock_domain.0x2=AF_INET
enum.sock_domain.0x21=AF_RDS
enum.sock_domain.0x24=AF_PPPOX
enum.sock_domain.0x26=AF_LLC
enum.sock_domain.0x27=AF_IB
enum.sock_domain.0x28=AF_MPLS
enum.sock_domain.0x29=AF_CAN
enum.sock_domain.0x3=AF_AX25
enum.sock_domain.0x30=AF_TIPC
enum.sock_domain.0x31=AF_BLUETOOTH
enum.sock_domain.0x38=AF_ALG
enum.sock_domain.0x4=AF_IPX
enum.sock_domain.0x40=AF_VSOCK
enum.sock_domain.0x41=AF_KCM
enum.sock_domain.0x44=AF_XDP
enum.sock_domain.0x5=AF_APPLETALK
enum.sock_domain.0x9=AF_X25
enum.sock_domain.AF_ALG=0x38
enum.sock_domain.AF_APPLETALK=0x5
enum.sock_domain.AF_AX25=0x3
enum.sock_domain.AF_BLUETOOTH=0x31
enum.sock_domain.AF_CAN=0x29
enum.sock_domain.AF_DECnet=0x12
enum.sock_domain.AF_IB=0x27
enum.sock_domain.AF_INET=0x2
enum.sock_domain.AF_INET6=0x10
enum.sock_domain.AF_IPX=0x4
enum.sock_domain.AF_KCM=0x41
enum.sock_domain.AF_KEY=0x15
enum.sock_domain.AF_LLC=0x26
enum.sock_domain.AF_MPLS=0x28
enum.sock_domain.AF_NETLINK=0x16
enum.sock_domain.AF_PACKET=0x17
enum.sock_domain.AF_PPPOX=0x24
enum.sock_domain.AF_RDS=0x21
enum.sock_domain.AF_TIPC=0x30
enum.sock_domain.AF_UNIX=0x1
enum.sock_domain.AF_VSOCK=0x40
enum.sock_domain.AF_X25=0x9
enum.sock_domain.AF_XDP=0x44
enum.sock_type=SOCK_STREAM,SOCK_DGRAM,SOCK_SEQPACKET,SOCK_RAW,SOCK_RDM,SOCK_PACKET,SOCK_DCCP
enum.sock_type.0x1=SOCK_DGRAM
enum.sock_type.0x2=SOCK_STREAM
enum.sock_type.0x3=SOCK_RAW
enum.sock_type.0x4=SOCK_RDM
enum.sock_type.0x5=SOCK_SEQPACKET
enum.sock_type.0x6=SOCK_DCCP
enum.sock_type.0x7=SOCK_PACKET
enum.sock_type.SOCK_DCCP=0x6
enum.sock_type.SOCK_DGRAM=0x1
enum.sock_type.SOCK_PACKET=0x7
enum.sock_type.SOCK_RAW=0x3
enum.sock_type.SOCK_RDM=0x4
enum.sock_type.SOCK_SEQPACKET=0x5
enum.sock_type.SOCK_STREAM=0x2
fd_mask=typedef
fd_set=typedef
fenv_t=typedef
fexcept_t=typedef
float=type
fpos_t=typedef
gid_t=type
id_t=type
idtype_t=typedef
imaxdiv_t=typedef
int=type
int16_t=type
int32_t=type
int64_t=type
int8_t=type
intmax_t=type
intptr_t=type
jmp_buf=typedef
lconv=struct
ldiv_t=typedef
lldiv_t=typedef
locale_t=typedef
long=type
long double=type
long int=type
long long=type
long long int=type
mbstate_t=typedef
nl_item=typedef
pid_t=type
ptrdiff_t=type
short=type
sigaction=struct
siginfo_t=typedef
sigset_t=typedef
sigval=union
size_t=type
sock_domain=enum
sock_type=enum
sockaddr=struct
socklen_t=typedef
ssize_t=type
std__type_info=struct
struct.__div_t=quot,rem
struct.__div_t.quot=int,0,0
struct.__div_t.rem=int,2,0
struct.__imaxdiv_t=quot,rem
struct.__imaxdiv_t.quot=intmax_t,0,0
struct.__imaxdiv_t.rem=intmax_t,8,0
struct.__ldiv_t=quot,rem
struct.__ldiv_t.quot=long int,0,0
struct.__ldiv_t.rem=long int,4,0
struct.__lldiv_t=quot,rem
struct.__lldiv_t.quot=long long int,0,0
struct.__lldiv_t.rem=long long int,4,0
struct.__siginfo_t=si_signo,si_code,si_value,si_errno,si_pid,si_uid,si_addr,si_status,si_band
struct.__siginfo_t.si_addr=void *,28,0
struct.__siginfo_t.si_band=int,36,0
struct.__siginfo_t.si_code=int,4,0
struct.__siginfo_t.si_errno=int,16,0
struct.__siginfo_t.si_pid=pid_t,20,0
struct.__siginfo_t.si_signo=int,0,0
struct.__siginfo_t.si_status=int,32,0
struct.__siginfo_t.si_uid=uid_t,24,0
struct.__siginfo_t.si_value=union sigval,8,0
struct.__sigset_t=sig
struct.__sigset_t.sig=unsigned long,0,0
struct._fd_set=fds_bits
struct._fd_set.fds_bits=fd_mask,0,0
struct.sigaction=sa_handler,sa_flags,sa_restorer,sa_mask
struct.sigaction.sa_flags=unsigned long,8,0
struct.sigaction.sa_handler=void *,0,0
struct.sigaction.sa_mask=sigset_t,20,0
struct.sigaction.sa_restorer=void *,12,0
struct.timespec=tv_sec,tv_nsec
struct.timespec.tv_nsec=long,8,0
struct.timespec.tv_sec=time_t,0,0
struct.timeval=tv_sec,tv_usec
struct.timeval.tv_sec=time_t,0,0
struct.timeval.tv_usec=suseconds_t,8,0
struct.tm=tm_sec,tm_min,tm_hour,tm_mday,tm_mon,tm_year,tm_wday,tm_yday,tm_isdst
struct.tm.tm_hour=int,8,0
struct.tm.tm_isdst=int,32,0
struct.tm.tm_mday=int,12,0
struct.tm.tm_min=int,4,0
struct.tm.tm_mon=int,16,0
struct.tm.tm_sec=int,0,0
struct.tm.tm_wday=int,24,0
struct.tm.tm_yday=int,28,0
struct.tm.tm_year=int,20,0
suseconds_t=typedef
time_t=typedef
timespec=struct
timeval=struct
tm=struct
type.bool=b
type.bool.size=8
type.bool.typeclass=None
type.char=c
type.char *=z
type.char *.size=64
type.char *.typeclass=None
type.char.size=8
type.char.typeclass=Signed Integral
type.char16_t=c
type.char16_t.size=16
type.char16_t.typeclass=Signed Integral
type.char32_t=c
type.char32_t.size=32
type.char32_t.typeclass=Signed Integral
type.char8_t=c
type.char8_t.size=8
type.char8_t.typeclass=Signed Integral
type.double=F
type.double.size=64
type.double.typeclass=Floating
type.float=f
type.float.size=32
type.float.typeclass=Floating
type.gid_t=q
type.gid_t.size=64
type.gid_t.typeclass=Integral
type.id_t=q
type.id_t.size=64
type.id_t.typeclass=Integral
type.int=d
type.int.size=32
type.int.typeclass=Signed Integral
type.int16_t=w
type.int16_t.size=16
type.int16_t.typeclass=Signed Integral
type.int32_t=d
type.int32_t.size=32
type.int32_t.typeclass=Signed Integral
type.int64_t=q
type.int64_t.size=64
type.int64_t.typeclass=Signed Integral
type.int8_t=b
type.int8_t.size=8
type.int8_t.typeclass=Signed Integral
type.intmax_t=q
type.intmax_t.size=64
type.intmax_t.typeclass=Signed Integral
type.intptr_t=q
type.intptr_t.size=64
type.intptr_t.typeclass=Signed Integral
type.long=x
type.long double=F
type.long double.size=64
type.long double.typeclass=Floating
type.long int=x
type.long int.size=64
type.long int.typeclass=Signed Integral
type.long long=q
type.long long int=q
type.long long int.size=64
type.long long int.typeclass=Signed Integral
type.long long.size=64
type.long long.typeclass=Signed Integral
type.long.size=64
type.long.typeclass=Signed Integral
type.pid_t=q
type.pid_t.size=64
type.pid_t.typeclass=Integral
type.ptrdiff_t=q
type.ptrdiff_t.size=64
type.ptrdiff_t.typeclass=Integral
type.short=w
type.short.size=16
type.short.typeclass=Signed Integral
type.size_t=q
type.size_t.size=64
type.size_t.typeclass=Unsigned Integral
type.ssize_t=q
type.ssize_t.size=64
type.ssize_t.typeclass=Signed Integral
type.uid_t=q
type.uid_t.size=64
type.uid_t.typeclass=Integral
type.uint16_t=w
type.uint16_t.size=16
type.uint16_t.typeclass=Unsigned Integral
type.uint32_t=d
type.uint32_t.size=32
type.uint32_t.typeclass=Unsigned Integral
type.uint64_t=q
type.uint64_t.size=64
type.uint64_t.typeclass=Unsigned Integral
type.uint8_t=b
type.uint8_t.size=8
type.uint8_t.typeclass=Unsigned Integral
type.uintmax_t=q
type.uintmax_t.size=64
type.uintmax_t.typeclass=Unsigned Integral
type.uintptr_t=q
type.uintptr_t.size=64
type.uintptr_t.typeclass=Unsigned Integral
type.unknown_t=q
type.unknown_t.size=64
type.unknown_t.typeclass=Integral
type.unsigned char=b
type.unsigned char.size=8
type.unsigned char.typeclass=Unsigned Integral
type.unsigned int=i
type.unsigned int.size=32
type.unsigned int.typeclass=Unsigned Integral
type.unsigned long=d
type.unsigned long long=q
type.unsigned long long.size=64
type.unsigned long long.typeclass=Unsigned Integral
type.unsigned long.size=32
type.unsigned long.typeclass=Unsigned Integral
type.unsigned short=w
type.unsigned short.size=16
type.unsigned short.typeclass=Unsigned Integral
type.void *=p
type.void *.size=64
type.void *.typeclass=None
type.void.size=0
type.void.typeclass=None
typedef.FILE=void
typedef.clock_t=void
typedef.div_t=struct __div_t
typedef.fd_mask=long int
typedef.fd_set=struct _fd_set
typedef.fenv_t=void
typedef.fexcept_t=void
typedef.fpos_t=void
typedef.idtype_t=enum __idtype
typedef.imaxdiv_t=struct __imaxdiv_t
typedef.jmp_buf=void
typedef.ldiv_t=struct __ldiv_t
typedef.lldiv_t=struct __lldiv_t
typedef.locale_t=void
typedef.mbstate_t=void
typedef.nl_item=int
typedef.siginfo_t=struct __siginfo_t
typedef.sigset_t=struct __sigset_t
typedef.socklen_t=int
typedef.suseconds_t=long
typedef.time_t=long
typedef.va_list=char *
typedef.wchar_t=int
typedef.wctrans_t=unsigned int
typedef.wctype_t=int
typedef.wint_t=int
uid_t=type
uint16_t=type
uint32_t=type
uint64_t=type
uint8_t=type
uintmax_t=type
uintptr_t=type
union.sigval=sival_int,sival_ptr
union.sigval.sival_int=int,0,0
union.sigval.sival_ptr=void *,0,0
unknown_t=type
unsigned char=type
unsigned int=type
unsigned long=type
unsigned long long=type
unsigned short=type
va_list=typedef
void=type
void *=type
wchar_t=typedef
wctrans_t=typedef
wctype_t=typedef
wint_t=typedef

/core/analysis/vars

/core/analysis/xrefs
0x2008=[{"to":24536,"type":"d"}]
0x2026=[{"to":24216,"type":"c"}]
0x2039=[{"to":8224,"type":"c"}]
0x2044=[{"to":1,"type":"d"}]
0x2049=[{"to":8224,"type":"c"}]
0x2054=[{"to":2,"type":"d"}]
0x2059=[{"to":8224,"type":"c"}]
0x2064=[{"to":3,"type":"d"}]
0x2069=[{"to":8224,"type":"c"}]
0x2074=[{"to":4,"type":"d"}]
0x2079=[{"to":8224,"type":"c"}]
0x2084=[{"to":5,"type":"d"}]
0x2089=[{"to":8224,"type":"c"}]
0x2094=[{"to":6,"type":"d"}]
0x2099=[{"to":8224,"type":"c"}]
0x20a4=[{"to":7,"type":"d"}]
0x20a9=[{"to":8224,"type":"c"}]
0x20b4=[{"to":8,"type":"d"}]
0x20b9=[{"to":8224,"type":"c"}]
0x20c4=[{"to":9,"type":"d"}]
0x20c9=[{"to":8224,"type":"c"}]
0x20d4=[{"to":10,"type":"d"}]
0x20d9=[{"to":8224,"type":"c"}]
0x20e4=[{"to":11,"type":"d"}]
0x20e9=[{"to":8224,"type":"c"}]
0x20f4=[{"to":12,"type":"d"}]
0x20f9=[{"to":8224,"type":"c"}]
0x2104=[{"to":13,"type":"d"}]
0x2109=[{"to":8224,"type":"c"}]
0x2114=[{"to":14,"type":"d"}]
0x2119=[{"to":8224,"type":"c"}]
0x2124=[{"to":15,"type":"d"}]
0x2129=[{"to":8224,"type":"c"}]
0x2134=[{"to":16,"type":"d"}]
0x2139=[{"to":8224,"type":"c"}]
0x2144=[{"to":17,"type":"d"}]
0x2149=[{"to":8224,"type":"c"}]
0x2154=[{"to":18,"type":"d"}]
0x2159=[{"to":8224,"type":"c"}]
0x2164=[{"to":19,"type":"d"}]
0x2169=[{"to":8224,"type":"c"}]
0x2174=[{"to":20,"type":"d"}]
0x2179=[{"to":8224,"type":"c"}]
0x2184=[{"to":21,"type":"d"}]
0x2189=[{"to":8224,"type":"c"}]
0x2194=[{"to":22,"type":"d"}]
0x2199=[{"to":8224,"type":"c"}]
0x21a4=[{"to":23,"type":"d"}]
0x21a9=[{"to":8224,"type":"c"}]
0x21b4=[{"to":24,"type":"d"}]
0x21b9=[{"to":8224,"type":"c"}]
0x21c4=[{"to":25,"type":"d"}]
0x21c9=[{"to":8224,"type":"c"}]
0x21d4=[{"to":26,"type":"d"}]
0x21d9=[{"to":8224,"type":"c"}]
0x21e4=[{"to":27,"type":"d"}]
0x21e9=[{"to":8224,"type":"c"}]
0x21f4=[{"to":28,"type":"d"}]
0x21f9=[{"to":8224,"type":"c"}]
0x2204=[{"to":29,"type":"d"}]
0x2209=[{"to":8224,"type":"c"}]
0x2214=[{"to":30,"type":"d"}]
0x2219=[{"to":8224,"type":"c"}]
0x2224=[{"to":31,"type":"d"}]
0x2229=[{"to":8224,"type":"c"}]
0x2234=[{"to":32,"type":"d"}]
0x2239=[{"to":8224,"type":"c"}]
0x2244=[{"to":33,"type":"d"}]
0x2249=[{"to":8224,"type":"c"}]
0x2254=[{"to":34,"type":"d"}]
0x2259=[{"to":8224,"type":"c"}]
0x2264=[{"to":35,"type":"d"}]
0x2269=[{"to":8224,"type":"c"}]
0x2274=[{"to":36,"type":"d"}]
0x2279=[{"to":8224,"type":"c"}]
0x2284=[{"to":37,"type":"d"}]
0x2289=[{"to":8224,"type":"c"}]
0x2294=[{"to":38,"type":"d"}]
0x2299=[{"to":8224,"type":"c"}]
0x22a4=[{"to":24560,"type":"c"}]
0x22b4=[{"to":24224,"type":"c"}]
0x22c4=[{"to":24232,"type":"c"}]
0x22d4=[{"to":24240,"type":"c"}]
0x22e4=[{"to":24248,"type":"c"}]
0x22f4=[{"to":24256,"type":"c"}]
0x2304=[{"to":24264,"type":"c"}]
0x2314=[{"to":24272,"type":"c"}]
0x2324=[{"to":24280,"type":"c"}]
0x2334=[{"to":24288,"type":"c"}]
0x2344=[{"to":24296,"type":"c"}]
0x2354=[{"to":24304,"type":"c"}]
0x2364=[{"to":24312,"type":"c"}]
0x2374=[{"to":24320,"type":"c"}]
0x2384=[{"to":24328,"type":"c"}]
0x2394=[{"to":24336,"type":"c"}]
0x23a4=[{"to":24344,"type":"c"}]
0x23b4=[{"to":24352,"type":"c"}]
0x23c4=[{"to":24360,"type":"c"}]
0x23d4=[{"to":24368,"type":"c"}]
0x23e4=[{"to":24376,"type":"c"}]
0x23f4=[{"to":24384,"type":"c"}]
0x2404=[{"to":24392,"type":"c"}]
0x2414=[{"to":24400,"type":"c"}]
0x2424=[{"to":24408,"type":"c"}]
0x2434=[{"to":24416,"type":"c"}]
0x2444=[{"to":24424,"type":"c"}]
0x2454=[{"to":24432,"type":"c"}]
0x2464=[{"to":24440,"type":"c"}]
0x2474=[{"to":24448,"type":"c"}]
0x2484=[{"to":24456,"type":"c"}]
0x2494=[{"to":24464,"type":"c"}]
0x24a4=[{"to":24472,"type":"c"}]
0x24b4=[{"to":24480,"type":"c"}]
0x24c4=[{"to":24488,"type":"c"}]
0x24d4=[{"to":24496,"type":"c"}]
0x24e4=[{"to":24504,"type":"c"}]
0x24f4=[{"to":24512,"type":"c"}]
0x2504=[{"to":24520,"type":"c"}]
0x2514=[{"to":24528,"type":"c"}]
0x2538=[{"to":597,"type":"d"},{"to":10132,"type":"d"}]
0x253f=[{"to":24568,"type":"C"}]
0x2550=[{"to":24592,"type":"d"}]
0x2557=[{"to":24592,"type":"d"}]
0x2563=[{"to":24544,"type":"d"}]
0x2580=[{"to":24592,"type":"d"}]
0x2587=[{"to":24592,"type":"d"}]
0x25a4=[{"to":24552,"type":"d"}]
0x25c4=[{"to":24656,"type":"d"}]
0x25ce=[{"to":24560,"type":"d"}]
0x25db=[{"to":24584,"type":"d"}]
0x25e2=[{"to":8864,"type":"C"}]
0x25e7=[{"to":9552,"type":"C"}]
0x25ec=[{"to":24656,"type":"d"}]
0x2604=[{"to":9600,"type":"c"}]
0x2641=[{"to":13,"type":"d"}]
0x264b=[{"to":9088,"type":"C"}]
0x265f=[{"to":8880,"type":"C"}]
0x266e=[{"to":8880,"type":"C"}]
0x267d=[{"to":8880,"type":"C"}]
0x269e=[{"to":24648,"type":"d"}]
0x26a5=[{"to":9040,"type":"C"}]
0x26bc=[{"to":24608,"type":"d"}]
0x26c3=[{"to":9040,"type":"C"}]
0x26da=[{"to":24640,"type":"d"}]
0x26e1=[{"to":9040,"type":"C"}]
0x26f0=[{"to":11263,"type":"C"}]
0x26f5=[{"to":24648,"type":"d"}]
0x26fc=[{"to":9488,"type":"C"}]
0x2704=[{"to":24640,"type":"d"}]
0x270b=[{"to":9488,"type":"C"}]
0x271c=[{"to":8928,"type":"C"}]
0x2727=[{"to":8944,"type":"C"}]
0x2735=[{"to":9008,"type":"C"}]
0x273a=[{"to":16388,"type":"d"}]
0x2741=[{"to":11796,"type":"C"}]
0x2746=[{"to":9816,"type":"c"}]
0x274b=[{"to":16406,"type":"d"}]
0x2752=[{"to":11796,"type":"C"}]
0x2757=[{"to":9871,"type":"c"}]
0x275c=[{"to":16420,"type":"d"}]
0x2763=[{"to":11796,"type":"C"}]
0x2768=[{"to":9963,"type":"c"}]
0x276a=[{"to":16472,"type":"d"}]
0x2771=[{"to":11796,"type":"C"}]
0x2776=[{"to":10005,"type":"c"}]
0x2778=[{"to":16435,"type":"d"}]
0x277f=[{"to":11796,"type":"C"}]
0x2784=[{"to":10021,"type":"c"}]
0x2786=[{"to":16504,"type":"d"}]
0x278d=[{"to":11796,"type":"C"}]
0x2792=[{"to":10032,"type":"c"}]
0x27a4=[{"to":2,"type":"d"}]
0x27ad=[{"to":9232,"type":"C"}]
0x27b4=[{"to":9737,"type":"C"}]
0x27b9=[{"to":16453,"type":"d"}]
0x27c0=[{"to":11796,"type":"C"}]
0x27c5=[{"to":10153,"type":"c"}]
0x27e6=[{"to":9152,"type":"C"}]
0x27f6=[{"to":9152,"type":"C"}]
0x27ff=[{"to":9104,"type":"C"}]
0x2808=[{"to":9136,"type":"C"}]
0x2824=[{"to":9376,"type":"C"}]
0x283e=[{"to":9216,"type":"C"}]
0x2858=[{"to":9216,"type":"C"}]
0x2873=[{"to":9472,"type":"C"}]
0x2882=[{"to":10469,"type":"c"}]
0x288b=[{"to":9248,"type":"C"}]
0x28a3=[{"to":9376,"type":"C"}]
0x28b3=[{"to":32,"type":"d"}]
0x28be=[{"to":9216,"type":"C"}]
0x28d9=[{"to":9472,"type":"C"}]
0x28e5=[{"to":9999,"type":"d"}]
0x28f5=[{"to":9296,"type":"C"}]
0x2900=[{"to":16560,"type":"d"}]
0x290a=[{"to":11796,"type":"C"}]
0x2933=[{"to":48,"type":"d"}]
0x2936=[{"to":10614,"type":"c"}]
0x2948=[{"to":87,"type":"d"}]
0x294b=[{"to":10614,"type":"c"}]
0x295d=[{"to":55,"type":"d"}]
0x2960=[{"to":10614,"type":"c"}]
0x2962=[{"to":16584,"type":"d"}]
0x296c=[{"to":11796,"type":"C"}]
0x299d=[{"to":17120,"type":"d"}]
0x29a7=[{"to":84,"type":"d"}]
0x29ac=[{"to":16606,"type":"d"}]
0x29b6=[{"to":16635,"type":"d"}]
0x29c0=[{"to":9024,"type":"C"}]
0x29cd=[{"to":10792,"type":"c"}]
0x29e6=[{"to":10514,"type":"C"}]
0x2a0d=[{"to":10514,"type":"C"}]
0x2a45=[{"to":592,"type":"d"}]
0x2a61=[{"to":16655,"type":"d"}]
0x2a6b=[{"to":16657,"type":"d"}]
0x2a75=[{"to":9056,"type":"C"}]
0x2a85=[{"to":16672,"type":"d"}]
0x2a8f=[{"to":11796,"type":"C"}]
0x2a9c=[{"to":11217,"type":"c"}]
0x2aa8=[{"to":9152,"type":"C"}]
0x2ac0=[{"to":10,"type":"d"}]
0x2ae2=[{"to":16707,"type":"d"}]
0x2aef=[{"to":9168,"type":"C"}]
0x2aff=[{"to":16712,"type":"d"}]
0x2b09=[{"to":11796,"type":"C"}]
0x2b1f=[{"to":9344,"type":"C"}]
0x2b36=[{"to":16707,"type":"d"}]
0x2b45=[{"to":9168,"type":"C"}]
0x2b55=[{"to":16776,"type":"d"}]
0x2b5f=[{"to":11796,"type":"C"}]
0x2b75=[{"to":9360,"type":"C"}]
0x2b84=[{"to":16707,"type":"d"}]
0x2b93=[{"to":9168,"type":"C"}]
0x2ba3=[{"to":16824,"type":"d"}]
0x2bad=[{"to":11796,"type":"C"}]
0x2bbd=[{"to":64,"type":"d"}]
0x2bc5=[{"to":10616,"type":"C"}]
0x2bcf=[{"to":11261,"type":"c"}]
0x2bdc=[{"to":512,"type":"d"}]
0x2be4=[{"to":9120,"type":"C"}]
0x2c0e=[{"to":16867,"type":"d"}]
0x2c1d=[{"to":8896,"type":"C"}]
0x2c22=[{"to":16882,"type":"d"}]
0x2c31=[{"to":8896,"type":"C"}]
0x2c3d=[{"to":9264,"type":"C"}]
0x2c50=[{"to":16912,"type":"d"}]
0x2c5a=[{"to":11796,"type":"C"}]
0x2c66=[{"to":9152,"type":"C"}]
0x2c7b=[{"to":10,"type":"d"}]
0x2ca1=[{"to":10813,"type":"C"}]
0x2caf=[{"to":16947,"type":"d"}]
0x2cbe=[{"to":8896,"type":"C"}]
0x2cc3=[{"to":11640,"type":"c"}]
0x2cc8=[{"to":16973,"type":"d"}]
0x2cd7=[{"to":8896,"type":"C"}]
0x2ce3=[{"to":9264,"type":"C"}]
0x2cf6=[{"to":16984,"type":"d"}]
0x2d00=[{"to":11796,"type":"C"}]
0x2d0c=[{"to":9152,"type":"C"}]
0x2d21=[{"to":10,"type":"d"}]
0x2d44=[{"to":10183,"type":"C"}]
0x2d54=[{"to":32,"type":"d"}]
0x2d5f=[{"to":9392,"type":"C"}]
0x2d6f=[{"to":11640,"type":"c"}]
0x2d85=[{"to":17020,"type":"d"}]
0x2d94=[{"to":8896,"type":"C"}]
0x2d9d=[{"to":17034,"type":"d"}]
0x2daa=[{"to":9344,"type":"C"}]
0x2db3=[{"to":17040,"type":"d"}]
0x2dc2=[{"to":8896,"type":"C"}]
0x2dcc=[{"to":12429,"type":"C"}]
0x2dd1=[{"to":11773,"type":"c"}]
0x2dd3=[{"to":17060,"type":"d"}]
0x2de2=[{"to":8896,"type":"C"}]
0x2de7=[{"to":11773,"type":"c"}]
0x2de9=[{"to":17090,"type":"d"}]
0x2df8=[{"to":8896,"type":"C"}]
0x2dfd=[{"to":17105,"type":"d"}]
0x2e0c=[{"to":8896,"type":"C"}]
0x2e1c=[{"to":9424,"type":"C"}]
0x2e21=[{"to":9312,"type":"C"}]
0x2e28=[{"to":17129,"type":"d"}]
0x2e34=[{"to":24640,"type":"d"}]
0x2e40=[{"to":8960,"type":"C"}]
0x2e4a=[{"to":9008,"type":"C"}]
0x2e63=[{"to":8912,"type":"C"}]
0x2e7e=[{"to":8992,"type":"C"}]
0x2e8a=[{"to":8912,"type":"C"}]
0x2ea3=[{"to":8992,"type":"C"}]
0x2eba=[{"to":17156,"type":"d"}]
0x2ec1=[{"to":11796,"type":"C"}]
0x2ec6=[{"to":17184,"type":"d"}]
0x2ecd=[{"to":11796,"type":"C"}]
0x2ed2=[{"to":17288,"type":"d"}]
0x2ed9=[{"to":11796,"type":"C"}]
0x2ede=[{"to":17328,"type":"d"}]
0x2ee5=[{"to":11796,"type":"C"}]
0x2f1c=[{"to":9072,"type":"C"}]
0x2f3f=[{"to":9200,"type":"C"}]
0x2f66=[{"to":17400,"type":"d"}]
0x2f6d=[{"to":11796,"type":"C"}]
0x2f72=[{"to":17432,"type":"d"}]
0x2f79=[{"to":11796,"type":"C"}]
0x2f7e=[{"to":9328,"type":"C"}]
0x2fa2=[{"to":9456,"type":"C"}]
0x2fb0=[{"to":9152,"type":"C"}]
0x2fbd=[{"to":9440,"type":"C"}]
0x2fcd=[{"to":9152,"type":"C"}]
0x2fd9=[{"to":8944,"type":"C"}]
0x2feb=[{"to":9312,"type":"C"}]
0x2ff2=[{"to":9184,"type":"C"}]
0x2ffd=[{"to":17214,"type":"d"}]
0x3009=[{"to":12336,"type":"d"},{"to":24640,"type":"d"}]
0x3015=[{"to":8960,"type":"C"}]
0x301a=[{"to":17155,"type":"d"}]
0x3021=[{"to":11796,"type":"C"}]
0x3026=[{"to":9312,"type":"C"}]
0x302d=[{"to":9184,"type":"C"}]
0x3038=[{"to":17238,"type":"d"}]
0x3044=[{"to":24640,"type":"d"},{"to":12277,"type":"d"}]
0x3050=[{"to":8960,"type":"C"}]
0x3055=[{"to":17155,"type":"d"}]
0x305c=[{"to":11796,"type":"C"}]
0x3064=[{"to":17266,"type":"d"}]
0x3070=[{"to":24640,"type":"d"},{"to":12233,"type":"d"}]
0x307c=[{"to":8960,"type":"C"}]
0x3081=[{"to":17155,"type":"d"}]
0x3088=[{"to":11796,"type":"C"}]
0x309c=[{"to":1040,"type":"d"}]
0x30b2=[{"to":17464,"type":"d"}]
0x30b9=[{"to":17466,"type":"d"}]
0x30c0=[{"to":9056,"type":"C"}]
0x30d4=[{"to":11855,"type":"C"}]
0x30dc=[{"to":1023,"type":"d"}]
0x30ef=[{"to":128,"type":"d"}]
0x3109=[{"to":1023,"type":"d"}]
0x3125=[{"to":9280,"type":"C"}]
0x3137=[{"to":9408,"type":"C"}]
0x3143=[{"to":8976,"type":"C"}]
0x3157=[{"to":1040,"type":"d"}]
0x3167=[{"to":17520,"type":"d"}]
0x316e=[{"to":11796,"type":"C"}]
0x3173=[{"to":12497,"type":"c"}]
0x3178=[{"to":17688,"type":"d"}]
0x317f=[{"to":22,"type":"d"}]
0x3184=[{"to":17640,"type":"d"}]
0x318b=[{"to":17475,"type":"d"}]
0x3192=[{"to":9024,"type":"C"}]
0x3197=[{"to":17688,"type":"d"}]
0x319e=[{"to":28,"type":"d"}]
0x31a3=[{"to":17640,"type":"d"}]
0x31aa=[{"to":17494,"type":"d"}]
0x31b1=[{"to":9024,"type":"C"}]
0x31b6=[{"to":9328,"type":"C"}]

/core/config
analysis.apply.signature=true
analysis.arch=x86
analysis.armthumb=false
analysis.autoname=false
analysis.bb.maxsize=512K
analysis.brokenrefs=false
analysis.calls=false
analysis.cpp.abi=itanium
analysis.cpu=x86
analysis.datarefs=false
analysis.delay=true
analysis.depth=64
analysis.detectwrites=false
analysis.esil=false
analysis.fcnprefix=fcn
analysis.from=0xffffffffffffffff
analysis.gp=0
analysis.gpfixed=true
analysis.graph_depth=256
analysis.hasnext=false
analysis.hpskip=false
analysis.ignbithints=false
analysis.in=io.maps.x
analysis.jmp.above=true
analysis.jmp.after=true
analysis.jmp.cref=false
analysis.jmp.indir=false
analysis.jmp.mid=true
analysis.jmp.ref=true
analysis.jmp.retpoline=true
analysis.jmp.tailcall=0
analysis.jmp.tbl=true
analysis.jmp.tblmax=512
analysis.jmp.tblmaxoffset=0x00001000
analysis.limits=false
analysis.loads=false
analysis.nonull=0
analysis.nopskip=true
analysis.norevisit=false
analysis.ptrdepth=3
analysis.pushret=false
analysis.recont=false
analysis.refstr=false
analysis.resolve.pointers=true
analysis.rnr=false
analysis.roregs=gp,zero
analysis.sleep=0
analysis.strings=false
analysis.timeout=0
analysis.to=0xffffffffffffffff
analysis.trap.after=false
analysis.trycatch=false
analysis.types.constraint=false
analysis.types.spec=gcc
analysis.types.verbose=false
analysis.vars=true
analysis.vinfun=true
analysis.vinfunrange=false
asm.analysis=false
asm.arch=x86
asm.bb.line=false
asm.bb.middle=true
asm.bits=64
asm.bytes=false
asm.bytes.right=false
asm.bytes.space=false
asm.calls=true
asm.capitalize=false
asm.cmt.col=35
asm.cmt.esil=false
asm.cmt.flgrefs=true
asm.cmt.il=false
asm.cmt.off=nodup
asm.cmt.patch=false
asm.cmt.refs=false
asm.cmt.right=true
asm.comments=true
asm.cpu=x86
asm.cycles=false
asm.cyclespace=false
asm.decode=false
asm.decoff=false
asm.demangle=true
asm.describe=false
asm.dwarf=true
asm.dwarf.abspath=false
asm.dwarf.file=true
asm.emu=false
asm.esil=false
asm.family=false
asm.fcn.signature=true
asm.fcn.size=false
asm.flags=true
asm.flags.inbytes=false
asm.flags.inline=false
asm.flags.limit=0
asm.flags.maxname=0
asm.flags.middle=2
asm.flags.offset=false
asm.flags.real=1
asm.functions=true
asm.hint.call=true
asm.hint.call.indirect=true
asm.hint.cdiv=false
asm.hint.emu=false
asm.hint.jmp=false
asm.hint.lea=false
asm.hint.pos=1
asm.hints=true
asm.imm.hash=0
asm.imm.str=true
asm.imm.trim=false
asm.indent=false
asm.indentspace=2
asm.instr=true
asm.invhex=false
asm.lbytes=true
asm.lines=true
asm.lines.bb=true
asm.lines.call=false
asm.lines.fcn=true
asm.lines.maxref=0
asm.lines.out=true
asm.lines.ret=false
asm.lines.right=false
asm.lines.wide=false
asm.lines.width=7
asm.marks=false
asm.meta=true
asm.midcursor=false
asm.middle=false
asm.minicols=false
asm.nbytes=10
asm.nodup=false
asm.noisy=true
asm.offset=true
asm.optype=false
asm.os=linux
asm.parser=x86.pseudo
asm.payloads=false
asm.pcalign=0
asm.pseudo=false
asm.refptr=false
asm.reloff=false
asm.reloff.flags=false
asm.section=false
asm.section.col=30
asm.section.name=true
asm.section.perm=false
asm.seggrn=4
asm.segoff=false
asm.size=false
asm.slow=true
asm.stackptr=false
asm.sub.jmp=true
asm.sub.names=true
asm.sub.reg=false
asm.sub.rel=true
asm.sub.section=false
asm.sub.tail=false
asm.sub.var=true
asm.sub.varmin=256
asm.sub.varonly=true
asm.symbol=false
asm.symbol.col=40
asm.syntax=intel
asm.tabs=8
asm.tabs.off=5
asm.tabs.once=true
asm.trace=false
asm.tracespace=false
asm.types=1
asm.ucase=false
asm.usercomments=false
asm.var=true
asm.var.access=false
asm.var.summary=0
asm.xrefs=false
asm.xrefs.code=true
asm.xrefs.fold=5
asm.xrefs.max=20
basefind.alignment=0x00001000
basefind.max.threads=0
basefind.min.score=1
basefind.min.string=10
basefind.progress=false
basefind.search.end=0xf0000000
basefind.search.start=0
bin.at=false
bin.b64str=false
bin.baddr=0
bin.classes=true
bin.dbginfo=true
bin.debase64=false
bin.demangle=true
bin.demangle.libs=false
bin.filter=true
bin.hashlimit=10M
bin.laddr=0
bin.lang=c
bin.libs=false
bin.maxstr=0
bin.maxstrbuf=0x00a00000
bin.minstr=0
bin.relocs=true
bin.str.enc=guess
bin.strings=true
bin.usextr=true
bin.verbose=false
cfg.bigendian=false
cfg.cpuaffinity=0
cfg.debug=false
cfg.editor=notepad
cfg.fortunes=true
cfg.fortunes.clippy=false
cfg.fortunes.file=tips
cfg.newtab=false
cfg.plugins=true
cfg.prefixdump=dump
cfg.seek.histsize=63
cfg.seek.silent=false
cfg.user=pid20316
cfg.wseek=false
cmd.depth=10
cmd.hitinfo=1
cmd.repeat=false
dbg.aftersyscall=true
dbg.backend=native
dbg.bep=loader
dbg.bpinmaps=true
dbg.bpsysign=false
dbg.btalgo=default
dbg.btdepth=128
dbg.clone=false
dbg.consbreak=false
dbg.create_new_console=true
dbg.execs=false
dbg.exitkills=true
dbg.follow=32
dbg.follow.child=false
dbg.forks=false
dbg.funcarg=false
dbg.gdb.page_size=0x00001000
dbg.gdb.retries=10
dbg.glibc.fastbinmax=10
dbg.glibc.fc_offset=640
dbg.glibc.ma_offset=0
dbg.glibc.tcache=false
dbg.hwbp=0
dbg.malloc=jemalloc
dbg.rebase=true
dbg.skipover=false
dbg.slow=false
dbg.status=false
dbg.swstep=false
dbg.threads=false
dbg.trace=0
dbg.trace.inrange=false
dbg.trace.libs=true
dbg.trace.tag=0
dbg.trace_continue=1
dbg.verbose=false
diff.bare=false
diff.from=0
diff.sort=addr
diff.to=0
dir.depth=10
dir.home=C:\\Users\\janet
dir.magic=C:\\Program Files\\Cutter-v2.2.0-Windows-x86_64\\share\\magic
dir.plugins=C:\\Program Files\\Cutter-v2.2.0-Windows-x86_64\\lib\\plugins
dir.prefix=C:\\Program Files\\Cutter-v2.2.0-Windows-x86_64
dir.projects=C:\\Users\\janet\\.local\\share\\projects
dir.tmp=C:\\Users\\janet\\AppData\\Local\\Temp
dir.types=/usr/include
elf.checks.sections=true
elf.checks.segments=true
elf.load.sections=true
emu.lazy=false
emu.pre=false
emu.skip=ds
emu.ssa=false
emu.stack=false
emu.str=0
emu.str.flag=true
emu.str.inv=true
emu.str.lea=true
emu.str.off=false
emu.write=false
esil.addr.size=64
esil.breakoninvalid=true
esil.exectrap=false
esil.gotolimit=0x00001000
esil.iotrap=true
esil.nonull=false
esil.prestep=true
esil.romem=false
esil.stack.addr=0x00100000
esil.stack.depth=256
esil.stack.pattern=0
esil.stack.size=0x000f0000
esil.stats=false
esil.timeout=0
esil.verbose=0
file.info=true
file.lastpath=C:\\Users\\janet\\OneDrive\\Teilen\\Studium\\Master\\3. Semester\\Praktikum Anwendungssicherheit\\sheets\\sheet2\\exercise5\\handler
file.loadalign=0x00000400
file.openmany=1
file.path=C:\\Users\\janet\\OneDrive\\Teilen\\Studium\\Master\\3. Semester\\Praktikum Anwendungssicherheit\\sheets\\sheet2\\exercise5\\handler
file.type=elf
flirt.ignore.unknown=true
flirt.node.optimize=2
flirt.sig.deflate=false
flirt.sig.file=all
flirt.sig.library=Built with rizin 0.5.1
flirt.sig.os=all
flirt.sig.version=10
flirt.sigdb.load.home=true
flirt.sigdb.load.system=true
ghidra.cmt.cpp=true
ghidra.cmt.indent=4
ghidra.indent=4
ghidra.linelen=120
ghidra.maximplref=2
ghidra.nl.brace=false
ghidra.nl.else=false
ghidra.rawptr=true
ghidra.ropropagate=true
ghidra.sleighhome=C:/Program Files/Cutter-v2.2.0-Windows-x86_64/lib/plugins/rz_ghidra_sleigh
ghidra.verbose=true
graph.aeab=false
graph.body=true
graph.bytes=false
graph.cmtright=false
graph.comments=true
graph.dotted=false
graph.dummy=true
graph.edges=2
graph.few=false
graph.font=Courier
graph.from=0xffffffffffffffff
graph.gv.current=false
graph.gv.format=gif
graph.hints=true
graph.invscroll=false
graph.json.usenames=true
graph.layout=0
graph.linemode=1
graph.nodejmps=true
graph.ntitles=true
graph.offset=false
graph.refs=false
graph.scroll=5
graph.to=0xffffffffffffffff
graph.trace=false
hex.align=false
hex.ascii=true
hex.bytes=true
hex.cols=16
hex.comments=true
hex.compact=false
hex.depth=5
hex.flagsz=0
hex.hdroff=false
hex.header=true
hex.offset=true
hex.onechar=false
hex.pairs=0
hex.section=false
hex.stride=0
hex.style=false
http.auth=false
http.bind=localhost
http.browser=start
http.colon=false
http.cors=false
http.dirlist=false
http.homeroot=C:\\Users\\janet\\.local\\share\\www
http.index=index.html
http.log=true
http.maxsize=0
http.port=9090
http.root=C:\\Program Files\\Cutter-v2.2.0-Windows-x86_64\\share\\www
http.stop.after=0
http.timeout=3
http.upget=false
http.upload=false
http.uproot=C:\\Users\\janet\\AppData\\Local\\Temp
http.verbose=false
io.0xff=255
io.aslr=false
io.autofd=true
io.cache=0
io.cache.auto=false
io.cache.read=false
io.cache.write=false
io.exec=true
io.ff=true
io.pava=false
io.pcache=false
io.pcache.read=false
io.pcache.write=false
io.unalloc=false
io.unalloc.ch=.
io.va=1
jsdec.asm=false
jsdec.blocks=false
jsdec.casts=false
jsdec.debug=false
jsdec.highlight=default
jsdec.paddr=false
jsdec.slow=false
jsdec.xrefs=false
log.colors=false
log.events=false
log.level=5
log.srcinfo=false
log.traplevel=6
magic.depth=100
pdb.autoload=0
pdb.extract=1
pdb.server=https://msdl.microsoft.com/download/symbols
pdb.symstore=C:\\Users\\janet\\.local\\share\\pdb
prj.compress=false
rap.loop=true
rop.comments=false
rop.conditional=false
rop.db=true
rop.len=5
rop.sdb=false
rop.subchains=false
rzil.step.events.read=false
rzil.step.events.write=true
scr.bgfill=false
scr.breaklines=false
scr.color=0
scr.color.args=true
scr.color.bytes=true
scr.color.grep=false
scr.color.ops=true
scr.color.pipe=false
scr.columns=0
scr.confirmquit=false
scr.dumpcols=false
scr.echo=false
scr.feedback=1
scr.fgets=false
scr.fix.columns=0
scr.fix.rows=0
scr.flush=false
scr.gadgets=true
scr.highlight.grep=false
scr.hist.block=true
scr.histsave=true
scr.html=0
scr.interactive=0
scr.last=true
scr.linesleep=0
scr.maxtab=0x00001000
scr.nkey=flag
scr.null=false
scr.pagesize=1
scr.panelborder=false
scr.prompt=true
scr.prompt.file=false
scr.prompt.flag=false
scr.prompt.flag.only=false
scr.prompt.mode=false
scr.prompt.popup=false
scr.prompt.sect=false
scr.prompt.vi=false
scr.rainbow=false
scr.randpal=false
scr.responsive=false
scr.rows=0
scr.scrollbar=0
scr.slow=true
scr.square=true
scr.strconv=asciiesc
scr.utf8=false
scr.utf8.curvy=false
scr.visual.mode=0
scr.vtmode=2
scr.wheel=true
scr.wheel.nkey=false
scr.wheel.speed=4
scr.wideoff=false
search.align=0
search.case_sensitive=smart
search.chunk=0
search.contiguous=true
search.distance=0
search.esilcombo=8
search.flags=false
search.from=0xffffffffffffffff
search.in=io.maps
search.kwidx=0
search.maxhits=0
search.overlap=false
search.prefix=hit
search.show=true
search.to=0xffffffffffffffff
stack.anotated=false
stack.bytes=true
stack.delta=0
stack.reg=SP
stack.size=64
str.escbslash=false
str.search.check_ascii_freq=true
tcp.islocal=false
time.fmt=%Y-%m-%d %H:%M:%S %z
time.zone=0
yara.date.format=%Y-%m-%d
yara.extensions=.yar,.yara
yara.fastmode=false
yara.timeout=300
zoom.byte=h
zoom.from=0
zoom.in=io.map
zoom.maxsz=512
zoom.to=0

/core/debug

/core/debug/breakpoints

/core/file
absolute=C:\\Users\\janet\\OneDrive\\Teilen\\Studium\\Master\\3. Semester\\Praktikum Anwendungssicherheit\\sheets\\sheet2\\exercise5\\handler
raw=C:\\Users\\janet\\OneDrive\\Teilen\\Studium\\Master\\3. Semester\\Praktikum Anwendungssicherheit\\sheets\\sheet2\\exercise5\\handler
relative=../Users/janet/OneDrive/Teilen/Studium/Master/3. Semester/Praktikum Anwendungssicherheit/sheets/sheet2/exercise5/handler

/core/flags
base=0
realnames=1

/core/flags/flags
data.00000200={"realname":"data.00000200","demangled":false,"offset":512,"size":8,"space":"pointers"}
data.000003ff={"realname":"data.000003ff","demangled":false,"offset":1023,"size":8,"space":"pointers"}
data.0000410f={"realname":"data.0000410f","demangled":false,"offset":16655,"size":8,"space":"pointers"}
data.00004143={"realname":"data.00004143","demangled":false,"offset":16707,"size":8,"space":"pointers"}
data.00004303={"realname":"data.00004303","demangled":false,"offset":17155,"size":8,"space":"pointers"}
data.00004438={"realname":"data.00004438","demangled":false,"offset":17464,"size":8,"space":"pointers"}
entry.fini0={"realname":"entry.fini0","demangled":false,"offset":9664,"size":1,"space":"symbols"}
entry.init0={"realname":"entry.init0","demangled":false,"offset":9728,"size":9,"space":"symbols"}
entry0={"realname":"entry0","demangled":false,"offset":9504,"size":37,"space":"symbols"}
fcn.000022a0={"realname":"fcn.000022a0","demangled":false,"offset":8864,"size":11,"space":"functions"}
loc.__GNU_EH_FRAME_HDR={"realname":"__GNU_EH_FRAME_HDR","demangled":false,"offset":17700,"size":0,"space":"symbols"}
loc.__bss_start={"realname":"__bss_start","demangled":false,"offset":24592,"size":0,"space":"symbols"}
loc.__data_start={"realname":"__data_start","demangled":false,"offset":24576,"size":0,"space":"symbols"}
loc._edata={"realname":"_edata","demangled":false,"offset":24592,"size":0,"space":"symbols"}
loc._end={"realname":"_end","demangled":false,"offset":24664,"size":0,"space":"symbols"}
loc.data_start={"realname":"data_start","demangled":false,"offset":24576,"size":0,"space":"symbols"}
main={"realname":"main","demangled":false,"offset":10132,"size":49,"space":"symbols"}
obj._DYNAMIC={"realname":"_DYNAMIC","demangled":false,"offset":23688,"size":0,"space":"symbols"}
obj._GLOBAL_OFFSET_TABLE={"realname":"_GLOBAL_OFFSET_TABLE_","demangled":false,"offset":24200,"size":0,"space":"symbols"}
obj._IO_stdin_used={"realname":"_IO_stdin_used","demangled":false,"offset":16384,"size":4,"space":"symbols"}
obj.__FRAME_END={"realname":"__FRAME_END__","demangled":false,"offset":18404,"size":0,"space":"symbols"}
obj.__PRETTY_FUNCTION__.0={"realname":"__PRETTY_FUNCTION__.0","demangled":false,"offset":17120,"size":9,"space":"symbols"}
obj.__PRETTY_FUNCTION__.0_1={"realname":"__PRETTY_FUNCTION__.0","demangled":false,"offset":17688,"size":11,"space":"symbols"}
obj.__TMC_END={"realname":"__TMC_END__","demangled":false,"offset":24592,"size":0,"space":"symbols"}
obj.__abi_tag={"realname":"__abi_tag","demangled":false,"offset":908,"size":32,"space":"symbols"}
obj.__do_global_dtors_aux_fini_array_entry={"realname":"__do_global_dtors_aux_fini_array_entry","demangled":false,"offset":23680,"size":0,"space":"symbols"}
obj.__dso_handle={"realname":"__dso_handle","demangled":false,"offset":24584,"size":0,"space":"symbols"}
obj.__frame_dummy_init_array_entry={"realname":"__frame_dummy_init_array_entry","demangled":false,"offset":23672,"size":0,"space":"symbols"}
obj.completed.0={"realname":"completed.0","demangled":false,"offset":24656,"size":1,"space":"symbols"}
obj.stderr={"realname":"stderr","demangled":false,"offset":24640,"size":8,"space":"symbols"}
obj.stderr_GLIBC_2.2.5={"realname":"stderr@GLIBC_2.2.5","demangled":false,"offset":24640,"size":8,"space":"symbols"}
obj.stdin={"realname":"stdin","demangled":false,"offset":24608,"size":8,"space":"symbols"}
obj.stdin_GLIBC_2.2.5={"realname":"stdin@GLIBC_2.2.5","demangled":false,"offset":24608,"size":8,"space":"symbols"}
obj.stdout={"realname":"stdout","demangled":false,"offset":24648,"size":8,"space":"symbols"}
obj.stdout_GLIBC_2.2.5={"realname":"stdout@GLIBC_2.2.5","demangled":false,"offset":24648,"size":8,"space":"symbols"}
reloc.EVP_DigestFinal_ex={"realname":"EVP_DigestFinal_ex","demangled":false,"offset":24520,"size":8,"space":"relocs"}
reloc.EVP_DigestInit_ex={"realname":"EVP_DigestInit_ex","demangled":false,"offset":24472,"size":8,"space":"relocs"}
reloc.EVP_DigestUpdate={"realname":"EVP_DigestUpdate","demangled":false,"offset":24392,"size":8,"space":"relocs"}
reloc.EVP_MD_CTX_free={"realname":"EVP_MD_CTX_free","demangled":false,"offset":24432,"size":8,"space":"relocs"}
reloc.EVP_MD_CTX_new={"realname":"EVP_MD_CTX_new","demangled":false,"offset":24352,"size":8,"space":"relocs"}
reloc.EVP_MD_CTX_reset={"realname":"EVP_MD_CTX_reset","demangled":false,"offset":24408,"size":8,"space":"relocs"}
reloc.EVP_sha256={"realname":"EVP_sha256","demangled":false,"offset":24336,"size":8,"space":"relocs"}
reloc._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":24544,"size":8,"space":"relocs"}
reloc._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":24552,"size":8,"space":"relocs"}
reloc.__assert_fail={"realname":"__assert_fail","demangled":false,"offset":24296,"size":8,"space":"relocs"}
reloc.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":24560,"size":8,"space":"relocs"}
reloc.__errno_location={"realname":"__errno_location","demangled":false,"offset":24440,"size":8,"space":"relocs"}
reloc.__fprintf_chk={"realname":"__fprintf_chk","demangled":false,"offset":24264,"size":8,"space":"relocs"}
reloc.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":24536,"size":8,"space":"relocs"}
reloc.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":24568,"size":8,"space":"relocs"}
reloc.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":24448,"size":8,"space":"relocs"}
reloc.atoi={"realname":"atoi","demangled":false,"offset":24400,"size":8,"space":"relocs"}
reloc.close={"realname":"close","demangled":false,"offset":24256,"size":8,"space":"relocs"}
reloc.dup2={"realname":"dup2","demangled":false,"offset":24224,"size":8,"space":"relocs"}
reloc.exit={"realname":"exit","demangled":false,"offset":24288,"size":8,"space":"relocs"}
reloc.fclose={"realname":"fclose","demangled":false,"offset":24488,"size":8,"space":"relocs"}
reloc.fflush={"realname":"fflush","demangled":false,"offset":24528,"size":8,"space":"relocs"}
reloc.fgets={"realname":"fgets","demangled":false,"offset":24344,"size":8,"space":"relocs"}
reloc.fopen={"realname":"fopen","demangled":false,"offset":24312,"size":8,"space":"relocs"}
reloc.fread={"realname":"fread","demangled":false,"offset":24424,"size":8,"space":"relocs"}
reloc.fseek={"realname":"fseek","demangled":false,"offset":24280,"size":8,"space":"relocs"}
reloc.ftell={"realname":"ftell","demangled":false,"offset":24240,"size":8,"space":"relocs"}
reloc.gets={"realname":"gets","demangled":false,"offset":24416,"size":8,"space":"relocs"}
reloc.memcmp={"realname":"memcmp","demangled":false,"offset":24480,"size":8,"space":"relocs"}
reloc.open={"realname":"open","demangled":false,"offset":24512,"size":8,"space":"relocs"}
reloc.perror={"realname":"perror","demangled":false,"offset":24496,"size":8,"space":"relocs"}
reloc.printf={"realname":"printf","demangled":false,"offset":24232,"size":8,"space":"relocs"}
reloc.puts={"realname":"puts","demangled":false,"offset":24272,"size":8,"space":"relocs"}
reloc.setsockopt={"realname":"setsockopt","demangled":false,"offset":24328,"size":8,"space":"relocs"}
reloc.setvbuf={"realname":"setvbuf","demangled":false,"offset":24304,"size":8,"space":"relocs"}
reloc.shutdown={"realname":"shutdown","demangled":false,"offset":24248,"size":8,"space":"relocs"}
reloc.sigaction={"realname":"sigaction","demangled":false,"offset":24384,"size":8,"space":"relocs"}
reloc.sigfillset={"realname":"sigfillset","demangled":false,"offset":24320,"size":8,"space":"relocs"}
reloc.stderr={"realname":"stderr","demangled":false,"offset":24640,"size":8,"space":"relocs"}
reloc.stdin={"realname":"stdin","demangled":false,"offset":24608,"size":8,"space":"relocs"}
reloc.stdout={"realname":"stdout","demangled":false,"offset":24648,"size":8,"space":"relocs"}
reloc.strcmp={"realname":"strcmp","demangled":false,"offset":24456,"size":8,"space":"relocs"}
reloc.strcpy={"realname":"strcpy","demangled":false,"offset":24464,"size":8,"space":"relocs"}
reloc.strerror={"realname":"strerror","demangled":false,"offset":24376,"size":8,"space":"relocs"}
reloc.strlen={"realname":"strlen","demangled":false,"offset":24360,"size":8,"space":"relocs"}
reloc.strtok_r={"realname":"strtok_r","demangled":false,"offset":24368,"size":8,"space":"relocs"}
reloc.target.EVP_DigestFinal_ex={"realname":"EVP_DigestFinal_ex","demangled":false,"offset":24968,"size":8,"space":"relocs"}
reloc.target.EVP_DigestInit_ex={"realname":"EVP_DigestInit_ex","demangled":false,"offset":24920,"size":8,"space":"relocs"}
reloc.target.EVP_DigestUpdate={"realname":"EVP_DigestUpdate","demangled":false,"offset":24840,"size":8,"space":"relocs"}
reloc.target.EVP_MD_CTX_free={"realname":"EVP_MD_CTX_free","demangled":false,"offset":24880,"size":8,"space":"relocs"}
reloc.target.EVP_MD_CTX_new={"realname":"EVP_MD_CTX_new","demangled":false,"offset":24800,"size":8,"space":"relocs"}
reloc.target.EVP_MD_CTX_reset={"realname":"EVP_MD_CTX_reset","demangled":false,"offset":24856,"size":8,"space":"relocs"}
reloc.target.EVP_sha256={"realname":"EVP_sha256","demangled":false,"offset":24784,"size":8,"space":"relocs"}
reloc.target._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":24992,"size":8,"space":"relocs"}
reloc.target._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":25000,"size":8,"space":"relocs"}
reloc.target.__assert_fail={"realname":"__assert_fail","demangled":false,"offset":24744,"size":8,"space":"relocs"}
reloc.target.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":25008,"size":8,"space":"relocs"}
reloc.target.__errno_location={"realname":"__errno_location","demangled":false,"offset":24888,"size":8,"space":"relocs"}
reloc.target.__fprintf_chk={"realname":"__fprintf_chk","demangled":false,"offset":24712,"size":8,"space":"relocs"}
reloc.target.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":24984,"size":8,"space":"relocs"}
reloc.target.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":25016,"size":8,"space":"relocs"}
reloc.target.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":24896,"size":8,"space":"relocs"}
reloc.target.atoi={"realname":"atoi","demangled":false,"offset":24848,"size":8,"space":"relocs"}
reloc.target.close={"realname":"close","demangled":false,"offset":24704,"size":8,"space":"relocs"}
reloc.target.dup2={"realname":"dup2","demangled":false,"offset":24672,"size":8,"space":"relocs"}
reloc.target.exit={"realname":"exit","demangled":false,"offset":24736,"size":8,"space":"relocs"}
reloc.target.fclose={"realname":"fclose","demangled":false,"offset":24936,"size":8,"space":"relocs"}
reloc.target.fflush={"realname":"fflush","demangled":false,"offset":24976,"size":8,"space":"relocs"}
reloc.target.fgets={"realname":"fgets","demangled":false,"offset":24792,"size":8,"space":"relocs"}
reloc.target.fopen={"realname":"fopen","demangled":false,"offset":24760,"size":8,"space":"relocs"}
reloc.target.fread={"realname":"fread","demangled":false,"offset":24872,"size":8,"space":"relocs"}
reloc.target.fseek={"realname":"fseek","demangled":false,"offset":24728,"size":8,"space":"relocs"}
reloc.target.ftell={"realname":"ftell","demangled":false,"offset":24688,"size":8,"space":"relocs"}
reloc.target.gets={"realname":"gets","demangled":false,"offset":24864,"size":8,"space":"relocs"}
reloc.target.memcmp={"realname":"memcmp","demangled":false,"offset":24928,"size":8,"space":"relocs"}
reloc.target.open={"realname":"open","demangled":false,"offset":24960,"size":8,"space":"relocs"}
reloc.target.perror={"realname":"perror","demangled":false,"offset":24944,"size":8,"space":"relocs"}
reloc.target.printf={"realname":"printf","demangled":false,"offset":24680,"size":8,"space":"relocs"}
reloc.target.puts={"realname":"puts","demangled":false,"offset":24720,"size":8,"space":"relocs"}
reloc.target.setsockopt={"realname":"setsockopt","demangled":false,"offset":24776,"size":8,"space":"relocs"}
reloc.target.setvbuf={"realname":"setvbuf","demangled":false,"offset":24752,"size":8,"space":"relocs"}
reloc.target.shutdown={"realname":"shutdown","demangled":false,"offset":24696,"size":8,"space":"relocs"}
reloc.target.sigaction={"realname":"sigaction","demangled":false,"offset":24832,"size":8,"space":"relocs"}
reloc.target.sigfillset={"realname":"sigfillset","demangled":false,"offset":24768,"size":8,"space":"relocs"}
reloc.target.stderr={"realname":"stderr","demangled":false,"offset":24640,"size":8,"space":"relocs"}
reloc.target.stdin={"realname":"stdin","demangled":false,"offset":24608,"size":8,"space":"relocs"}
reloc.target.stdout={"realname":"stdout","demangled":false,"offset":24648,"size":8,"space":"relocs"}
reloc.target.strcmp={"realname":"strcmp","demangled":false,"offset":24904,"size":8,"space":"relocs"}
reloc.target.strcpy={"realname":"strcpy","demangled":false,"offset":24912,"size":8,"space":"relocs"}
reloc.target.strerror={"realname":"strerror","demangled":false,"offset":24824,"size":8,"space":"relocs"}
reloc.target.strlen={"realname":"strlen","demangled":false,"offset":24808,"size":8,"space":"relocs"}
reloc.target.strtok_r={"realname":"strtok_r","demangled":false,"offset":24816,"size":8,"space":"relocs"}
reloc.target.write={"realname":"write","demangled":false,"offset":24952,"size":8,"space":"relocs"}
reloc.write={"realname":"write","demangled":false,"offset":24504,"size":8,"space":"relocs"}
section..bss={"realname":"section..bss","demangled":false,"offset":24608,"size":56,"space":"sections"}
section..data={"realname":"section..data","demangled":false,"offset":24576,"size":16,"space":"sections"}
section..dynamic={"realname":"section..dynamic","demangled":false,"offset":23688,"size":512,"space":"sections"}
section..dynstr={"realname":"section..dynstr","demangled":false,"offset":2152,"size":561,"space":"sections"}
section..dynsym={"realname":"section..dynsym","demangled":false,"offset":1000,"size":1152,"space":"sections"}
section..eh_frame={"realname":"section..eh_frame","demangled":false,"offset":17840,"size":568,"space":"sections"}
section..eh_frame_hdr={"realname":"section..eh_frame_hdr","demangled":false,"offset":17700,"size":140,"space":"sections"}
section..fini={"realname":"section..fini","demangled":false,"offset":12732,"size":13,"space":"sections"}
section..fini_array={"realname":"section..fini_array","demangled":false,"offset":23680,"size":8,"space":"sections"}
section..gnu.hash={"realname":"section..gnu.hash","demangled":false,"offset":944,"size":52,"space":"sections"}
section..gnu.version={"realname":"section..gnu.version","demangled":false,"offset":2714,"size":96,"space":"sections"}
section..gnu.version_r={"realname":"section..gnu.version_r","demangled":false,"offset":2816,"size":112,"space":"sections"}
section..got={"realname":"section..got","demangled":false,"offset":24200,"size":376,"space":"sections"}
section..init={"realname":"section..init","demangled":false,"offset":8192,"size":27,"space":"sections"}
section..init_array={"realname":"section..init_array","demangled":false,"offset":23672,"size":8,"space":"sections"}
section..interp={"realname":"section..interp","demangled":false,"offset":792,"size":28,"space":"sections"}
section..note.ABI_tag={"realname":"section..note.ABI_tag","demangled":false,"offset":908,"size":32,"space":"sections"}
section..note.gnu.build_id={"realname":"section..note.gnu.build_id","demangled":false,"offset":872,"size":36,"space":"sections"}
section..note.gnu.property={"realname":"section..note.gnu.property","demangled":false,"offset":824,"size":48,"space":"sections"}
section..plt={"realname":"section..plt","demangled":false,"offset":8224,"size":640,"space":"sections"}
section..plt.got={"realname":"section..plt.got","demangled":false,"offset":8864,"size":16,"space":"sections"}
section..plt.sec={"realname":"section..plt.sec","demangled":false,"offset":8880,"size":624,"space":"sections"}
section..rela.dyn={"realname":"section..rela.dyn","demangled":false,"offset":2928,"size":264,"space":"sections"}
section..rela.plt={"realname":"section..rela.plt","demangled":false,"offset":3192,"size":936,"space":"sections"}
section..rodata={"realname":"section..rodata","demangled":false,"offset":16384,"size":1315,"space":"sections"}
section..text={"realname":"section..text","demangled":false,"offset":9504,"size":3227,"space":"sections"}
segment.DYNAMIC={"realname":"segment.DYNAMIC","demangled":false,"offset":23688,"size":512,"space":"segments"}
segment.GNU_EH_FRAME={"realname":"segment.GNU_EH_FRAME","demangled":false,"offset":17700,"size":140,"space":"segments"}
segment.GNU_RELRO={"realname":"segment.GNU_RELRO","demangled":false,"offset":23672,"size":904,"space":"segments"}
segment.GNU_STACK={"realname":"segment.GNU_STACK","demangled":false,"offset":0,"size":0,"space":"segments"}
segment.INTERP={"realname":"segment.INTERP","demangled":false,"offset":792,"size":28,"space":"segments"}
segment.LOAD0={"realname":"segment.LOAD0","demangled":false,"offset":0,"size":4128,"space":"segments"}
segment.LOAD1={"realname":"segment.LOAD1","demangled":false,"offset":8192,"size":4553,"space":"segments"}
segment.LOAD2={"realname":"segment.LOAD2","demangled":false,"offset":16384,"size":2024,"space":"segments"}
segment.LOAD3={"realname":"segment.LOAD3","demangled":false,"offset":23672,"size":992,"space":"segments"}
segment.NOTE={"realname":"segment.NOTE","demangled":false,"offset":824,"size":48,"space":"segments"}
segment.NOTE_1={"realname":"segment.NOTE_1","demangled":false,"offset":872,"size":68,"space":"segments"}
segment.PHDR={"realname":"segment.PHDR","demangled":false,"offset":64,"size":728,"space":"segments"}
segment.UNKNOWN={"realname":"segment.UNKNOWN","demangled":false,"offset":824,"size":48,"space":"segments"}
segment.ehdr={"realname":"segment.ehdr","demangled":false,"offset":0,"size":64,"space":"segments"}
str..._.._shared_plaintext_server_print_flag.c={"realname":"str..._.._shared_plaintext_server_print_flag.c","demangled":false,"offset":17640,"size":43,"space":"strings"}
str..._shared_PasswordExercise.c={"realname":"str..._shared_PasswordExercise.c","demangled":false,"offset":16606,"size":29,"space":"strings"}
str.._users.txt={"realname":"str.._users.txt","demangled":false,"offset":16657,"size":12,"space":"strings"}
str.Could_not_hash_password={"realname":"str.Could_not_hash_password","demangled":false,"offset":16560,"size":24,"space":"strings"}
str.Error_number__errno_:__d.={"realname":"str.Error_number__errno_:__d.","demangled":false,"offset":17129,"size":27,"space":"strings"}
str.Flushing_output_buffers_failed={"realname":"str.Flushing_output_buffers_failed","demangled":false,"offset":16472,"size":31,"space":"strings"}
str.Goodbye={"realname":"str.Goodbye","demangled":false,"offset":17105,"size":10,"space":"strings"}
str.Hello__world={"realname":"str.Hello__world","demangled":false,"offset":16867,"size":15,"space":"strings"}
str.Here_is_your_flag:={"realname":"str.Here_is_your_flag:","demangled":false,"offset":17040,"size":20,"space":"strings"}
str.Login_failed.={"realname":"str.Login_failed.","demangled":false,"offset":17090,"size":15,"space":"strings"}
str.Password:={"realname":"str.Password:","demangled":false,"offset":16973,"size":11,"space":"strings"}
str.Please_enter_your_username:={"realname":"str.Please_enter_your_username:","demangled":false,"offset":16882,"size":29,"space":"strings"}
str.There_is_nothing_you_can_do.={"realname":"str.There_is_nothing_you_can_do.","demangled":false,"offset":17060,"size":30,"space":"strings"}
str.Welcome___s={"realname":"str.Welcome___s","demangled":false,"offset":17020,"size":14,"space":"strings"}
str.admin={"realname":"str.admin","demangled":false,"offset":17034,"size":6,"space":"strings"}
str.bytes_read____size={"realname":"str.bytes_read____size","demangled":false,"offset":17494,"size":19,"space":"strings"}
str.characters___2____0={"realname":"str.characters___2____0","demangled":false,"offset":16635,"size":20,"space":"strings"}
str.could_not_close_client_connection_after_handling_it={"realname":"str.could_not_close_client_connection_after_handling_it","demangled":false,"offset":16504,"size":52,"space":"strings"}
str.could_not_get_end_of_file_position={"realname":"str.could_not_get_end_of_file_position","demangled":false,"offset":17288,"size":35,"space":"strings"}
str.could_not_get_file_position={"realname":"str.could_not_get_file_position","demangled":false,"offset":17156,"size":28,"space":"strings"}
str.could_not_get_username_from_client={"realname":"str.could_not_get_username_from_client","demangled":false,"offset":16912,"size":35,"space":"strings"}
str.could_not_initialize_signal_set={"realname":"str.could_not_initialize_signal_set","demangled":false,"offset":17400,"size":32,"space":"strings"}
str.could_not_open_file_with_usernames={"realname":"str.could_not_open_file_with_usernames","demangled":false,"offset":16672,"size":35,"space":"strings"}
str.could_not_open_flag_file._Sorry__You_actually_did_it___This_is_just_a_problem_with_giving_you_your_deserved_solution.={"realname":"str.could_not_open_flag_file._Sorry__You_actually_did_it___This_is_just_a_problem_with_giving_you_your_deserved_solution.","demangled":false,"offset":17520,"size":118,"space":"strings"}
str.could_not_read_password_from_client={"realname":"str.could_not_read_password_from_client","demangled":false,"offset":16984,"size":36,"space":"strings"}
str.could_not_seek_back_to_old_file_position_while_determining_file_size={"realname":"str.could_not_seek_back_to_old_file_position_while_determining_file_size","demangled":false,"offset":17328,"size":69,"space":"strings"}
str.could_not_seek_to_end_of_file={"realname":"str.could_not_seek_to_end_of_file","demangled":false,"offset":17184,"size":30,"space":"strings"}
str.could_not_set_up_signal_handler={"realname":"str.could_not_set_up_signal_handler","demangled":false,"offset":17432,"size":32,"space":"strings"}
str.error_on_dup2={"realname":"str.error_on_dup2","demangled":false,"offset":16406,"size":14,"space":"strings"}
str.failed_to_close___s={"realname":"str.failed_to_close___s","demangled":false,"offset":17266,"size":21,"space":"strings"}
str.failed_to_open___s_:__s={"realname":"str.failed_to_open___s_:__s","demangled":false,"offset":17214,"size":24,"space":"strings"}
str.failed_to_write_to___s_:__s={"realname":"str.failed_to_write_to___s_:__s","demangled":false,"offset":17238,"size":28,"space":"strings"}
str.flag.txt={"realname":"str.flag.txt","demangled":false,"offset":17466,"size":9,"space":"strings"}
str.from_hex={"realname":"str.from_hex","demangled":false,"offset":17120,"size":9,"space":"strings"}
str.invalid_hex_character={"realname":"str.invalid_hex_character","demangled":false,"offset":16584,"size":22,"space":"strings"}
str.malformed_line_in_user_file:_could_not_even_read_user_name.={"realname":"str.malformed_line_in_user_file:_could_not_even_read_user_name.","demangled":false,"offset":16712,"size":60,"space":"strings"}
str.malformed_line_in_user_file:_no_hash_found={"realname":"str.malformed_line_in_user_file:_no_hash_found","demangled":false,"offset":16824,"size":43,"space":"strings"}
str.malformed_line_in_user_file:_no_seed_found={"realname":"str.malformed_line_in_user_file:_no_seed_found","demangled":false,"offset":16776,"size":43,"space":"strings"}
str.no_user_having_that_name={"realname":"str.no_user_having_that_name","demangled":false,"offset":16947,"size":26,"space":"strings"}
str.print_flag={"realname":"str.print_flag","demangled":false,"offset":17688,"size":11,"space":"strings"}
str.setsockopt_failed={"realname":"str.setsockopt_failed","demangled":false,"offset":16388,"size":18,"space":"strings"}
str.setvbuf_failed={"realname":"str.setvbuf_failed","demangled":false,"offset":16420,"size":15,"space":"strings"}
str.shutdown___failed={"realname":"str.shutdown___failed","demangled":false,"offset":16435,"size":18,"space":"strings"}
str.size___sizeof_buf={"realname":"str.size___sizeof_buf","demangled":false,"offset":17475,"size":19,"space":"strings"}
str.too_few_arguments={"realname":"str.too_few_arguments","demangled":false,"offset":16453,"size":18,"space":"strings"}
sym.__do_global_dtors_aux={"realname":"__do_global_dtors_aux","demangled":false,"offset":9664,"size":57,"space":"symbols"}
sym._fini={"realname":"_fini","demangled":false,"offset":12732,"size":13,"space":"symbols"}
sym._init={"realname":"_init","demangled":false,"offset":8192,"size":27,"space":"symbols"}
sym._start={"realname":"_start","demangled":false,"offset":9504,"size":38,"space":"symbols"}
sym.deregister_tm_clones={"realname":"deregister_tm_clones","demangled":false,"offset":9552,"size":41,"space":"symbols"}
sym.die={"realname":"die","demangled":false,"offset":11796,"size":59,"space":"symbols"}
sym.frame_dummy={"realname":"frame_dummy","demangled":false,"offset":9728,"size":0,"space":"symbols"}
sym.from_hex={"realname":"from_hex","demangled":false,"offset":10616,"size":197,"space":"symbols"}
sym.get_file_size={"realname":"get_file_size","demangled":false,"offset":11855,"size":155,"space":"symbols"}
sym.get_seed_and_hash={"realname":"get_seed_and_hash","demangled":false,"offset":10813,"size":450,"space":"symbols"}
sym.handle_client={"realname":"handle_client","demangled":false,"offset":11263,"size":533,"space":"symbols"}
sym.handle_client_wrapper={"realname":"handle_client_wrapper","demangled":false,"offset":9737,"size":393,"space":"symbols"}
sym.hash={"realname":"hash","demangled":false,"offset":10183,"size":331,"space":"symbols"}
sym.hexdigit_to_int={"realname":"hexdigit_to_int","demangled":false,"offset":10514,"size":102,"space":"symbols"}
sym.immediate_write_to_file={"realname":"immediate_write_to_file","demangled":false,"offset":12163,"size":266,"space":"symbols"}
sym.imp.EVP_DigestFinal_ex={"realname":"EVP_DigestFinal_ex","demangled":false,"offset":9472,"size":11,"space":"imports"}
sym.imp.EVP_DigestInit_ex={"realname":"EVP_DigestInit_ex","demangled":false,"offset":9376,"size":11,"space":"imports"}
sym.imp.EVP_DigestUpdate={"realname":"EVP_DigestUpdate","demangled":false,"offset":9216,"size":11,"space":"imports"}
sym.imp.EVP_MD_CTX_free={"realname":"EVP_MD_CTX_free","demangled":false,"offset":9296,"size":11,"space":"imports"}
sym.imp.EVP_MD_CTX_new={"realname":"EVP_MD_CTX_new","demangled":false,"offset":9136,"size":11,"space":"imports"}
sym.imp.EVP_MD_CTX_reset={"realname":"EVP_MD_CTX_reset","demangled":false,"offset":9248,"size":11,"space":"imports"}
sym.imp.EVP_sha256={"realname":"EVP_sha256","demangled":false,"offset":9104,"size":11,"space":"imports"}
sym.imp.__assert_fail={"realname":"__assert_fail","demangled":false,"offset":9024,"size":11,"space":"imports"}
sym.imp.__errno_location={"realname":"__errno_location","demangled":false,"offset":9312,"size":11,"space":"imports"}
sym.imp.__fprintf_chk={"realname":"__fprintf_chk","demangled":false,"offset":8960,"size":11,"space":"imports"}
sym.imp.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":9328,"size":11,"space":"imports"}
sym.imp.atoi={"realname":"atoi","demangled":false,"offset":9232,"size":11,"space":"imports"}
sym.imp.close={"realname":"close","demangled":false,"offset":8944,"size":11,"space":"imports"}
sym.imp.dup2={"realname":"dup2","demangled":false,"offset":8880,"size":11,"space":"imports"}
sym.imp.exit={"realname":"exit","demangled":false,"offset":9008,"size":11,"space":"imports"}
sym.imp.fclose={"realname":"fclose","demangled":false,"offset":9408,"size":11,"space":"imports"}
sym.imp.fflush={"realname":"fflush","demangled":false,"offset":9488,"size":11,"space":"imports"}
sym.imp.fgets={"realname":"fgets","demangled":false,"offset":9120,"size":11,"space":"imports"}
sym.imp.fopen={"realname":"fopen","demangled":false,"offset":9056,"size":11,"space":"imports"}
sym.imp.fread={"realname":"fread","demangled":false,"offset":9280,"size":11,"space":"imports"}
sym.imp.fseek={"realname":"fseek","demangled":false,"offset":8992,"size":11,"space":"imports"}
sym.imp.ftell={"realname":"ftell","demangled":false,"offset":8912,"size":11,"space":"imports"}
sym.imp.gets={"realname":"gets","demangled":false,"offset":9264,"size":11,"space":"imports"}
sym.imp.memcmp={"realname":"memcmp","demangled":false,"offset":9392,"size":11,"space":"imports"}
sym.imp.open={"realname":"open","demangled":false,"offset":9456,"size":11,"space":"imports"}
sym.imp.perror={"realname":"perror","demangled":false,"offset":9424,"size":11,"space":"imports"}
sym.imp.printf={"realname":"printf","demangled":false,"offset":8896,"size":11,"space":"imports"}
sym.imp.puts={"realname":"puts","demangled":false,"offset":8976,"size":11,"space":"imports"}
sym.imp.setsockopt={"realname":"setsockopt","demangled":false,"offset":9088,"size":11,"space":"imports"}
sym.imp.setvbuf={"realname":"setvbuf","demangled":false,"offset":9040,"size":11,"space":"imports"}
sym.imp.shutdown={"realname":"shutdown","demangled":false,"offset":8928,"size":11,"space":"imports"}
sym.imp.sigaction={"realname":"sigaction","demangled":false,"offset":9200,"size":11,"space":"imports"}
sym.imp.sigfillset={"realname":"sigfillset","demangled":false,"offset":9072,"size":11,"space":"imports"}
sym.imp.strcmp={"realname":"strcmp","demangled":false,"offset":9344,"size":11,"space":"imports"}
sym.imp.strcpy={"realname":"strcpy","demangled":false,"offset":9360,"size":11,"space":"imports"}
sym.imp.strerror={"realname":"strerror","demangled":false,"offset":9184,"size":11,"space":"imports"}
sym.imp.strlen={"realname":"strlen","demangled":false,"offset":9152,"size":11,"space":"imports"}
sym.imp.strtok_r={"realname":"strtok_r","demangled":false,"offset":9168,"size":11,"space":"imports"}
sym.imp.write={"realname":"write","demangled":false,"offset":9440,"size":11,"space":"imports"}
sym.main={"realname":"main","demangled":false,"offset":10132,"size":51,"space":"symbols"}
sym.print_flag={"realname":"print_flag","demangled":false,"offset":12429,"size":302,"space":"symbols"}
sym.register_tm_clones={"realname":"register_tm_clones","demangled":false,"offset":9600,"size":57,"space":"symbols"}
sym.set_signal_handler={"realname":"set_signal_handler","demangled":false,"offset":12010,"size":153,"space":"symbols"}

/core/flags/spaces
name=fs
spacestack=["*"]

/core/flags/spaces/spaces
classes=s
flirt=s
functions=s
imports=s
platform.ports=s
pointers=s
registers=s
registers.extended=s
registers.mmio=s
relocs=s
search=s
sections=s
segments=s
strings=s
symbols=s

/core/flags/tags
tag.alloc=malloc free$ calloc kalloc realloc
tag.dylib=dlopen dlsym dlclose mmap LoadLibrary GetProcAddress
tag.env=getenv putenv unsetenv setenv GetEnvironmentVariable SetEnvironmentVariable ExpandEnvironmentStrings
tag.fs=open$ close read$ write CloseHandle FindFirstFileW _wfopen _wstat ftruncate lseek _chsize GetFullPathName realpath RemoveDirectory DeleteFile CreateFile WriteFile UnmapViewOfFile CreateFileMapping MapViewOfFile readlink chmod fchmod chown stat fstat lstat fstatat lstat64 stat64 chflags fchflags lchflags
tag.network=socket connect bind$ listen accept sendto recvfrom gethostbyname htons ntohs
tag.process=getpid getppid kill exit abort assert gethostid sethostid sysctl
tag.stdout=^printf puts write
tag.string=strcat strcpy strncpy strlen strtok strstr strlcpy asprintf sprintf snprintf
tag.threads=pthread_create pthread_mutex_init pthread_cond_init CreateThread TerminateThread WaitForSingleObject GetCurrentThreadId
tag.time=settimeofday gettimeofday time adjtime ctime timed date$ sleep Sleep usleep clock_nanosleep localtime asctime difftime gmtime mktime timelocal timegm tzfile tzset

/core/flags/zones
