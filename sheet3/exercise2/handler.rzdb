/
type=rizin rz-db project
version=11

/core
blocksize=0x400
offset=0x401564

/core/analysis

/core/analysis/blocks
0x401000={"size":20,"jump":4198422,"fail":4198420,"traced":true,"ninstr":5,"op_pos":[4,8,15,18],"sp_delta":[0,8,8,8,8],"sp":0}
0x401014={"size":2,"jump":4198422,"ninstr":1,"sp":8}
0x401016={"size":5,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[-8,-16],"sp":8}
0x401030={"size":6,"ninstr":1,"sp":0}
0x401040={"size":6,"ninstr":1,"sp":0}
0x401050={"size":6,"ninstr":1,"sp":0}
0x401060={"size":6,"ninstr":1,"sp":0}
0x401070={"size":6,"ninstr":1,"sp":0}
0x401080={"size":6,"ninstr":1,"sp":0}
0x401090={"size":6,"ninstr":1,"sp":0}
0x4010a0={"size":6,"ninstr":1,"sp":0}
0x4010b0={"size":6,"ninstr":1,"sp":0}
0x4010c0={"size":6,"ninstr":1,"sp":0}
0x4010d0={"size":6,"ninstr":1,"sp":0}
0x4010e0={"size":6,"ninstr":1,"sp":0}
0x4010f0={"size":6,"ninstr":1,"sp":0}
0x401100={"size":6,"ninstr":1,"sp":0}
0x401110={"size":6,"ninstr":1,"sp":0}
0x401120={"size":6,"ninstr":1,"sp":0}
0x401130={"size":6,"ninstr":1,"sp":0}
0x401140={"size":6,"ninstr":1,"sp":0}
0x401150={"size":6,"ninstr":1,"sp":0}
0x401160={"size":6,"ninstr":1,"sp":0}
0x401170={"size":6,"ninstr":1,"sp":0}
0x401180={"size":6,"ninstr":1,"sp":0}
0x401190={"size":6,"ninstr":1,"sp":0}
0x4011a0={"size":6,"ninstr":1,"sp":0}
0x4011b0={"size":6,"ninstr":1,"sp":0}
0x4011c0={"size":6,"ninstr":1,"sp":0}
0x4011d0={"size":6,"ninstr":1,"sp":0}
0x4011e0={"size":6,"ninstr":1,"sp":0}
0x4011f0={"size":37,"traced":true,"ninstr":12,"op_pos":[4,6,9,10,13,17,18,19,22,24,31],"sp_delta":[0,0,0,-8,-8,-8,0,8,8,8,8,8],"sp":0}
0x401220={"size":5,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,-8],"sp":0}
0x401230={"size":13,"jump":4198992,"fail":4198973,"traced":true,"ninstr":3,"op_pos":[5,11],"sp_delta":[0,0,0],"sp":0,"cmpval":4210704}
0x40123d={"size":10,"jump":4198992,"fail":4198983,"traced":true,"ninstr":3,"op_pos":[5,8],"sp_delta":[0,0,0],"sp":0}
0x401247={"size":7,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":0}
0x401250={"size":1,"ninstr":1,"sp":0}
0x401260={"size":31,"jump":4199056,"fail":4199039,"traced":true,"ninstr":8,"op_pos":[5,12,15,19,23,26,29],"sp_delta":[0,0,0,0,0,0,0,0],"sp":0}
0x40127f={"size":10,"jump":4199056,"fail":4199049,"traced":true,"ninstr":3,"op_pos":[5,8],"sp_delta":[0,0,0],"sp":0}
0x401289={"size":7,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":0}
0x401290={"size":1,"ninstr":1,"sp":0}
0x4012a0={"size":13,"jump":4199104,"fail":4199085,"traced":true,"ninstr":3,"op_pos":[4,11],"sp_delta":[0,0,0],"sp":0}
0x4012ad={"size":18,"traced":true,"ninstr":6,"op_pos":[1,4,9,16,17],"sp_delta":[8,8,8,8,0,-8],"sp":0}
0x4012c0={"size":1,"ninstr":1,"sp":0}
0x4012d0={"size":6,"jump":4199008,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x4012d6={"size":73,"jump":4199322,"fail":4199199,"traced":true,"ninstr":18,"op_pos":[4,5,8,9,13,15,24,28,30,37,44,50,54,59,64,69,71],"sp_delta":[0,8,8,16,40,40,40,40,40,40,40,40,40,40,40,40,40,40],"sp":0}
0x40131f={"size":24,"jump":4199337,"fail":4199223,"traced":true,"ninstr":6,"op_pos":[5,7,12,19,22],"sp_delta":[0,0,0,0,0,0],"sp":40}
0x401337={"size":31,"jump":4199349,"fail":4199254,"traced":true,"ninstr":7,"op_pos":[5,10,15,22,27,29],"sp_delta":[0,0,0,0,0,0,0],"sp":40}
0x401356={"size":26,"jump":4199361,"fail":4199280,"traced":true,"ninstr":6,"op_pos":[5,10,17,22,24],"sp_delta":[0,0,0,0,0,0],"sp":40}
0x401370={"size":16,"jump":4199373,"fail":4199296,"traced":true,"ninstr":5,"op_pos":[5,7,12,14],"sp_delta":[0,0,0,0,0],"sp":40}
0x401380={"size":16,"jump":4199385,"fail":4199312,"traced":true,"ninstr":4,"op_pos":[7,12,14],"sp_delta":[0,0,0,0],"sp":40}
0x401390={"size":10,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":40}
0x40139a={"size":10,"traced":true,"ninstr":3,"op_pos":[5,10],"sp_delta":[0,0,0],"sp":40}
0x4013a9={"size":10,"traced":true,"ninstr":3,"op_pos":[5,10],"sp_delta":[0,0,0],"sp":40}
0x4013b5={"size":10,"traced":true,"ninstr":3,"op_pos":[5,10],"sp_delta":[0,0,0],"sp":40}
0x4013c1={"size":10,"traced":true,"ninstr":3,"op_pos":[5,10],"sp_delta":[0,0,0],"sp":40}
0x4013cd={"size":10,"traced":true,"ninstr":3,"op_pos":[5,10],"sp_delta":[0,0,0],"sp":40}
0x4013d9={"size":10,"traced":true,"ninstr":3,"op_pos":[5,10],"sp_delta":[0,0,0],"sp":40}
0x4013e5={"size":21,"jump":4199434,"fail":4199418,"traced":true,"ninstr":8,"op_pos":[4,5,8,9,13,16,19],"sp_delta":[0,8,8,16,24,24,24,24],"sp":0,"cmpval":2}
0x4013fa={"size":16,"jump":4199434,"traced":true,"ninstr":4,"op_pos":[4,9,11],"sp_delta":[0,0,0,0],"sp":24}
0x40140a={"size":10,"traced":true,"ninstr":3,"op_pos":[5,10],"sp_delta":[0,0,0],"sp":24}
0x401416={"size":53,"jump":4199530,"fail":4199499,"traced":true,"ninstr":14,"op_pos":[4,5,8,9,16,19,28,32,34,41,46,49,51],"sp_delta":[0,8,8,16,1064,1064,1064,1064,1064,1064,1064,1064,1064,1064],"sp":0}
0x40144b={"size":11,"jump":4199510,"traced":true,"ninstr":3,"op_pos":[3,6],"sp_delta":[0,0,0],"sp":1064}
0x401456={"size":20,"jump":4199510,"fail":4199530,"traced":true,"ninstr":5,"op_pos":[3,11,15,18],"sp_delta":[0,0,0,0,0],"sp":1064}
0x40146a={"size":37,"jump":4199567,"traced":true,"ninstr":7,"op_pos":[5,10,15,22,27,32],"sp_delta":[0,0,0,0,0,0,0],"sp":1064,"cmpval":256}
0x40148f={"size":44,"jump":4199567,"fail":4199611,"traced":true,"ninstr":9,"op_pos":[7,9,14,21,26,31,35,42],"sp_delta":[0,0,0,0,0,0,0,0,0],"sp":1064}
0x4014bb={"size":15,"jump":4199632,"fail":4199626,"traced":true,"ninstr":3,"op_pos":[4,13],"sp_delta":[0,0,0],"sp":1064}
0x4014ca={"size":6,"traced":true,"ninstr":3,"op_pos":[4,5],"sp_delta":[0,-1064,-1072],"sp":1064}
0x4014d0={"size":5,"ninstr":1,"sp":1064}
0x4014d5={"size":104,"jump":4199781,"fail":4199741,"traced":true,"ninstr":22,"op_pos":[4,5,8,9,16,19,28,32,34,39,46,51,58,63,70,77,82,89,94,99,102],"sp_delta":[0,8,8,16,1080,1080,1080,1080,1080,1080,1080,1080,1080,1080,1080,1080,1080,1080,1080,1080,1080,1080],"sp":0,"cmpval":2}
0x40153d={"size":9,"jump":4199793,"fail":4199750,"traced":true,"ninstr":2,"op_pos":[7],"sp_delta":[0,0],"sp":1080}
0x401546={"size":6,"jump":4199756,"traced":true,"ninstr":1,"sp":1080}
0x40154c={"size":19,"jump":4199906,"fail":4199775,"traced":true,"ninstr":3,"op_pos":[4,13],"sp_delta":[0,0,0],"sp":1080}
0x40155f={"size":6,"traced":true,"ninstr":3,"op_pos":[4,5],"sp_delta":[0,-1080,-1088],"sp":1080}
0x401565={"size":10,"traced":true,"ninstr":3,"op_pos":[5,10],"sp_delta":[0,0,0],"sp":1080}
0x401571={"size":58,"jump":4199861,"fail":4199851,"traced":true,"ninstr":12,"op_pos":[5,12,17,22,28,31,38,45,48,53,56],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0],"sp":1080}
0x4015ab={"size":10,"jump":4199861,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":1080}
0x4015b5={"size":45,"jump":4199756,"traced":true,"ninstr":8,"op_pos":[5,12,17,22,28,35,40],"sp_delta":[0,0,0,0,0,0,0,0],"sp":1080}
0x4015e2={"size":5,"ninstr":1,"sp":1080}
0x4015e7={"size":34,"jump":4199945,"traced":true,"ninstr":8,"op_pos":[4,5,8,12,21,25,27],"sp_delta":[0,8,8,24,24,24,24,24],"sp":0}
0x401609={"size":15,"jump":4199945,"fail":4199960,"traced":true,"ninstr":4,"op_pos":[4,9,13],"sp_delta":[0,0,0,0],"sp":24}
0x401618={"size":15,"jump":4199977,"fail":4199975,"traced":true,"ninstr":3,"op_pos":[4,13],"sp_delta":[0,0,0],"sp":24}
0x401627={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"sp_delta":[-24,-32],"sp":24}
0x401629={"size":5,"ninstr":1,"sp":24}
0x40162e={"size":57,"traced":true,"ninstr":13,"op_pos":[4,5,8,13,18,20,25,30,37,42,47,52],"sp_delta":[0,8,8,8,8,8,8,8,8,8,8,8,8],"sp":0}
0x401667={"size":31,"jump":4200146,"fail":4200070,"traced":true,"ninstr":11,"op_pos":[4,5,8,10,12,13,17,20,25,29],"sp_delta":[0,8,8,16,24,32,40,40,40,40,40],"sp":0}
0x401686={"size":25,"jump":4200156,"fail":4200095,"traced":true,"ninstr":7,"op_pos":[3,8,13,16,21,23],"sp_delta":[0,0,0,0,0,0,0],"sp":40}
0x40169f={"size":17,"jump":4200166,"fail":4200112,"traced":true,"ninstr":5,"op_pos":[3,8,11,15],"sp_delta":[0,0,0,0,0],"sp":40}
0x4016b0={"size":20,"jump":4200176,"fail":4200132,"traced":true,"ninstr":6,"op_pos":[5,8,11,16,18],"sp_delta":[0,0,0,0,0,0],"sp":40}
0x4016c4={"size":14,"traced":true,"ninstr":7,"op_pos":[3,7,8,10,12,13],"sp_delta":[0,-8,-16,-24,-32,-40,-48],"sp":40}
0x4016d2={"size":10,"jump":4200156,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":40}
0x4016dc={"size":10,"jump":4200166,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":40}
0x4016e6={"size":10,"jump":4200176,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":40}
0x4016f0={"size":10,"jump":4200186,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":40}
0x4016fa={"size":60,"jump":4200310,"fail":4200246,"traced":true,"ninstr":17,"op_pos":[4,5,8,10,12,13,20,22,25,28,37,41,43,50,55,58],"sp_delta":[0,8,8,16,24,32,200,200,200,200,200,200,200,200,200,200,200],"sp":0}
0x401736={"size":35,"jump":4200320,"fail":4200281,"traced":true,"ninstr":8,"op_pos":[7,11,16,23,25,30,33],"sp_delta":[0,0,0,0,0,0,0,0],"sp":200}
0x401759={"size":15,"jump":4200330,"fail":4200296,"traced":true,"ninstr":3,"op_pos":[4,13],"sp_delta":[0,0,0],"sp":200}
0x401768={"size":14,"traced":true,"ninstr":6,"op_pos":[7,8,10,12,13],"sp_delta":[-168,-176,-184,-192,-200,-208],"sp":200}
0x401776={"size":10,"jump":4200320,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":200}
0x401780={"size":10,"jump":4200330,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":200}
0x40178a={"size":5,"ninstr":1,"sp":200}
0x40178f={"size":40,"jump":4200439,"fail":4200375,"traced":true,"ninstr":14,"op_pos":[4,5,8,10,12,14,15,18,21,26,31,36,38],"sp_delta":[0,8,8,16,24,32,40,40,40,40,40,40,40,40],"sp":0}
0x4017b7={"size":31,"jump":4200494,"fail":4200406,"traced":true,"ninstr":10,"op_pos":[2,5,10,13,16,18,23,26,29],"sp_delta":[0,0,0,0,0,0,0,0,0,0],"sp":40}
0x4017d6={"size":13,"jump":4200494,"fail":4200419,"traced":true,"ninstr":4,"op_pos":[3,8,11],"sp_delta":[0,0,0,0],"sp":40}
0x4017e3={"size":11,"jump":4200549,"fail":4200430,"traced":true,"ninstr":4,"op_pos":[2,7,9],"sp_delta":[0,0,0,0],"sp":40}
0x4017ee={"size":9,"traced":true,"ninstr":6,"op_pos":[1,3,5,7,8],"sp_delta":[-8,-16,-24,-32,-40,-48],"sp":40}
0x4017f7={"size":55,"jump":4200494,"traced":true,"ninstr":12,"op_pos":[5,7,12,15,18,23,28,35,40,45,50],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0],"sp":40}
0x40182e={"size":55,"jump":4200549,"traced":true,"ninstr":12,"op_pos":[5,7,12,15,18,23,28,35,40,45,50],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0],"sp":40}
0x401865={"size":40,"jump":4200589,"traced":true,"ninstr":8,"op_pos":[3,8,13,20,25,30,35],"sp_delta":[0,0,0,0,0,0,0,0],"sp":40}
0x40188d={"size":60,"jump":4200798,"fail":4200649,"traced":true,"ninstr":16,"op_pos":[1,4,6,8,10,11,18,27,31,33,38,43,48,51,54],"sp_delta":[8,8,16,24,32,40,1080,1080,1080,1080,1080,1080,1080,1080,1080,1080],"sp":0}
0x4018c9={"size":23,"jump":4200813,"fail":4200672,"traced":true,"ninstr":5,"op_pos":[3,8,11,17],"sp_delta":[0,0,0,0,0],"sp":1080,"cmpval":1023}
0x4018e0={"size":28,"jump":4200748,"fail":4200700,"traced":true,"ninstr":7,"op_pos":[7,12,17,20,23,26],"sp_delta":[0,0,0,0,0,0,0],"sp":1080}
0x4018fc={"size":11,"jump":4200711,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":1080}
0x401907={"size":35,"jump":4200711,"fail":4200746,"traced":true,"ninstr":9,"op_pos":[3,6,14,17,22,27,30,33],"sp_delta":[0,0,0,0,0,0,0,0,0],"sp":1080}
0x40192a={"size":2,"jump":4200838,"fail":4200748,"ninstr":1,"sp":1080}
0x40192c={"size":34,"jump":4200863,"fail":4200782,"traced":true,"ninstr":6,"op_pos":[7,14,19,23,32],"sp_delta":[0,0,0,0,0,0],"sp":1080}
0x40194e={"size":16,"traced":true,"ninstr":7,"op_pos":[7,8,10,12,14,15],"sp_delta":[-1040,-1048,-1056,-1064,-1072,-1080,-1088],"sp":1080}
0x40195e={"size":10,"traced":true,"ninstr":3,"op_pos":[5,10],"sp_delta":[0,0,0],"sp":1080}
0x40196d={"size":25,"traced":true,"ninstr":5,"op_pos":[5,10,15,20],"sp_delta":[0,0,0,0,0],"sp":1080}
0x401986={"size":25,"traced":true,"ninstr":5,"op_pos":[5,10,15,20],"sp_delta":[0,0,0,0,0],"sp":1080}
0x40199f={"size":5,"ninstr":1,"sp":1080}
0x4019a4={"size":13,"traced":true,"ninstr":4,"op_pos":[4,8,12],"sp_delta":[0,8,0,-8],"sp":0}

/core/analysis/callables
_Exit=func
__libc_init_array=func
__stack_chk_fail=func
__tolower=func
__toupper=func
_exit=func
abort=func
abs=func
acos=func
acosf=func
acosh=func
acoshf=func
acoshl=func
acosl=func
arc4random=func
asctime=func
asin=func
asinf=func
asinh=func
asinhf=func
asinhl=func
asinl=func
at_quick_exit=func
atan=func
atanf=func
atanh=func
atanhf=func
atanhl=func
atanl=func
atexit=func
atof=func
atoi=func
atol=func
atoll=func
basename=func
btowc=func
cbrt=func
cbrtf=func
cbrtl=func
ceil=func
ceilf=func
ceill=func
clearerr=func
clock=func
close=func
cos=func
cosf=func
cosh=func
coshf=func
coshl=func
cosl=func
ctime=func
entry.init0=func
entry0=func
erf=func
erfc=func
erfcf=func
erfcl=func
erff=func
erfl=func
err=func
errc=func
errx=func
exit=func
exp=func
exp2=func
exp2f=func
exp2l=func
expf=func
expl=func
expm1=func
expm1f=func
expm1l=func
fabs=func
fabsf=func
fabsl=func
fclose=func
feclearexcept=func
fegetenv=func
fegetround=func
feholdexcept=func
feof=func
feraiseexcept=func
ferror=func
fesetenv=func
fesetround=func
fetestexcept=func
feupdateenv=func
fflush=func
fgetc=func
fgetwc=func
fileno=func
floor=func
floorf=func
floorl=func
fpclassify=func
free=func
ftell=func
fts_close_INODE64=func
fts_read_INODE64=func
func._Exit.arg.0=int,status
func._Exit.args=0x1
func._Exit.noreturn=true
func._Exit.ret=void
func.__libc_init_array.args=0
func.__libc_init_array.ret=void
func.__stack_chk_fail.args=0
func.__stack_chk_fail.noreturn=true
func.__stack_chk_fail.ret=void
func.__tolower.arg.0=int,c
func.__tolower.args=0x1
func.__tolower.ret=int
func.__toupper.arg.0=int,c
func.__toupper.args=0x1
func.__toupper.ret=int
func._exit.arg.0=int,status
func._exit.args=0x1
func._exit.noreturn=true
func._exit.ret=void
func.abort.args=0
func.abort.noreturn=true
func.abort.ret=void
func.abs.arg.0=int,j
func.abs.args=0x1
func.abs.ret=int
func.acos.arg.0=double,x
func.acos.args=0x1
func.acos.ret=double
func.acosf.arg.0=float,x
func.acosf.args=0x1
func.acosf.ret=float
func.acosh.arg.0=double,x
func.acosh.args=0x1
func.acosh.ret=double
func.acoshf.arg.0=float,x
func.acoshf.args=0x1
func.acoshf.ret=float
func.acoshl.arg.0=long double,x
func.acoshl.args=0x1
func.acoshl.ret=long double
func.acosl.arg.0=long double,x
func.acosl.args=0x1
func.acosl.ret=long double
func.arc4random.args=0
func.arc4random.ret=uint32_t
func.asctime.arg.0=struct tm *,timeptr
func.asctime.args=0x1
func.asctime.ret=char *
func.asin.arg.0=double,x
func.asin.args=0x1
func.asin.ret=double
func.asinf.arg.0=float,x
func.asinf.args=0x1
func.asinf.ret=float
func.asinh.arg.0=double,x
func.asinh.args=0x1
func.asinh.ret=double
func.asinhf.arg.0=float,x
func.asinhf.args=0x1
func.asinhf.ret=float
func.asinhl.arg.0=long double,x
func.asinhl.args=0x1
func.asinhl.ret=long double
func.asinl.arg.0=long double,x
func.asinl.args=0x1
func.asinl.ret=long double
func.at_quick_exit.args=0
func.at_quick_exit.ret=int
func.atan.arg.0=double,x
func.atan.args=0x1
func.atan.ret=double
func.atanf.arg.0=float,x
func.atanf.args=0x1
func.atanf.ret=float
func.atanh.arg.0=double,x
func.atanh.args=0x1
func.atanh.ret=double
func.atanhf.arg.0=float,x
func.atanhf.args=0x1
func.atanhf.ret=float
func.atanhl.arg.0=long double,x
func.atanhl.args=0x1
func.atanhl.ret=long double
func.atanl.arg.0=long double,x
func.atanl.args=0x1
func.atanl.ret=long double
func.atexit.arg.0=void *,function
func.atexit.args=0x1
func.atexit.ret=int
func.atof.arg.0=const char *,str
func.atof.args=0x1
func.atof.ret=double
func.atoi.arg.0=const char *,str
func.atoi.args=0x1
func.atoi.ret=int
func.atol.arg.0=const char *,str
func.atol.args=0x1
func.atol.ret=long
func.atoll.arg.0=const char *,str
func.atoll.args=0x1
func.atoll.ret=long long
func.basename.arg.0=char *,path
func.basename.args=0x1
func.basename.ret=char *
func.btowc.arg.0=int,c
func.btowc.args=0x1
func.btowc.ret=wint_t
func.cbrt.arg.0=double,x
func.cbrt.args=0x1
func.cbrt.ret=double
func.cbrtf.arg.0=float,x
func.cbrtf.args=0x1
func.cbrtf.ret=float
func.cbrtl.arg.0=long double,x
func.cbrtl.args=0x1
func.cbrtl.ret=long double
func.ceil.arg.0=double,x
func.ceil.args=0x1
func.ceil.ret=double
func.ceilf.arg.0=float,x
func.ceilf.args=0x1
func.ceilf.ret=float
func.ceill.arg.0=long double,x
func.ceill.args=0x1
func.ceill.ret=long double
func.clearerr.arg.0=FILE *,stream
func.clearerr.args=0x1
func.clearerr.ret=void
func.clock.args=0
func.clock.ret=clock_t
func.close.arg.0=int,fildes
func.close.args=0x1
func.close.ret=int
func.cos.arg.0=double,x
func.cos.args=0x1
func.cos.ret=double
func.cosf.arg.0=float,x
func.cosf.args=0x1
func.cosf.ret=float
func.cosh.arg.0=double,x
func.cosh.args=0x1
func.cosh.ret=double
func.coshf.arg.0=float,x
func.coshf.args=0x1
func.coshf.ret=float
func.coshl.arg.0=long double,x
func.coshl.args=0x1
func.coshl.ret=long double
func.cosl.arg.0=long double,x
func.cosl.args=0x1
func.cosl.ret=long double
func.ctime.arg.0=time_t *,timer
func.ctime.args=0x1
func.ctime.ret=char *
func.entry.init0.args=0
func.entry.init0.ret=void
func.entry0.arg.0=void *,rtld_fini
func.entry0.args=0x1
func.entry0.ret=void
func.erf.arg.0=double,x
func.erf.args=0x1
func.erf.ret=double
func.erfc.arg.0=double,x
func.erfc.args=0x1
func.erfc.ret=double
func.erfcf.arg.0=float,x
func.erfcf.args=0x1
func.erfcf.ret=float
func.erfcl.arg.0=long double,x
func.erfcl.args=0x1
func.erfcl.ret=long double
func.erff.arg.0=float,x
func.erff.args=0x1
func.erff.ret=float
func.erfl.arg.0=long double,x
func.erfl.args=0x1
func.erfl.ret=long double
func.err.arg.0=int,eval
func.err.args=0x1
func.err.noreturn=true
func.err.ret=void
func.errc.arg.0=int,eval
func.errc.args=0x1
func.errc.noreturn=true
func.errc.ret=void
func.errx.arg.0=int,eval
func.errx.args=0x1
func.errx.noreturn=true
func.errx.ret=void
func.exit.arg.0=int,status
func.exit.args=0x1
func.exit.noreturn=true
func.exit.ret=void
func.exp.arg.0=double,x
func.exp.args=0x1
func.exp.ret=double
func.exp2.arg.0=double,x
func.exp2.args=0x1
func.exp2.ret=double
func.exp2f.arg.0=float,x
func.exp2f.args=0x1
func.exp2f.ret=float
func.exp2l.arg.0=long double,x
func.exp2l.args=0x1
func.exp2l.ret=long double
func.expf.arg.0=float,x
func.expf.args=0x1
func.expf.ret=float
func.expl.arg.0=long double,x
func.expl.args=0x1
func.expl.ret=long double
func.expm1.arg.0=double,x
func.expm1.args=0x1
func.expm1.ret=double
func.expm1f.arg.0=float,x
func.expm1f.args=0x1
func.expm1f.ret=float
func.expm1l.arg.0=long double,x
func.expm1l.args=0x1
func.expm1l.ret=long double
func.fabs.arg.0=double,x
func.fabs.args=0x1
func.fabs.ret=double
func.fabsf.arg.0=float,x
func.fabsf.args=0x1
func.fabsf.ret=float
func.fabsl.arg.0=long double,x
func.fabsl.args=0x1
func.fabsl.ret=long double
func.fclose.arg.0=FILE *,stream
func.fclose.args=0x1
func.fclose.ret=int
func.feclearexcept.arg.0=int,excepts
func.feclearexcept.args=0x1
func.feclearexcept.ret=int
func.fegetenv.arg.0=fenv_t *,envp
func.fegetenv.args=0x1
func.fegetenv.ret=int
func.fegetround.args=0
func.fegetround.ret=int
func.feholdexcept.arg.0=fenv_t *,envp
func.feholdexcept.args=0x1
func.feholdexcept.ret=int
func.feof.arg.0=FILE *,stream
func.feof.args=0x1
func.feof.ret=int
func.feraiseexcept.arg.0=int,excepts
func.feraiseexcept.args=0x1
func.feraiseexcept.ret=int
func.ferror.arg.0=FILE *,stream
func.ferror.args=0x1
func.ferror.ret=int
func.fesetenv.arg.0=fenv_t *,arg
func.fesetenv.args=0x1
func.fesetenv.ret=int
func.fesetround.arg.0=int,round
func.fesetround.args=0x1
func.fesetround.ret=int
func.fetestexcept.arg.0=int,excepts
func.fetestexcept.args=0x1
func.fetestexcept.ret=int
func.feupdateenv.arg.0=fenv_t *,arg
func.feupdateenv.args=0x1
func.feupdateenv.ret=int
func.fflush.arg.0=FILE *,stream
func.fflush.args=0x1
func.fflush.ret=int
func.fgetc.arg.0=FILE *,stream
func.fgetc.args=0x1
func.fgetc.ret=int
func.fgetwc.arg.0=FILE *,stream
func.fgetwc.args=0x1
func.fgetwc.ret=wint_t
func.fileno.arg.0=FILE *,stream
func.fileno.args=0x1
func.fileno.ret=int
func.floor.arg.0=double,x
func.floor.args=0x1
func.floor.ret=double
func.floorf.arg.0=float,x
func.floorf.args=0x1
func.floorf.ret=float
func.floorl.arg.0=long double,x
func.floorl.args=0x1
func.floorl.ret=long double
func.fpclassify.arg.0=double,x
func.fpclassify.args=0x1
func.fpclassify.ret=int
func.free.arg.0=void *,ptr
func.free.args=0x1
func.free.ret=void
func.ftell.arg.0=FILE *,stream
func.ftell.args=0x1
func.ftell.ret=long
func.fts_close_INODE64.arg.0=void *,ftsp
func.fts_close_INODE64.args=0x1
func.fts_close_INODE64.ret=int
func.fts_read_INODE64.arg.0=void *,ftsp
func.fts_read_INODE64.args=0x1
func.fts_read_INODE64.ret=void *
func.getc.arg.0=FILE *,stream
func.getc.args=0x1
func.getc.ret=int
func.getchar.args=0
func.getchar.ret=int
func.getenv.arg.0=const char *,name
func.getenv.args=0x1
func.getenv.ret=char *
func.geteuid.args=0
func.geteuid.ret=uid_t
func.getpid.args=0
func.getpid.ret=int
func.getprogname.args=0
func.getprogname.ret=const char *
func.gets.arg.0=char *,s
func.gets.args=0x1
func.gets.ret=char *
func.getuid.args=0
func.getuid.ret=uid_t
func.getwc.arg.0=FILE *,stream
func.getwc.args=0x1
func.getwc.ret=wint_t
func.getwchar.args=0
func.getwchar.ret=wint_t
func.gmtime.arg.0=time_t *,timer
func.gmtime.args=0x1
func.gmtime.ret=struct tm *
func.humanize_number.arg.0=char *,buf
func.humanize_number.args=0x1
func.humanize_number.ret=int
func.ilogb.arg.0=double,x
func.ilogb.args=0x1
func.ilogb.ret=int
func.ilogbf.arg.0=float,x
func.ilogbf.args=0x1
func.ilogbf.ret=int
func.ilogbl.arg.0=long double,x
func.ilogbl.args=0x1
func.ilogbl.ret=int
func.imaxabs.arg.0=intmax_t,j
func.imaxabs.args=0x1
func.imaxabs.ret=intmax_t
func.inet_ntoa.arg.0=void *,in
func.inet_ntoa.args=0x1
func.inet_ntoa.ret=char *
func.isalnum.arg.0=int,c
func.isalnum.args=0x1
func.isalnum.ret=int
func.isalpha.arg.0=int,c
func.isalpha.args=0x1
func.isalpha.ret=int
func.isatty.arg.0=int,fd
func.isatty.args=0x1
func.isatty.ret=int
func.isblank.arg.0=int,c
func.isblank.args=0x1
func.isblank.ret=int
func.iscntrl.arg.0=int,c
func.iscntrl.args=0x1
func.iscntrl.ret=int
func.isdigit.arg.0=int,c
func.isdigit.args=0x1
func.isdigit.ret=int
func.isfinite.arg.0=double,x
func.isfinite.args=0x1
func.isfinite.ret=bool
func.isgraph.arg.0=int,c
func.isgraph.args=0x1
func.isgraph.ret=int
func.isinf.arg.0=double,x
func.isinf.args=0x1
func.isinf.ret=bool
func.islower.arg.0=int,c
func.islower.args=0x1
func.islower.ret=int
func.isnan.arg.0=double,x
func.isnan.args=0x1
func.isnan.ret=bool
func.isnormal.arg.0=double,x
func.isnormal.args=0x1
func.isnormal.ret=bool
func.isprint.arg.0=int,c
func.isprint.args=0x1
func.isprint.ret=int
func.ispunct.arg.0=int,c
func.ispunct.args=0x1
func.ispunct.ret=int
func.isspace.arg.0=int,c
func.isspace.args=0x1
func.isspace.ret=int
func.isupper.arg.0=int,c
func.isupper.args=0x1
func.isupper.ret=int
func.iswalnum.arg.0=wint_t,wc
func.iswalnum.args=0x1
func.iswalnum.ret=int
func.iswalpha.arg.0=wint_t,wc
func.iswalpha.args=0x1
func.iswalpha.ret=int
func.iswblank.arg.0=wint_t,wc
func.iswblank.args=0x1
func.iswblank.ret=int
func.iswcntrl.arg.0=wint_t,wc
func.iswcntrl.args=0x1
func.iswcntrl.ret=int
func.iswdigit.arg.0=wint_t,wc
func.iswdigit.args=0x1
func.iswdigit.ret=int
func.iswgraph.arg.0=wint_t,wc
func.iswgraph.args=0x1
func.iswgraph.ret=int
func.iswlower.arg.0=wint_t,wc
func.iswlower.args=0x1
func.iswlower.ret=int
func.iswprint.arg.0=wint_t,wc
func.iswprint.args=0x1
func.iswprint.ret=int
func.iswpunct.arg.0=wint_t,wc
func.iswpunct.args=0x1
func.iswpunct.ret=int
func.iswspace.arg.0=wint_t,wc
func.iswspace.args=0x1
func.iswspace.ret=int
func.iswupper.arg.0=wint_t,wc
func.iswupper.args=0x1
func.iswupper.ret=int
func.iswxdigit.arg.0=wint_t,wc
func.iswxdigit.args=0x1
func.iswxdigit.ret=int
func.isxdigit.arg.0=int,c
func.isxdigit.args=0x1
func.isxdigit.ret=int
func.labs.arg.0=long,j
func.labs.args=0x1
func.labs.ret=long
func.lgamma.arg.0=double,x
func.lgamma.args=0x1
func.lgamma.ret=double
func.lgammaf.arg.0=float,x
func.lgammaf.args=0x1
func.lgammaf.ret=float
func.lgammal.arg.0=long double,x
func.lgammal.args=0x1
func.lgammal.ret=long double
func.llabs.arg.0=long long,j
func.llabs.args=0x1
func.llabs.ret=long long
func.llrint.arg.0=double,x
func.llrint.args=0x1
func.llrint.ret=long long
func.llrintf.arg.0=float,x
func.llrintf.args=0x1
func.llrintf.ret=long long
func.llrintl.arg.0=long double,x
func.llrintl.args=0x1
func.llrintl.ret=long long
func.llround.arg.0=double,x
func.llround.args=0x1
func.llround.ret=long long
func.llroundf.arg.0=float,x
func.llroundf.args=0x1
func.llroundf.ret=long long
func.llroundl.arg.0=long double,x
func.llroundl.args=0x1
func.llroundl.ret=long long
func.localeconv.args=0
func.localeconv.ret=struct lconv *
func.localtime.arg.0=time_t *,timer
func.localtime.args=0x1
func.localtime.ret=struct tm *
func.log.arg.0=double,x
func.log.args=0x1
func.log.ret=double
func.log10.arg.0=double,x
func.log10.args=0x1
func.log10.ret=double
func.log10f.arg.0=float,x
func.log10f.args=0x1
func.log10f.ret=float
func.log10l.arg.0=long double,x
func.log10l.args=0x1
func.log10l.ret=long double
func.log1p.arg.0=double,x
func.log1p.args=0x1
func.log1p.ret=double
func.log1pf.arg.0=float,x
func.log1pf.args=0x1
func.log1pf.ret=float
func.log1pl.arg.0=long double,x
func.log1pl.args=0x1
func.log1pl.ret=long double
func.log2.arg.0=double,x
func.log2.args=0x1
func.log2.ret=double
func.log2f.arg.0=float,x
func.log2f.args=0x1
func.log2f.ret=float
func.log2l.arg.0=long double,x
func.log2l.args=0x1
func.log2l.ret=long double
func.logb.arg.0=double,x
func.logb.args=0x1
func.logb.ret=double
func.logbf.arg.0=float,x
func.logbf.args=0x1
func.logbf.ret=float
func.logbl.arg.0=long double,x
func.logbl.args=0x1
func.logbl.ret=long double
func.logf.arg.0=float,x
func.logf.args=0x1
func.logf.ret=float
func.logl.arg.0=long double,x
func.logl.args=0x1
func.logl.ret=long double
func.lrint.arg.0=double,x
func.lrint.args=0x1
func.lrint.ret=long
func.lrintf.arg.0=float,x
func.lrintf.args=0x1
func.lrintf.ret=long
func.lrintl.arg.0=long double,x
func.lrintl.args=0x1
func.lrintl.ret=long
func.lround.arg.0=double,x
func.lround.args=0x1
func.lround.ret=long
func.lroundf.arg.0=float,x
func.lroundf.args=0x1
func.lroundf.ret=long
func.lroundl.arg.0=long double,x
func.lroundl.args=0x1
func.lroundl.ret=long
func.malloc.arg.0=size_t,size
func.malloc.args=0x1
func.malloc.ret=void *
func.mbsinit.arg.0=mbstate_t *,ps
func.mbsinit.args=0x1
func.mbsinit.ret=int
func.mkstemp.arg.0=char *,template
func.mkstemp.args=0x1
func.mkstemp.ret=int
func.mktemp.arg.0=char *,template
func.mktemp.args=0x1
func.mktemp.ret=char *
func.mktime.arg.0=struct tm *,timeptr
func.mktime.args=0x1
func.mktime.ret=time_t
func.nan.arg.0=const char *,str
func.nan.args=0x1
func.nan.ret=double
func.nanf.arg.0=const char *,str
func.nanf.args=0x1
func.nanf.ret=float
func.nanl.arg.0=const char *,str
func.nanl.args=0x1
func.nanl.ret=long double
func.nearbyint.arg.0=double,x
func.nearbyint.args=0x1
func.nearbyint.ret=double
func.nearbyintf.arg.0=float,x
func.nearbyintf.args=0x1
func.nearbyintf.ret=float
func.nearbyintl.arg.0=long double,x
func.nearbyintl.args=0x1
func.nearbyintl.ret=long double
func.nl_langinfo.arg.0=nl_item,item
func.nl_langinfo.args=0x1
func.nl_langinfo.ret=char *
func.objc_enumerationMutation.arg.0=void *,instance
func.objc_enumerationMutation.args=0x1
func.objc_enumerationMutation.ret=void
func.objc_release.arg.0=void *,instance
func.objc_release.args=0x1
func.objc_release.ret=void
func.objc_retain.arg.0=void *,instance
func.objc_retain.args=0x1
func.objc_retain.ret=void
func.objc_retainAutoreleasedReturnValue.arg.0=void *,instance
func.objc_retainAutoreleasedReturnValue.args=0x1
func.objc_retainAutoreleasedReturnValue.ret=void
func.pclose.arg.0=FILE *,stream
func.pclose.args=0x1
func.pclose.ret=int
func.perror.arg.0=const char *,s
func.perror.args=0x1
func.perror.ret=void
func.printf.arg.0=const char *,format
func.printf.args=0x1
func.printf.ret=int
func.putchar.arg.0=int,c
func.putchar.args=0x1
func.putchar.ret=int
func.puts.arg.0=const char *,s
func.puts.args=0x1
func.puts.ret=int
func.pututxline.arg.0=void *,utx
func.pututxline.args=0x1
func.pututxline.ret=void *
func.putwchar.arg.0=wchar_t,c
func.putwchar.args=0x1
func.putwchar.ret=wint_t
func.quick_exit.arg.0=int,status
func.quick_exit.args=0x1
func.quick_exit.ret=void
func.raise.arg.0=int,sig
func.raise.args=0x1
func.raise.ret=int
func.rand.args=0
func.rand.ret=int
func.random.args=0
func.random.ret=uint32_t
func.remove.arg.0=const char *,filename
func.remove.args=0x1
func.remove.ret=int
func.rewind.arg.0=FILE *,stream
func.rewind.args=0x1
func.rewind.ret=void
func.rint.arg.0=double,x
func.rint.args=0x1
func.rint.ret=double
func.rintf.arg.0=float,x
func.rintf.args=0x1
func.rintf.ret=float
func.rintl.arg.0=long double,x
func.rintl.args=0x1
func.rintl.ret=long double
func.round.arg.0=double,x
func.round.args=0x1
func.round.ret=double
func.roundf.arg.0=float,x
func.roundf.args=0x1
func.roundf.ret=float
func.roundl.arg.0=long double,x
func.roundl.args=0x1
func.roundl.ret=long double
func.scanf.arg.0=const char *,format
func.scanf.args=0x1
func.scanf.ret=int
func.setjmp.arg.0=jmp_buf,env
func.setjmp.args=0x1
func.setjmp.ret=int
func.setstate.arg.0=const char *,state
func.setstate.args=0x1
func.setstate.ret=const char *
func.signbit.arg.0=double,x
func.signbit.args=0x1
func.signbit.ret=bool
func.sin.arg.0=double,x
func.sin.args=0x1
func.sin.ret=double
func.sinf.arg.0=float,x
func.sinf.args=0x1
func.sinf.ret=float
func.sinh.arg.0=double,x
func.sinh.args=0x1
func.sinh.ret=double
func.sinhf.arg.0=float,x
func.sinhf.args=0x1
func.sinhf.ret=float
func.sinhl.arg.0=long double,x
func.sinhl.args=0x1
func.sinhl.ret=long double
func.sinl.arg.0=long double,x
func.sinl.args=0x1
func.sinl.ret=long double
func.sleep.arg.0=int,s
func.sleep.args=0x1
func.sleep.ret=int
func.sqrt.arg.0=double,x
func.sqrt.args=0x1
func.sqrt.ret=double
func.sqrtf.arg.0=float,x
func.sqrtf.args=0x1
func.sqrtf.ret=float
func.sqrtl.arg.0=long double,x
func.sqrtl.args=0x1
func.sqrtl.ret=long double
func.srand.arg.0=int,seed
func.srand.args=0x1
func.srand.ret=void
func.srandom.arg.0=uint32_t,seed
func.srandom.args=0x1
func.srandom.ret=uint32_t
func.srandomdev.args=0
func.srandomdev.ret=void
func.strdup.arg.0=const char *,src
func.strdup.args=0x1
func.strdup.ret=char *
func.strerror.arg.0=int,errnum
func.strerror.args=0x1
func.strerror.ret=char *
func.strlen.arg.0=const char *,s
func.strlen.args=0x1
func.strlen.ret=size_t
func.system.arg.0=const char *,string
func.system.args=0x1
func.system.ret=int
func.tan.arg.0=double,x
func.tan.args=0x1
func.tan.ret=double
func.tanf.arg.0=float,x
func.tanf.args=0x1
func.tanf.ret=float
func.tanh.arg.0=double,x
func.tanh.args=0x1
func.tanh.ret=double
func.tanhf.arg.0=float,x
func.tanhf.args=0x1
func.tanhf.ret=float
func.tanhl.arg.0=long double,x
func.tanhl.args=0x1
func.tanhl.ret=long double
func.tanl.arg.0=long double,x
func.tanl.args=0x1
func.tanl.ret=long double
func.textdomain.arg.0=char *,domainname
func.textdomain.args=0x1
func.textdomain.ret=char *
func.tgamma.arg.0=double,x
func.tgamma.args=0x1
func.tgamma.ret=double
func.tgammaf.arg.0=float,x
func.tgammaf.args=0x1
func.tgammaf.ret=float
func.tgammal.arg.0=long double,x
func.tgammal.args=0x1
func.tgammal.ret=long double
func.time.arg.0=time_t *,timer
func.time.args=0x1
func.time.ret=time_t
func.tmpfile.args=0
func.tmpfile.ret=FILE *
func.tmpnam.arg.0=char *,s
func.tmpnam.args=0x1
func.tmpnam.ret=char *
func.tolower.arg.0=int,c
func.tolower.args=0x1
func.tolower.ret=int
func.toupper.arg.0=int,c
func.toupper.args=0x1
func.toupper.ret=int
func.towlower.arg.0=wint_t,wc
func.towlower.args=0x1
func.towlower.ret=wint_t
func.towupper.arg.0=wint_t,wc
func.towupper.args=0x1
func.towupper.ret=wint_t
func.trunc.arg.0=double,x
func.trunc.args=0x1
func.trunc.ret=double
func.truncf.arg.0=float,x
func.truncf.args=0x1
func.truncf.ret=float
func.truncl.arg.0=long double,x
func.truncl.args=0x1
func.truncl.ret=long double
func.umask.arg.0=int,m
func.umask.args=0x1
func.umask.ret=int
func.unlink.arg.0=const char *,path
func.unlink.args=0x1
func.unlink.ret=int
func.usleep.arg.0=int,s
func.usleep.args=0x1
func.usleep.ret=int
func.wait.arg.0=int *,wstatus
func.wait.args=0x1
func.wait.ret=pid_t
func.warn.arg.0=const char *,format
func.warn.args=0x1
func.warn.ret=void
func.warnx.arg.0=const char *,format
func.warnx.args=0x1
func.warnx.ret=void
func.wcslen.arg.0=wchar_t *,s
func.wcslen.args=0x1
func.wcslen.ret=size_t
func.wctob.arg.0=wint_t,c
func.wctob.args=0x1
func.wctob.ret=int
func.wctrans.arg.0=const char *,property
func.wctrans.args=0x1
func.wctrans.ret=wctrans_t
func.wctype.arg.0=const char *,property
func.wctype.args=0x1
func.wctype.ret=wctype_t
func.wprintf.arg.0=wchar_t *,format
func.wprintf.args=0x1
func.wprintf.ret=int
func.wscanf.arg.0=wchar_t *,format
func.wscanf.args=0x1
func.wscanf.ret=int
func.xmalloc.arg.0=size_t,size
func.xmalloc.args=0x1
func.xmalloc.ret=void *
getc=func
getchar=func
getenv=func
geteuid=func
getpid=func
getprogname=func
gets=func
getuid=func
getwc=func
getwchar=func
gmtime=func
humanize_number=func
ilogb=func
ilogbf=func
ilogbl=func
imaxabs=func
inet_ntoa=func
isalnum=func
isalpha=func
isatty=func
isblank=func
iscntrl=func
isdigit=func
isfinite=func
isgraph=func
isinf=func
islower=func
isnan=func
isnormal=func
isprint=func
ispunct=func
isspace=func
isupper=func
iswalnum=func
iswalpha=func
iswblank=func
iswcntrl=func
iswdigit=func
iswgraph=func
iswlower=func
iswprint=func
iswpunct=func
iswspace=func
iswupper=func
iswxdigit=func
isxdigit=func
labs=func
lgamma=func
lgammaf=func
lgammal=func
llabs=func
llrint=func
llrintf=func
llrintl=func
llround=func
llroundf=func
llroundl=func
localeconv=func
localtime=func
log=func
log10=func
log10f=func
log10l=func
log1p=func
log1pf=func
log1pl=func
log2=func
log2f=func
log2l=func
logb=func
logbf=func
logbl=func
logf=func
logl=func
lrint=func
lrintf=func
lrintl=func
lround=func
lroundf=func
lroundl=func
malloc=func
mbsinit=func
mkstemp=func
mktemp=func
mktime=func
nan=func
nanf=func
nanl=func
nearbyint=func
nearbyintf=func
nearbyintl=func
nl_langinfo=func
objc_enumerationMutation=func
objc_release=func
objc_retain=func
objc_retainAutoreleasedReturnValue=func
pclose=func
perror=func
printf=func
putchar=func
puts=func
pututxline=func
putwchar=func
quick_exit=func
raise=func
rand=func
random=func
remove=func
rewind=func
rint=func
rintf=func
rintl=func
round=func
roundf=func
roundl=func
scanf=func
setjmp=func
setstate=func
signbit=func
sin=func
sinf=func
sinh=func
sinhf=func
sinhl=func
sinl=func
sleep=func
sqrt=func
sqrtf=func
sqrtl=func
srand=func
srandom=func
srandomdev=func
strdup=func
strerror=func
strlen=func
system=func
tan=func
tanf=func
tanh=func
tanhf=func
tanhl=func
tanl=func
textdomain=func
tgamma=func
tgammaf=func
tgammal=func
time=func
tmpfile=func
tmpnam=func
tolower=func
toupper=func
towlower=func
towupper=func
trunc=func
truncf=func
truncl=func
umask=func
unlink=func
usleep=func
wait=func
warn=func
warnx=func
wcslen=func
wctob=func
wctrans=func
wctype=func
wprintf=func
wscanf=func
xmalloc=func

/core/analysis/cc
amd64=cc
amd64syscall=cc
cc.amd64.arg0=rdi
cc.amd64.arg1=rsi
cc.amd64.arg10=xmm4
cc.amd64.arg2=rdx
cc.amd64.arg3=rcx
cc.amd64.arg4=r8
cc.amd64.arg5=r9
cc.amd64.arg6=xmm0
cc.amd64.arg7=xmm1
cc.amd64.arg8=xmm2
cc.amd64.arg9=xmm3
cc.amd64.ret=rax
cc.amd64syscall.arg0=rdi
cc.amd64syscall.arg1=rsi
cc.amd64syscall.arg2=rdx
cc.amd64syscall.arg3=r10
cc.amd64syscall.arg4=r8
cc.amd64syscall.arg5=r9
cc.amd64syscall.ret=rax
cc.ms.arg0=rcx
cc.ms.arg1=rdx
cc.ms.arg2=r8
cc.ms.arg3=r9
cc.ms.argn=stack
cc.ms.ret=rax
cc.reg.arg0=rdi
cc.reg.arg1=rsi
cc.reg.arg2=rdx
cc.reg.arg3=rcx
cc.reg.ret=rdi
cc.swift.arg0=rdi
cc.swift.arg1=rsi
cc.swift.arg10=xmm4
cc.swift.arg2=rdx
cc.swift.arg3=rcx
cc.swift.arg4=r8
cc.swift.arg5=r9
cc.swift.arg6=xmm0
cc.swift.arg7=xmm1
cc.swift.arg8=xmm2
cc.swift.arg9=xmm3
cc.swift.error=r12
cc.swift.ret=rax
cc.swift.self=r13
default.cc=amd64
ms=cc
reg=cc
swift=cc

/core/analysis/classes

/core/analysis/classes/attrs

/core/analysis/functions
0x401000={"name":"sym._init","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":8,"bp_frame":true,"bbs":[4198400,4198420,4198422]}
0x401030={"name":"sym.imp.__errno_location","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198448]}
0x401040={"name":"sym.imp.__isoc99_fscanf","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198464]}
0x401050={"name":"sym.imp.sigaction","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198480]}
0x401060={"name":"sym.imp.fread","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198496]}
0x401070={"name":"sym.imp.setsockopt","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198512]}
0x401080={"name":"sym.imp.write","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198528]}
0x401090={"name":"sym.imp.fclose","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198544]}
0x4010a0={"name":"sym.imp.shutdown","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198560]}
0x4010b0={"name":"sym.imp.strlen","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198576]}
0x4010c0={"name":"sym.imp.__stack_chk_fail","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"noreturn":true,"bbs":[4198592]}
0x4010d0={"name":"sym.imp.__assert_fail","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198608]}
0x4010e0={"name":"sym.imp.fputs","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198624]}
0x4010f0={"name":"sym.imp.close","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198640]}
0x401100={"name":"sym.imp.fgets","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198656]}
0x401110={"name":"sym.imp.fprintf","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198672]}
0x401120={"name":"sym.imp.ftell","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198688]}
0x401130={"name":"sym.imp.sigfillset","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198704]}
0x401140={"name":"sym.imp.fflush","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198720]}
0x401150={"name":"sym.imp.fseek","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198736]}
0x401160={"name":"sym.imp.fdopen","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198752]}
0x401170={"name":"sym.imp.setvbuf","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198768]}
0x401180={"name":"sym.imp.open","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198784]}
0x401190={"name":"sym.imp.fopen","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198800]}
0x4011a0={"name":"sym.imp.perror","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198816]}
0x4011b0={"name":"sym.imp.atoi","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198832]}
0x4011c0={"name":"sym.imp.exit","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"noreturn":true,"bbs":[4198848]}
0x4011d0={"name":"sym.imp.__fprintf_chk","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198864]}
0x4011e0={"name":"sym.imp.strerror","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"bbs":[4198880]}
0x4011f0={"name":"entry0","bits":64,"type":1,"cc":"amd64","stack":8,"maxstack":8,"ninstr":12,"bp_frame":true,"bbs":[4198896],"vars":[{"name":"rtld_fini","type":"void *","reg":"rdx","accs":[{"off":6,"type":"r","reg":"rdx"}]}]}
0x401220={"name":"sym._dl_relocate_static_pie","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":0,"ninstr":2,"bp_frame":true,"pure":true,"bbs":[4198944]}
0x401230={"name":"sym.deregister_tm_clones","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":9,"bp_frame":true,"bbs":[4198960,4198973,4198983,4198992]}
0x401260={"name":"sym.register_tm_clones","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":14,"bp_frame":true,"bbs":[4199008,4199039,4199049,4199056]}
0x4012a0={"name":"sym.__do_global_dtors_aux","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":10,"bp_frame":true,"bp_off":8,"bbs":[4199072,4199085,4199104]}
0x4012d0={"name":"entry.init0","bits":64,"type":1,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4199120]}
0x4012d6={"name":"sym.handle_client_wrapper","bits":64,"type":4,"cc":"amd64","stack":40,"maxstack":40,"ninstr":66,"bp_frame":true,"bp_off":8,"noreturn":true,"bbs":[4199126,4199199,4199223,4199254,4199280,4199296,4199312,4199322,4199337,4199349,4199361,4199373,4199385],"vars":[{"name":"var_20h","type":"int64_t","stack":-32,"accs":[{"off":24,"type":"w","sp":-24,"reg":"rbp"}]},{"name":"optval","type":"void *","stack":-40,"accs":[{"off":30,"type":"w","sp":-32,"reg":"rbp"},{"off":50,"type":"r","sp":-32,"reg":"rbp"}]},{"name":"arg1","type":"int64_t","reg":"rdi","accs":[{"off":13,"type":"r","reg":"rdi"}]}]}
0x4013e5={"name":"main","bits":64,"type":4,"cc":"amd64","stack":24,"maxstack":24,"ninstr":15,"bp_frame":true,"bp_off":8,"noreturn":true,"bbs":[4199397,4199418,4199434],"vars":[{"name":"argv","type":"char **","reg":"rsi","accs":[{"off":13,"type":"r","reg":"rsi"}]},{"name":"argc","type":"unsigned long","reg":"rdi","accs":[{"off":16,"type":"r","reg":"rdi"}]}]}
0x401416={"name":"sym.frequency_analysis","bits":64,"type":4,"cc":"amd64","stack":1064,"maxstack":1064,"ninstr":45,"bp_frame":true,"bp_off":8,"bbs":[4199446,4199499,4199510,4199530,4199567,4199611,4199626,4199632],"vars":[{"name":"var_20h","type":"int64_t","stack":-32,"accs":[{"off":28,"type":"w","sp":-24,"reg":"rbp"},{"off":165,"type":"r","sp":-24,"reg":"rbp"}]},{"name":"var_428h","type":"int *","stack":-1064,"accs":[{"off":34,"type":"r","sp":-1056,"reg":"rbp"},{"off":121,"type":"r","sp":-1056,"reg":"rbp"}]},{"name":"canary","type":"int64_t","stack":-16,"accs":[{"off":180,"type":"r","sp":-8,"reg":"rbp"}]},{"name":"arg1","type":"int64_t","reg":"rdi","accs":[{"off":16,"type":"r","reg":"rdi"}]},{"name":"arg2","type":"int *","reg":"rsi","accs":[{"off":49,"type":"r","reg":"rsi"},{"off":56,"type":"r","reg":"rsi"}]}]}
0x4014d5={"name":"sym.count_character_frequencies_once","bits":64,"type":4,"cc":"amd64","stack":1080,"maxstack":1080,"ninstr":57,"bp_frame":true,"bp_off":8,"bbs":[4199637,4199741,4199750,4199756,4199775,4199781,4199793,4199851,4199861,4199906],"vars":[{"name":"var_20h","type":"int64_t","stack":-32,"accs":[{"off":28,"type":"w","sp":-24,"reg":"rbp"},{"off":119,"type":"r","sp":-24,"reg":"rbp"}]},{"name":"data_buffer","type":"int64_t","stack":-1069,"accs":[{"off":63,"type":"r","sp":-1061,"reg":"rbp"}]},{"name":"canary","type":"int *","stack":-1068,"accs":[{"off":70,"type":"r","sp":-1060,"reg":"rbp"},{"off":104,"type":"r","sp":-1060,"reg":"rbp"},{"off":178,"type":"r","sp":-1060,"reg":"rbp"},{"off":246,"type":"r","sp":-1060,"reg":"rbp"}]},{"name":"var_10h","type":"int64_t","stack":-16,"accs":[{"off":138,"type":"r","sp":-8,"reg":"rbp"}]},{"name":"arg1","type":"int64_t","reg":"rdi","accs":[{"off":16,"type":"r","reg":"rdi"}]},{"name":"va_args","type":"void *","reg":"rdx"}]}
0x4015e7={"name":"sym.handle_client","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":24,"ninstr":18,"bp_frame":true,"bp_off":8,"bbs":[4199911,4199945,4199960,4199975,4199977],"vars":[{"name":"var_10h","type":"int64_t","stack":-16,"accs":[{"off":21,"type":"w","sp":-8,"reg":"rbp"},{"off":49,"type":"r","sp":-8,"reg":"rbp"}]},{"name":"var_14h","type":"uint64_t","stack":-20,"accs":[{"off":27,"type":"w","sp":-12,"reg":"rbp"},{"off":34,"type":"r","sp":-12,"reg":"rbp"},{"off":43,"type":"r","sp":-12,"reg":"rbp"}]},{"name":"arg2","type":"int64_t","reg":"rsi"}]}
0x40162e={"name":"sym.die","bits":64,"type":4,"cc":"amd64","stack":8,"maxstack":8,"ninstr":13,"bp_frame":true,"bp_off":8,"noreturn":true,"bbs":[4199982],"vars":[{"name":"s","type":"const char *","reg":"rdi"}]}
0x401667={"name":"sym.get_file_size","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":240,"ninstr":44,"bp_frame":true,"bp_off":48,"bbs":[4200039,4200070,4200095,4200112,4200132,4200146,4200156,4200166,4200176],"vars":[{"name":"var_58h","type":"int64_t","stack":-88,"accs":[{"off":184,"type":"w","sp":-40,"reg":"rbp"}]},{"name":"var_e8h","type":"int64_t","stack":-232,"accs":[{"off":190,"type":"r","sp":-184,"reg":"rbp"}]},{"name":"arg1","type":"int64_t","reg":"rdi","accs":[{"off":17,"type":"r","reg":"rdi"}]}]}
0x4016fa={"name":"sym.set_signal_handler","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":200,"ninstr":39,"bp_frame":true,"bp_off":8,"bbs":[4200186,4200246,4200281,4200296,4200310,4200320,4200330],"vars":[{"name":"var_30h","type":"int64_t","stack":-48,"accs":[{"off":37,"type":"w","sp":-40,"reg":"rbp"},{"off":95,"type":"r","sp":-40,"reg":"rbp"}]},{"name":"var_c0h","type":"int64_t","stack":-192,"accs":[{"off":43,"type":"r","sp":-184,"reg":"rbp"}]},{"name":"act","type":"struct sigaction *","stack":-200,"accs":[{"off":60,"type":"w","sp":-192,"reg":"rbp"},{"off":76,"type":"r","sp":-192,"reg":"rbp"}]},{"name":"var_40h","type":"int64_t","stack":-64,"accs":[{"off":67,"type":"w","sp":-56,"reg":"rbp"}]},{"name":"arg1","type":"int64_t","reg":"rdi","accs":[{"off":20,"type":"r","reg":"rdi"}]},{"name":"arg2","type":"int64_t","reg":"rsi","accs":[{"off":22,"type":"r","reg":"rsi"}]},{"name":"arg3","type":"int64_t","reg":"rdx","accs":[{"off":25,"type":"r","reg":"rdx"}]}]}
0x40178f={"name":"sym.immediate_write_to_file","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":1120,"ninstr":137,"bp_frame":true,"bp_off":48,"bbs":[4200335,4200375,4200406,4200419,4200430,4200439,4200494,4200549],"vars":[{"name":"arg1","type":"int64_t","reg":"rdi","accs":[{"off":15,"type":"r","reg":"rdi"}]},{"name":"arg2","type":"int64_t","reg":"rsi","accs":[{"off":18,"type":"r","reg":"rsi"}]}]}
0x40188d={"name":"sym.print_flag","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":0,"bp_frame":true,"bbs":[4200589,4200649,4200672,4200700,4200711,4200746,4200748,4200782,4200798,4200813,4200838,4200863],"vars":[{"name":"var_58h","type":"int64_t","stack":-40,"accs":[{"off":27,"type":"w","sp":-40,"reg":"rbp"},{"off":178,"type":"r","sp":-40,"reg":"rbp"}]},{"name":"ptr","type":"const char *","stack":-1072,"accs":[{"off":83,"type":"r","sp":-1072,"reg":"rbp"},{"off":128,"type":"r","sp":-1072,"reg":"rbp"},{"off":166,"type":"r","sp":-1072,"reg":"rbp"}]}]}
0x4019a4={"name":"sym._fini","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":4,"bp_frame":true,"pure":true,"bbs":[4200868]}

/core/analysis/hints

/core/analysis/imports

/core/analysis/meta
0x400318=[{"type":"C","str":"[00] -r-- section size 28 named .interp"}]
0x400338=[{"type":"C","str":"[01] -r-- section size 32 named .note.gnu.property"}]
0x400358=[{"type":"C","str":"[02] -r-- section size 36 named .note.gnu.build-id"}]
0x40037c=[{"type":"C","str":"[03] -r-- section size 32 named .note.ABI-tag"}]
0x4003a0=[{"type":"C","str":"[04] -r-- section size 36 named .gnu.hash"}]
0x4003c8=[{"type":"C","str":"[05] -r-- section size 768 named .dynsym"}]
0x4006c8=[{"type":"C","str":"[06] -r-- section size 337 named .dynstr"}]
0x40081a=[{"type":"C","str":"[07] -r-- section size 64 named .gnu.version"}]
0x400860=[{"type":"C","str":"[08] -r-- section size 96 named .gnu.version_r"}]
0x4008c0=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[09] -r-- section size 72 named .rela.dyn"}]
0x4008c8=[{"size":8,"type":"d","str":"8"}]
0x4008d0=[{"size":8,"type":"d","str":"8"}]
0x4008d8=[{"size":8,"type":"d","str":"8"}]
0x4008e0=[{"size":8,"type":"d","str":"8"}]
0x4008e8=[{"size":8,"type":"d","str":"8"}]
0x4008f0=[{"size":8,"type":"d","str":"8"}]
0x4008f8=[{"size":8,"type":"d","str":"8"}]
0x400900=[{"size":8,"type":"d","str":"8"}]
0x400908=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[10] -r-- section size 672 named .rela.plt"}]
0x400910=[{"size":8,"type":"d","str":"8"}]
0x400918=[{"size":8,"type":"d","str":"8"}]
0x400920=[{"size":8,"type":"d","str":"8"}]
0x400928=[{"size":8,"type":"d","str":"8"}]
0x400930=[{"size":8,"type":"d","str":"8"}]
0x400938=[{"size":8,"type":"d","str":"8"}]
0x400940=[{"size":8,"type":"d","str":"8"}]
0x400948=[{"size":8,"type":"d","str":"8"}]
0x400950=[{"size":8,"type":"d","str":"8"}]
0x400958=[{"size":8,"type":"d","str":"8"}]
0x400960=[{"size":8,"type":"d","str":"8"}]
0x400968=[{"size":8,"type":"d","str":"8"}]
0x400970=[{"size":8,"type":"d","str":"8"}]
0x400978=[{"size":8,"type":"d","str":"8"}]
0x400980=[{"size":8,"type":"d","str":"8"}]
0x400988=[{"size":8,"type":"d","str":"8"}]
0x400990=[{"size":8,"type":"d","str":"8"}]
0x400998=[{"size":8,"type":"d","str":"8"}]
0x4009a0=[{"size":8,"type":"d","str":"8"}]
0x4009a8=[{"size":8,"type":"d","str":"8"}]
0x4009b0=[{"size":8,"type":"d","str":"8"}]
0x4009b8=[{"size":8,"type":"d","str":"8"}]
0x4009c0=[{"size":8,"type":"d","str":"8"}]
0x4009c8=[{"size":8,"type":"d","str":"8"}]
0x4009d0=[{"size":8,"type":"d","str":"8"}]
0x4009d8=[{"size":8,"type":"d","str":"8"}]
0x4009e0=[{"size":8,"type":"d","str":"8"}]
0x4009e8=[{"size":8,"type":"d","str":"8"}]
0x4009f0=[{"size":8,"type":"d","str":"8"}]
0x4009f8=[{"size":8,"type":"d","str":"8"}]
0x400a00=[{"size":8,"type":"d","str":"8"}]
0x400a08=[{"size":8,"type":"d","str":"8"}]
0x400a10=[{"size":8,"type":"d","str":"8"}]
0x400a18=[{"size":8,"type":"d","str":"8"}]
0x400a20=[{"size":8,"type":"d","str":"8"}]
0x400a28=[{"size":8,"type":"d","str":"8"}]
0x400a30=[{"size":8,"type":"d","str":"8"}]
0x400a38=[{"size":8,"type":"d","str":"8"}]
0x400a40=[{"size":8,"type":"d","str":"8"}]
0x400a48=[{"size":8,"type":"d","str":"8"}]
0x400a50=[{"size":8,"type":"d","str":"8"}]
0x400a58=[{"size":8,"type":"d","str":"8"}]
0x400a60=[{"size":8,"type":"d","str":"8"}]
0x400a68=[{"size":8,"type":"d","str":"8"}]
0x400a70=[{"size":8,"type":"d","str":"8"}]
0x400a78=[{"size":8,"type":"d","str":"8"}]
0x400a80=[{"size":8,"type":"d","str":"8"}]
0x400a88=[{"size":8,"type":"d","str":"8"}]
0x400a90=[{"size":8,"type":"d","str":"8"}]
0x400a98=[{"size":8,"type":"d","str":"8"}]
0x400aa0=[{"size":8,"type":"d","str":"8"}]
0x400aa8=[{"size":8,"type":"d","str":"8"}]
0x400ab0=[{"size":8,"type":"d","str":"8"}]
0x400ab8=[{"size":8,"type":"d","str":"8"}]
0x400ac0=[{"size":8,"type":"d","str":"8"}]
0x400ac8=[{"size":8,"type":"d","str":"8"}]
0x400ad0=[{"size":8,"type":"d","str":"8"}]
0x400ad8=[{"size":8,"type":"d","str":"8"}]
0x400ae0=[{"size":8,"type":"d","str":"8"}]
0x400ae8=[{"size":8,"type":"d","str":"8"}]
0x400af0=[{"size":8,"type":"d","str":"8"}]
0x400af8=[{"size":8,"type":"d","str":"8"}]
0x400b00=[{"size":8,"type":"d","str":"8"}]
0x400b08=[{"size":8,"type":"d","str":"8"}]
0x400b10=[{"size":8,"type":"d","str":"8"}]
0x400b18=[{"size":8,"type":"d","str":"8"}]
0x400b20=[{"size":8,"type":"d","str":"8"}]
0x400b28=[{"size":8,"type":"d","str":"8"}]
0x400b30=[{"size":8,"type":"d","str":"8"}]
0x400b38=[{"size":8,"type":"d","str":"8"}]
0x400b40=[{"size":8,"type":"d","str":"8"}]
0x400b48=[{"size":8,"type":"d","str":"8"}]
0x400b50=[{"size":8,"type":"d","str":"8"}]
0x400b58=[{"size":8,"type":"d","str":"8"}]
0x400b60=[{"size":8,"type":"d","str":"8"}]
0x400b68=[{"size":8,"type":"d","str":"8"}]
0x400b70=[{"size":8,"type":"d","str":"8"}]
0x400b78=[{"size":8,"type":"d","str":"8"}]
0x400b80=[{"size":8,"type":"d","str":"8"}]
0x400b88=[{"size":8,"type":"d","str":"8"}]
0x400b90=[{"size":8,"type":"d","str":"8"}]
0x400b98=[{"size":8,"type":"d","str":"8"}]
0x400ba0=[{"size":8,"type":"d","str":"8"}]
0x401000=[{"type":"C","str":"[11] -r-x section size 27 named .init"}]
0x401020=[{"type":"C","str":"[12] -r-x section size 464 named .plt"}]
0x4011f0=[{"type":"C","str":"[13] -r-x section size 1972 named .text"}]
0x4011f6=[{"type":"t","subtype":56,"str":"void *rtld_fini"}]
0x4011f9=[{"type":"t","subtype":56,"str":"int argc"}]
0x4011fa=[{"type":"t","subtype":56,"str":"char **ubp_av"}]
0x401203=[{"type":"t","subtype":56,"str":"void *fini"}]
0x401206=[{"type":"t","subtype":56,"str":"void *init"}]
0x401208=[{"type":"t","subtype":56,"str":"void *main"}]
0x4012e3=[{"type":"t","subtype":56,"str":"arg1"}]
0x401302=[{"type":"t","subtype":56,"str":"socklen_t optlen"}]
0x401308=[{"type":"t","subtype":56,"str":"void *optval"}]
0x40130c=[{"type":"t","subtype":56,"str":"int optname"}]
0x401311=[{"type":"t","subtype":56,"str":"int level"}]
0x401337=[{"type":"t","subtype":56,"str":"size_t size"}]
0x40133c=[{"type":"t","subtype":56,"str":"int mode"}]
0x401341=[{"type":"t","subtype":56,"str":"char *buf"}]
0x401346=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x401360=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x401380=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x401390=[{"type":"t","subtype":56,"str":"int status"}]
0x40139a=[{"type":"t","subtype":56,"str":"const char *s"}]
0x4013a9=[{"type":"t","subtype":56,"str":"const char *s"}]
0x4013b5=[{"type":"t","subtype":56,"str":"const char *s"}]
0x4013c1=[{"type":"t","subtype":56,"str":"const char *s"}]
0x4013cd=[{"type":"t","subtype":56,"str":"const char *s"}]
0x4013d9=[{"type":"t","subtype":56,"str":"const char *s"}]
0x4013f2=[{"type":"t","subtype":56,"str":"argv"}]
0x4013f5=[{"type":"t","subtype":56,"str":"argc"}]
0x4013fa=[{"type":"t","subtype":56,"str":"const char *str"}]
0x401403=[{"type":"t","subtype":56,"str":"int64_t arg1"}]
0x40140a=[{"type":"t","subtype":56,"str":"const char *s"}]
0x401426=[{"type":"t","subtype":56,"str":"arg1"}]
0x401447=[{"type":"t","subtype":56,"str":"arg2"}]
0x40144e=[{"type":"t","subtype":56,"str":"arg2"}]
0x401474=[{"type":"t","subtype":56,"str":"const char *format"}]
0x401479=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x401498=[{"type":"t","subtype":56,"str":"const char *format"}]
0x40149d=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x4014e5=[{"type":"t","subtype":56,"str":"arg1"}]
0x4014f7=[{"type":"t","subtype":56,"str":"const char *format"}]
0x4014fc=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x401508=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x401522=[{"type":"t","subtype":56,"str":"const char *format"}]
0x401527=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x401565=[{"type":"t","subtype":56,"str":"const char *s"}]
0x401571=[{"type":"t","subtype":56,"str":"const char *format"}]
0x401576=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x401597=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x40159e=[{"type":"t","subtype":56,"str":"char *s"}]
0x4015ab=[{"type":"t","subtype":56,"str":"const char *s"}]
0x4015b5=[{"type":"t","subtype":56,"str":"const char *format"}]
0x4015ba=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x4015cb=[{"type":"t","subtype":56,"str":"int64_t arg2"}]
0x4015d1=[{"type":"t","subtype":56,"str":"int64_t arg1"}]
0x401609=[{"type":"t","subtype":56,"str":"int64_t arg1"}]
0x40165d=[{"type":"t","subtype":56,"str":"int status"}]
0x401678=[{"type":"t","subtype":56,"str":"arg1"}]
0x401689=[{"type":"t","subtype":56,"str":"int whence"}]
0x40168e=[{"type":"t","subtype":56,"str":"long offset"}]
0x401693=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x40169f=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x4016b0=[{"type":"t","subtype":56,"str":"int whence"}]
0x4016b5=[{"type":"t","subtype":56,"str":"long offset"}]
0x4016b8=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x4016d2=[{"type":"t","subtype":56,"str":"const char *s"}]
0x4016dc=[{"type":"t","subtype":56,"str":"const char *s"}]
0x4016e6=[{"type":"t","subtype":56,"str":"const char *s"}]
0x4016f0=[{"type":"t","subtype":56,"str":"const char *s"}]
0x40170e=[{"type":"t","subtype":56,"str":"arg1"}]
0x401710=[{"type":"t","subtype":56,"str":"arg2"}]
0x401713=[{"type":"t","subtype":56,"str":"arg3"}]
0x401741=[{"type":"t","subtype":56,"str":"struct sigaction *oldact"}]
0x401746=[{"type":"t","subtype":56,"str":"struct sigaction *act"}]
0x40174d=[{"type":"t","subtype":56,"str":"int signum"}]
0x401776=[{"type":"t","subtype":56,"str":"const char *s"}]
0x401780=[{"type":"t","subtype":56,"str":"const char *s"}]
0x40179e=[{"type":"t","subtype":56,"str":"arg1"}]
0x4017a1=[{"type":"t","subtype":56,"str":"arg2"}]
0x4017a4=[{"type":"t","subtype":56,"str":"int oflag"}]
0x4017b9=[{"type":"t","subtype":56,"str":"const char *s"}]
0x4017c1=[{"type":"t","subtype":56,"str":"size_t nbytes"}]
0x4017c4=[{"type":"t","subtype":56,"str":"const char *ptr"}]
0x4017c7=[{"type":"t","subtype":56,"str":"int fd"}]
0x4017d6=[{"type":"t","subtype":56,"str":"const char *s"}]
0x4017e3=[{"type":"t","subtype":56,"str":"int fildes"}]
0x4017fc=[{"type":"t","subtype":56,"str":"int errnum"}]
0x401824=[{"type":"t","subtype":56,"str":"const char *s"}]
0x401833=[{"type":"t","subtype":56,"str":"int errnum"}]
0x40185b=[{"type":"t","subtype":56,"str":"const char *s"}]
0x401883=[{"type":"t","subtype":56,"str":"const char *s"}]
0x4018ae=[{"type":"t","subtype":56,"str":"const char *mode"}]
0x4018b3=[{"type":"t","subtype":56,"str":"const char *filename"}]
0x4018c9=[{"type":"t","subtype":56,"str":"int64_t arg1"}]
0x40190a=[{"type":"t","subtype":56,"str":"size_t nmemb"}]
0x40190d=[{"type":"t","subtype":56,"str":"void *ptr"}]
0x401915=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x401918=[{"type":"t","subtype":56,"str":"size_t size"}]
0x40192c=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x401933=[{"type":"t","subtype":56,"str":"const char *s"}]
0x40195e=[{"type":"t","subtype":56,"str":"const char *s"}]
0x40196d=[{"type":"t","subtype":56,"str":"const char *function"}]
0x401972=[{"type":"t","subtype":56,"str":"unsigned int line"}]
0x401977=[{"type":"t","subtype":56,"str":"const char *file"}]
0x40197c=[{"type":"t","subtype":56,"str":"const char *assertion"}]
0x401986=[{"type":"t","subtype":56,"str":"const char *function"}]
0x40198b=[{"type":"t","subtype":56,"str":"unsigned int line"}]
0x401990=[{"type":"t","subtype":56,"str":"const char *file"}]
0x401995=[{"type":"t","subtype":56,"str":"const char *assertion"}]
0x4019a4=[{"type":"C","str":"[14] -r-x section size 13 named .fini"}]
0x402000=[{"type":"C","str":"[15] -r-- section size 971 named .rodata"}]
0x402004=[{"size":18,"type":"s","subtype":98,"str":"setsockopt failed"}]
0x402019=[{"size":15,"type":"s","subtype":98,"str":"setvbuf failed"}]
0x402028=[{"size":18,"type":"s","subtype":98,"str":"shutdown() failed"}]
0x40203a=[{"size":30,"type":"s","subtype":98,"str":"could not close client stream"}]
0x402058=[{"size":18,"type":"s","subtype":98,"str":"too few arguments"}]
0x402070=[{"size":32,"type":"s","subtype":98,"str":"could not open socket as stream"}]
0x402090=[{"size":31,"type":"s","subtype":98,"str":"Flushing output buffers failed"}]
0x4020af=[{"size":6,"type":"s","subtype":98,"str":"Count"}]
0x4020b5=[{"size":5,"type":"s","subtype":98,"str":"Code"}]
0x4020ba=[{"size":11,"type":"s","subtype":98,"str":"%10s %10s\\n"}]
0x4020c5=[{"size":11,"type":"s","subtype":98,"str":"%10d %10d\\n"}]
0x4020d0=[{"size":5,"type":"s","subtype":98,"str":"%d%c"}]
0x4020d5=[{"size":15,"type":"s","subtype":98,"str":"Error on scanf"}]
0x4020e4=[{"size":21,"type":"s","subtype":98,"str":"reading input failed"}]
0x402100=[{"size":45,"type":"s","subtype":98,"str":"How much data do you want to have analyzed? "}]
0x402130=[{"size":57,"type":"s","subtype":98,"str":"Please enter your data here and terminate it with ENTER\\n"}]
0x402170=[{"size":34,"type":"s","subtype":98,"str":"Here is your frequency analysis:\\n"}]
0x402192=[{"size":27,"type":"s","subtype":98,"str":"Error number (errno): %d.\\n"}]
0x4021ad=[{"size":28,"type":"s","subtype":98,"str":"could not get file position"}]
0x4021c9=[{"size":30,"type":"s","subtype":98,"str":"could not seek to end of file"}]
0x4021e7=[{"size":24,"type":"s","subtype":98,"str":"failed to open \\"%s\\": %s"}]
0x4021ff=[{"size":28,"type":"s","subtype":98,"str":"failed to write to \\"%s\\": %s"}]
0x40221b=[{"size":21,"type":"s","subtype":98,"str":"failed to close \\"%s\\""}]
0x402230=[{"size":35,"type":"s","subtype":98,"str":"could not get end of file position"}]
0x402258=[{"size":69,"type":"s","subtype":98,"str":"could not seek back to old file position while determining file size"}]
0x4022a0=[{"size":32,"type":"s","subtype":98,"str":"could not initialize signal set"}]
0x4022c0=[{"size":32,"type":"s","subtype":98,"str":"could not set up signal handler"}]
0x4022e2=[{"size":9,"type":"s","subtype":98,"str":"flag.txt"}]
0x4022eb=[{"size":19,"type":"s","subtype":98,"str":"size < sizeof(buf)"}]
0x4022fe=[{"size":19,"type":"s","subtype":98,"str":"bytes_read == size"}]
0x402318=[{"size":118,"type":"s","subtype":98,"str":"could not open flag file. Sorry! You actually did it!\\n This is just a problem with giving you your deserved solution."}]
0x402390=[{"size":43,"type":"s","subtype":98,"str":"../../shared/plaintext_server/print_flag.c"}]
0x4023c0=[{"size":11,"type":"s","subtype":98,"str":"print_flag"}]
0x4023cc=[{"type":"C","str":"[16] -r-- section size 116 named .eh_frame_hdr"}]
0x402440=[{"type":"C","str":"[17] -r-- section size 464 named .eh_frame"}]
0x403cf8=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[18] -rw- section size 8 named .init_array"}]
0x403d00=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[19] -rw- section size 8 named .fini_array"}]
0x403d08=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[20] -rw- section size 496 named .dynamic"}]
0x403d10=[{"size":8,"type":"d","str":"8"}]
0x403d18=[{"size":8,"type":"d","str":"8"}]
0x403d20=[{"size":8,"type":"d","str":"8"}]
0x403d28=[{"size":8,"type":"d","str":"8"}]
0x403d30=[{"size":8,"type":"d","str":"8"}]
0x403d38=[{"size":8,"type":"d","str":"8"}]
0x403d40=[{"size":8,"type":"d","str":"8"}]
0x403d48=[{"size":8,"type":"d","str":"8"}]
0x403d50=[{"size":8,"type":"d","str":"8"}]
0x403d58=[{"size":8,"type":"d","str":"8"}]
0x403d60=[{"size":8,"type":"d","str":"8"}]
0x403d68=[{"size":8,"type":"d","str":"8"}]
0x403d70=[{"size":8,"type":"d","str":"8"}]
0x403d78=[{"size":8,"type":"d","str":"8"}]
0x403d80=[{"size":8,"type":"d","str":"8"}]
0x403d88=[{"size":8,"type":"d","str":"8"}]
0x403d90=[{"size":8,"type":"d","str":"8"}]
0x403d98=[{"size":8,"type":"d","str":"8"}]
0x403da0=[{"size":8,"type":"d","str":"8"}]
0x403da8=[{"size":8,"type":"d","str":"8"}]
0x403db0=[{"size":8,"type":"d","str":"8"}]
0x403db8=[{"size":8,"type":"d","str":"8"}]
0x403dc0=[{"size":8,"type":"d","str":"8"}]
0x403dc8=[{"size":8,"type":"d","str":"8"}]
0x403dd0=[{"size":8,"type":"d","str":"8"}]
0x403dd8=[{"size":8,"type":"d","str":"8"}]
0x403de0=[{"size":8,"type":"d","str":"8"}]
0x403de8=[{"size":8,"type":"d","str":"8"}]
0x403df0=[{"size":8,"type":"d","str":"8"}]
0x403df8=[{"size":8,"type":"d","str":"8"}]
0x403e00=[{"size":8,"type":"d","str":"8"}]
0x403e08=[{"size":8,"type":"d","str":"8"}]
0x403e10=[{"size":8,"type":"d","str":"8"}]
0x403e18=[{"size":8,"type":"d","str":"8"}]
0x403e20=[{"size":8,"type":"d","str":"8"}]
0x403e28=[{"size":8,"type":"d","str":"8"}]
0x403e30=[{"size":8,"type":"d","str":"8"}]
0x403e38=[{"size":8,"type":"d","str":"8"}]
0x403e40=[{"size":8,"type":"d","str":"8"}]
0x403e48=[{"size":8,"type":"d","str":"8"}]
0x403e50=[{"size":8,"type":"d","str":"8"}]
0x403e58=[{"size":8,"type":"d","str":"8"}]
0x403e60=[{"size":8,"type":"d","str":"8"}]
0x403e68=[{"size":8,"type":"d","str":"8"}]
0x403e70=[{"size":8,"type":"d","str":"8"}]
0x403e78=[{"size":8,"type":"d","str":"8"}]
0x403e80=[{"size":8,"type":"d","str":"8"}]
0x403e88=[{"size":8,"type":"d","str":"8"}]
0x403e90=[{"size":8,"type":"d","str":"8"}]
0x403e98=[{"size":8,"type":"d","str":"8"}]
0x403ea0=[{"size":8,"type":"d","str":"8"}]
0x403ea8=[{"size":8,"type":"d","str":"8"}]
0x403eb0=[{"size":8,"type":"d","str":"8"}]
0x403eb8=[{"size":8,"type":"d","str":"8"}]
0x403ec0=[{"size":8,"type":"d","str":"8"}]
0x403ec8=[{"size":8,"type":"d","str":"8"}]
0x403ed0=[{"size":8,"type":"d","str":"8"}]
0x403ed8=[{"size":8,"type":"d","str":"8"}]
0x403ee0=[{"size":8,"type":"d","str":"8"}]
0x403ee8=[{"size":8,"type":"d","str":"8"}]
0x403ef0=[{"size":8,"type":"d","str":"8"}]
0x403ef8=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[21] -rw- section size 264 named .got"}]
0x403f00=[{"size":8,"type":"d","str":"8"}]
0x403f08=[{"size":8,"type":"d","str":"8"}]
0x403f10=[{"size":8,"type":"d"}]
0x403f18=[{"size":8,"type":"d"}]
0x403f20=[{"size":8,"type":"d"}]
0x403f28=[{"size":8,"type":"d"}]
0x403f30=[{"size":8,"type":"d"}]
0x403f38=[{"size":8,"type":"d"}]
0x403f40=[{"size":8,"type":"d"}]
0x403f48=[{"size":8,"type":"d"}]
0x403f50=[{"size":8,"type":"d"}]
0x403f58=[{"size":8,"type":"d"}]
0x403f60=[{"size":8,"type":"d"}]
0x403f68=[{"size":8,"type":"d"}]
0x403f70=[{"size":8,"type":"d"}]
0x403f78=[{"size":8,"type":"d"}]
0x403f80=[{"size":8,"type":"d"}]
0x403f88=[{"size":8,"type":"d"}]
0x403f90=[{"size":8,"type":"d"}]
0x403f98=[{"size":8,"type":"d"}]
0x403fa0=[{"size":8,"type":"d"}]
0x403fa8=[{"size":8,"type":"d"}]
0x403fb0=[{"size":8,"type":"d"}]
0x403fb8=[{"size":8,"type":"d"}]
0x403fc0=[{"size":8,"type":"d"}]
0x403fc8=[{"size":8,"type":"d"}]
0x403fd0=[{"size":8,"type":"d"}]
0x403fd8=[{"size":8,"type":"d"}]
0x403fe0=[{"size":8,"type":"d"}]
0x403fe8=[{"size":8,"type":"d"}]
0x403ff0=[{"size":8,"type":"d"}]
0x403ff8=[{"size":8,"type":"d"}]
0x404000=[{"type":"C","str":"[22] -rw- section size 16 named .data"}]
0x404020=[{"type":"C","str":"[23] -rw- section size 24 named .bss"},{"size":8,"type":"d"}]

/core/analysis/meta/spaces
name=CS
spacestack=["*"]

/core/analysis/meta/spaces/spaces
bin=s

/core/analysis/noreturn
addr.4012d6.noreturn=true
addr.4013e5.noreturn=true
addr.40162e.noreturn=true

/core/analysis/typelinks

/core/analysis/types
FILE=typedef
__div_t=struct
__idtype=enum
__imaxdiv_t=struct
__ldiv_t=struct
__lldiv_t=struct
__siginfo_t=struct
__sigset_t=struct
_fd_set=struct
access_perm=enum
bool=type
char=type
char *=type
char16_t=type
char32_t=type
char8_t=type
clock_t=typedef
div_t=typedef
double=type
enum.__idtype=P_ALL,P_GID,P_PGID
enum.__idtype.0x0=P_ALL
enum.__idtype.0x1=P_GID
enum.__idtype.0x2=P_PGID
enum.__idtype.P_ALL=0x0
enum.__idtype.P_GID=0x1
enum.__idtype.P_PGID=0x2
enum.access_perm=F_OK,X_OK,W_OK,R_OK,WX_OK,RX_OK,RW_OK,RWX_OK
enum.access_perm.0x0=F_OK
enum.access_perm.0x1=X_OK
enum.access_perm.0x2=W_OK
enum.access_perm.0x3=WX_OK
enum.access_perm.0x4=R_OK
enum.access_perm.0x5=RX_OK
enum.access_perm.0x6=RW_OK
enum.access_perm.0x7=RWX_OK
enum.access_perm.F_OK=0x0
enum.access_perm.RWX_OK=0x7
enum.access_perm.RW_OK=0x6
enum.access_perm.RX_OK=0x5
enum.access_perm.R_OK=0x4
enum.access_perm.WX_OK=0x3
enum.access_perm.W_OK=0x2
enum.access_perm.X_OK=0x1
enum.sock_domain=AF_UNIX,AF_INET,AF_AX25,AF_IPX,AF_APPLETALK,AF_X25,AF_INET6,AF_DECnet,AF_KEY,AF_NETLINK,AF_PACKET,AF_RDS,AF_PPPOX,AF_LLC,AF_IB,AF_MPLS,AF_CAN,AF_TIPC,AF_BLUETOOTH,AF_ALG,AF_VSOCK,AF_KCM,AF_XDP
enum.sock_domain.0x1=AF_UNIX
enum.sock_domain.0x10=AF_INET6
enum.sock_domain.0x12=AF_DECnet
enum.sock_domain.0x15=AF_KEY
enum.sock_domain.0x16=AF_NETLINK
enum.sock_domain.0x17=AF_PACKET
enum.sock_domain.0x2=AF_INET
enum.sock_domain.0x21=AF_RDS
enum.sock_domain.0x24=AF_PPPOX
enum.sock_domain.0x26=AF_LLC
enum.sock_domain.0x27=AF_IB
enum.sock_domain.0x28=AF_MPLS
enum.sock_domain.0x29=AF_CAN
enum.sock_domain.0x3=AF_AX25
enum.sock_domain.0x30=AF_TIPC
enum.sock_domain.0x31=AF_BLUETOOTH
enum.sock_domain.0x38=AF_ALG
enum.sock_domain.0x4=AF_IPX
enum.sock_domain.0x40=AF_VSOCK
enum.sock_domain.0x41=AF_KCM
enum.sock_domain.0x44=AF_XDP
enum.sock_domain.0x5=AF_APPLETALK
enum.sock_domain.0x9=AF_X25
enum.sock_domain.AF_ALG=0x38
enum.sock_domain.AF_APPLETALK=0x5
enum.sock_domain.AF_AX25=0x3
enum.sock_domain.AF_BLUETOOTH=0x31
enum.sock_domain.AF_CAN=0x29
enum.sock_domain.AF_DECnet=0x12
enum.sock_domain.AF_IB=0x27
enum.sock_domain.AF_INET=0x2
enum.sock_domain.AF_INET6=0x10
enum.sock_domain.AF_IPX=0x4
enum.sock_domain.AF_KCM=0x41
enum.sock_domain.AF_KEY=0x15
enum.sock_domain.AF_LLC=0x26
enum.sock_domain.AF_MPLS=0x28
enum.sock_domain.AF_NETLINK=0x16
enum.sock_domain.AF_PACKET=0x17
enum.sock_domain.AF_PPPOX=0x24
enum.sock_domain.AF_RDS=0x21
enum.sock_domain.AF_TIPC=0x30
enum.sock_domain.AF_UNIX=0x1
enum.sock_domain.AF_VSOCK=0x40
enum.sock_domain.AF_X25=0x9
enum.sock_domain.AF_XDP=0x44
enum.sock_type=SOCK_STREAM,SOCK_DGRAM,SOCK_SEQPACKET,SOCK_RAW,SOCK_RDM,SOCK_PACKET,SOCK_DCCP
enum.sock_type.0x1=SOCK_DGRAM
enum.sock_type.0x2=SOCK_STREAM
enum.sock_type.0x3=SOCK_RAW
enum.sock_type.0x4=SOCK_RDM
enum.sock_type.0x5=SOCK_SEQPACKET
enum.sock_type.0x6=SOCK_DCCP
enum.sock_type.0x7=SOCK_PACKET
enum.sock_type.SOCK_DCCP=0x6
enum.sock_type.SOCK_DGRAM=0x1
enum.sock_type.SOCK_PACKET=0x7
enum.sock_type.SOCK_RAW=0x3
enum.sock_type.SOCK_RDM=0x4
enum.sock_type.SOCK_SEQPACKET=0x5
enum.sock_type.SOCK_STREAM=0x2
fd_mask=typedef
fd_set=typedef
fenv_t=typedef
fexcept_t=typedef
float=type
fpos_t=typedef
gid_t=type
id_t=type
idtype_t=typedef
imaxdiv_t=typedef
int=type
int16_t=type
int32_t=type
int64_t=type
int8_t=type
intmax_t=type
intptr_t=type
jmp_buf=typedef
lconv=struct
ldiv_t=typedef
lldiv_t=typedef
locale_t=typedef
long=type
long double=type
long int=type
long long=type
long long int=type
mbstate_t=typedef
nl_item=typedef
pid_t=type
ptrdiff_t=type
short=type
sigaction=struct
siginfo_t=typedef
sigset_t=typedef
sigval=union
size_t=type
sock_domain=enum
sock_type=enum
sockaddr=struct
socklen_t=typedef
ssize_t=type
std__type_info=struct
struct.__div_t=quot,rem
struct.__div_t.quot=int,0,0
struct.__div_t.rem=int,2,0
struct.__imaxdiv_t=quot,rem
struct.__imaxdiv_t.quot=intmax_t,0,0
struct.__imaxdiv_t.rem=intmax_t,8,0
struct.__ldiv_t=quot,rem
struct.__ldiv_t.quot=long int,0,0
struct.__ldiv_t.rem=long int,4,0
struct.__lldiv_t=quot,rem
struct.__lldiv_t.quot=long long int,0,0
struct.__lldiv_t.rem=long long int,4,0
struct.__siginfo_t=si_signo,si_code,si_value,si_errno,si_pid,si_uid,si_addr,si_status,si_band
struct.__siginfo_t.si_addr=void *,28,0
struct.__siginfo_t.si_band=int,36,0
struct.__siginfo_t.si_code=int,4,0
struct.__siginfo_t.si_errno=int,16,0
struct.__siginfo_t.si_pid=pid_t,20,0
struct.__siginfo_t.si_signo=int,0,0
struct.__siginfo_t.si_status=int,32,0
struct.__siginfo_t.si_uid=uid_t,24,0
struct.__siginfo_t.si_value=union sigval,8,0
struct.__sigset_t=sig
struct.__sigset_t.sig=unsigned long,0,0
struct._fd_set=fds_bits
struct._fd_set.fds_bits=fd_mask,0,0
struct.sigaction=sa_handler,sa_flags,sa_restorer,sa_mask
struct.sigaction.sa_flags=unsigned long,8,0
struct.sigaction.sa_handler=void *,0,0
struct.sigaction.sa_mask=sigset_t,20,0
struct.sigaction.sa_restorer=void *,12,0
struct.timespec=tv_sec,tv_nsec
struct.timespec.tv_nsec=long,8,0
struct.timespec.tv_sec=time_t,0,0
struct.timeval=tv_sec,tv_usec
struct.timeval.tv_sec=time_t,0,0
struct.timeval.tv_usec=suseconds_t,8,0
struct.tm=tm_sec,tm_min,tm_hour,tm_mday,tm_mon,tm_year,tm_wday,tm_yday,tm_isdst
struct.tm.tm_hour=int,8,0
struct.tm.tm_isdst=int,32,0
struct.tm.tm_mday=int,12,0
struct.tm.tm_min=int,4,0
struct.tm.tm_mon=int,16,0
struct.tm.tm_sec=int,0,0
struct.tm.tm_wday=int,24,0
struct.tm.tm_yday=int,28,0
struct.tm.tm_year=int,20,0
suseconds_t=typedef
time_t=typedef
timespec=struct
timeval=struct
tm=struct
type.bool=b
type.bool.size=8
type.bool.typeclass=None
type.char=c
type.char *=z
type.char *.size=64
type.char *.typeclass=None
type.char.size=8
type.char.typeclass=Signed Integral
type.char16_t=c
type.char16_t.size=16
type.char16_t.typeclass=Signed Integral
type.char32_t=c
type.char32_t.size=32
type.char32_t.typeclass=Signed Integral
type.char8_t=c
type.char8_t.size=8
type.char8_t.typeclass=Signed Integral
type.double=F
type.double.size=64
type.double.typeclass=Floating
type.float=f
type.float.size=32
type.float.typeclass=Floating
type.gid_t=q
type.gid_t.size=64
type.gid_t.typeclass=Integral
type.id_t=q
type.id_t.size=64
type.id_t.typeclass=Integral
type.int=d
type.int.size=32
type.int.typeclass=Signed Integral
type.int16_t=w
type.int16_t.size=16
type.int16_t.typeclass=Signed Integral
type.int32_t=d
type.int32_t.size=32
type.int32_t.typeclass=Signed Integral
type.int64_t=q
type.int64_t.size=64
type.int64_t.typeclass=Signed Integral
type.int8_t=b
type.int8_t.size=8
type.int8_t.typeclass=Signed Integral
type.intmax_t=q
type.intmax_t.size=64
type.intmax_t.typeclass=Signed Integral
type.intptr_t=q
type.intptr_t.size=64
type.intptr_t.typeclass=Signed Integral
type.long=x
type.long double=F
type.long double.size=64
type.long double.typeclass=Floating
type.long int=x
type.long int.size=64
type.long int.typeclass=Signed Integral
type.long long=q
type.long long int=q
type.long long int.size=64
type.long long int.typeclass=Signed Integral
type.long long.size=64
type.long long.typeclass=Signed Integral
type.long.size=64
type.long.typeclass=Signed Integral
type.pid_t=q
type.pid_t.size=64
type.pid_t.typeclass=Integral
type.ptrdiff_t=q
type.ptrdiff_t.size=64
type.ptrdiff_t.typeclass=Integral
type.short=w
type.short.size=16
type.short.typeclass=Signed Integral
type.size_t=q
type.size_t.size=64
type.size_t.typeclass=Unsigned Integral
type.ssize_t=q
type.ssize_t.size=64
type.ssize_t.typeclass=Signed Integral
type.uid_t=q
type.uid_t.size=64
type.uid_t.typeclass=Integral
type.uint16_t=w
type.uint16_t.size=16
type.uint16_t.typeclass=Unsigned Integral
type.uint32_t=d
type.uint32_t.size=32
type.uint32_t.typeclass=Unsigned Integral
type.uint64_t=q
type.uint64_t.size=64
type.uint64_t.typeclass=Unsigned Integral
type.uint8_t=b
type.uint8_t.size=8
type.uint8_t.typeclass=Unsigned Integral
type.uintmax_t=q
type.uintmax_t.size=64
type.uintmax_t.typeclass=Unsigned Integral
type.uintptr_t=q
type.uintptr_t.size=64
type.uintptr_t.typeclass=Unsigned Integral
type.unknown_t=q
type.unknown_t.size=64
type.unknown_t.typeclass=Integral
type.unsigned char=b
type.unsigned char.size=8
type.unsigned char.typeclass=Unsigned Integral
type.unsigned int=i
type.unsigned int.size=32
type.unsigned int.typeclass=Unsigned Integral
type.unsigned long=d
type.unsigned long long=q
type.unsigned long long.size=64
type.unsigned long long.typeclass=Unsigned Integral
type.unsigned long.size=32
type.unsigned long.typeclass=Unsigned Integral
type.unsigned short=w
type.unsigned short.size=16
type.unsigned short.typeclass=Unsigned Integral
type.void *=p
type.void *.size=64
type.void *.typeclass=None
type.void.size=0
type.void.typeclass=None
typedef.FILE=void
typedef.clock_t=void
typedef.div_t=struct __div_t
typedef.fd_mask=long int
typedef.fd_set=struct _fd_set
typedef.fenv_t=void
typedef.fexcept_t=void
typedef.fpos_t=void
typedef.idtype_t=enum __idtype
typedef.imaxdiv_t=struct __imaxdiv_t
typedef.jmp_buf=void
typedef.ldiv_t=struct __ldiv_t
typedef.lldiv_t=struct __lldiv_t
typedef.locale_t=void
typedef.mbstate_t=void
typedef.nl_item=int
typedef.siginfo_t=struct __siginfo_t
typedef.sigset_t=struct __sigset_t
typedef.socklen_t=int
typedef.suseconds_t=long
typedef.time_t=long
typedef.va_list=char *
typedef.wchar_t=int
typedef.wctrans_t=unsigned int
typedef.wctype_t=int
typedef.wint_t=int
uid_t=type
uint16_t=type
uint32_t=type
uint64_t=type
uint8_t=type
uintmax_t=type
uintptr_t=type
union.sigval=sival_int,sival_ptr
union.sigval.sival_int=int,0,0
union.sigval.sival_ptr=void *,0,0
unknown_t=type
unsigned char=type
unsigned int=type
unsigned long=type
unsigned long long=type
unsigned short=type
va_list=typedef
void=type
void *=type
wchar_t=typedef
wctrans_t=typedef
wctype_t=typedef
wint_t=typedef

/core/analysis/vars

/core/analysis/xrefs
0x401008=[{"to":4210680,"type":"d"}]
0x401026=[{"to":4210440,"type":"c"}]
0x401030=[{"to":4210448,"type":"c"}]
0x40103b=[{"to":4198432,"type":"c"}]
0x401040=[{"to":4210456,"type":"c"}]
0x40104b=[{"to":4198432,"type":"c"}]
0x401050=[{"to":4210464,"type":"c"}]
0x40105b=[{"to":4198432,"type":"c"}]
0x401060=[{"to":4210472,"type":"c"}]
0x40106b=[{"to":4198432,"type":"c"}]
0x401070=[{"to":4210480,"type":"c"}]
0x40107b=[{"to":4198432,"type":"c"}]
0x401080=[{"to":4210488,"type":"c"}]
0x40108b=[{"to":4198432,"type":"c"}]
0x401090=[{"to":4210496,"type":"c"}]
0x40109b=[{"to":4198432,"type":"c"}]
0x4010a0=[{"to":4210504,"type":"c"}]
0x4010ab=[{"to":4198432,"type":"c"}]
0x4010b0=[{"to":4210512,"type":"c"}]
0x4010bb=[{"to":4198432,"type":"c"}]
0x4010c0=[{"to":4210520,"type":"c"}]
0x4010cb=[{"to":4198432,"type":"c"}]
0x4010d0=[{"to":4210528,"type":"c"}]
0x4010db=[{"to":4198432,"type":"c"}]
0x4010e0=[{"to":4210536,"type":"c"}]
0x4010eb=[{"to":4198432,"type":"c"}]
0x4010f0=[{"to":4210544,"type":"c"}]
0x4010fb=[{"to":4198432,"type":"c"}]
0x401100=[{"to":4210552,"type":"c"}]
0x40110b=[{"to":4198432,"type":"c"}]
0x401110=[{"to":4210560,"type":"c"}]
0x40111b=[{"to":4198432,"type":"c"}]
0x401120=[{"to":4210568,"type":"c"}]
0x40112b=[{"to":4198432,"type":"c"}]
0x401130=[{"to":4210576,"type":"c"}]
0x40113b=[{"to":4198432,"type":"c"}]
0x401140=[{"to":4210584,"type":"c"}]
0x40114b=[{"to":4198432,"type":"c"}]
0x401150=[{"to":4210592,"type":"c"}]
0x40115b=[{"to":4198432,"type":"c"}]
0x401160=[{"to":4210600,"type":"c"}]
0x40116b=[{"to":4198432,"type":"c"}]
0x401170=[{"to":4210608,"type":"c"}]
0x40117b=[{"to":4198432,"type":"c"}]
0x401180=[{"to":4210616,"type":"c"}]
0x40118b=[{"to":4198432,"type":"c"}]
0x401190=[{"to":4210624,"type":"c"}]
0x40119b=[{"to":4198432,"type":"c"}]
0x4011a0=[{"to":4210632,"type":"c"}]
0x4011ab=[{"to":4198432,"type":"c"}]
0x4011b0=[{"to":4210640,"type":"c"}]
0x4011bb=[{"to":4198432,"type":"c"}]
0x4011c0=[{"to":4210648,"type":"c"}]
0x4011cb=[{"to":4198432,"type":"c"}]
0x4011d0=[{"to":4210656,"type":"c"}]
0x4011db=[{"to":4198432,"type":"c"}]
0x4011e0=[{"to":4210664,"type":"c"}]
0x4011eb=[{"to":4198432,"type":"c"}]
0x401208=[{"to":4199397,"type":"d"}]
0x40120f=[{"to":4210672,"type":"C"}]
0x401230=[{"to":4210704,"type":"d"}]
0x401235=[{"to":4210704,"type":"d"}]
0x401247=[{"to":4210704,"type":"d"}]
0x401260=[{"to":4210704,"type":"d"}]
0x401265=[{"to":4210704,"type":"d"}]
0x401289=[{"to":4210704,"type":"d"}]
0x4012a4=[{"to":4210728,"type":"d"}]
0x4012b1=[{"to":4198960,"type":"C"}]
0x4012b6=[{"to":4210728,"type":"d"}]
0x4012d4=[{"to":4199008,"type":"c"}]
0x401316=[{"to":4198512,"type":"C"}]
0x40131f=[{"to":4202518,"type":"d"}]
0x401326=[{"to":4198752,"type":"C"}]
0x40132b=[{"to":4210736,"type":"d"}]
0x401346=[{"to":4210736,"type":"d"}]
0x40134d=[{"to":4198768,"type":"C"}]
0x40135b=[{"to":4199911,"type":"C"}]
0x401360=[{"to":4210736,"type":"d"}]
0x401367=[{"to":4198720,"type":"C"}]
0x401377=[{"to":4198560,"type":"C"}]
0x401380=[{"to":4210736,"type":"d"}]
0x401387=[{"to":4198544,"type":"C"}]
0x401395=[{"to":4198848,"type":"C"}]
0x40139a=[{"to":4202500,"type":"d"}]
0x40139f=[{"to":4199982,"type":"C"}]
0x4013a4=[{"to":4199199,"type":"c"}]
0x4013a9=[{"to":4202608,"type":"d"}]
0x4013ae=[{"to":4199982,"type":"C"}]
0x4013b3=[{"to":4199223,"type":"c"}]
0x4013b5=[{"to":4202521,"type":"d"}]
0x4013ba=[{"to":4199982,"type":"C"}]
0x4013bf=[{"to":4199254,"type":"c"}]
0x4013c1=[{"to":4202640,"type":"d"}]
0x4013c6=[{"to":4199982,"type":"C"}]
0x4013cb=[{"to":4199280,"type":"c"}]
0x4013cd=[{"to":4202536,"type":"d"}]
0x4013d2=[{"to":4199982,"type":"C"}]
0x4013d7=[{"to":4199296,"type":"c"}]
0x4013d9=[{"to":4202554,"type":"d"}]
0x4013de=[{"to":4199982,"type":"C"}]
0x4013e3=[{"to":4199312,"type":"c"}]
0x4013fe=[{"to":4198832,"type":"C"}]
0x401405=[{"to":4199126,"type":"C"}]
0x40140a=[{"to":4202584,"type":"d"}]
0x40140f=[{"to":4199982,"type":"C"}]
0x401414=[{"to":4199418,"type":"c"}]
0x40146a=[{"to":4202671,"type":"d"}]
0x40146f=[{"to":4202677,"type":"d"}]
0x401474=[{"to":4202682,"type":"d"}]
0x401479=[{"to":4210736,"type":"d"}]
0x401485=[{"to":4198672,"type":"C"}]
0x401498=[{"to":4202693,"type":"d"}]
0x40149d=[{"to":4210736,"type":"d"}]
0x4014a9=[{"to":4198672,"type":"C"}]
0x4014d0=[{"to":4198592,"type":"C"}]
0x4014f7=[{"to":4202752,"type":"d"}]
0x4014fc=[{"to":4210736,"type":"d"}]
0x401503=[{"to":4198672,"type":"C"}]
0x401508=[{"to":4210736,"type":"d"}]
0x40150f=[{"to":4198720,"type":"C"}]
0x401522=[{"to":4202704,"type":"d"}]
0x401527=[{"to":4210736,"type":"d"}]
0x401533=[{"to":4198464,"type":"C"}]
0x401565=[{"to":4202709,"type":"d"}]
0x40156a=[{"to":4199982,"type":"C"}]
0x40156f=[{"to":4199741,"type":"c"}]
0x401571=[{"to":4202800,"type":"d"}]
0x401576=[{"to":4210736,"type":"d"}]
0x401582=[{"to":4198672,"type":"C"}]
0x401597=[{"to":4210736,"type":"d"}]
0x4015a1=[{"to":4198656,"type":"C"}]
0x4015ab=[{"to":4202724,"type":"d"}]
0x4015b0=[{"to":4199982,"type":"C"}]
0x4015b5=[{"to":4202864,"type":"d"}]
0x4015ba=[{"to":4210736,"type":"d"}]
0x4015c6=[{"to":4198672,"type":"C"}]
0x4015d8=[{"to":4199446,"type":"C"}]
0x4015dd=[{"to":4199756,"type":"c"}]
0x4015e2=[{"to":4198592,"type":"C"}]
0x40160d=[{"to":4199637,"type":"C"}]
0x401629=[{"to":4198592,"type":"C"}]
0x401636=[{"to":4198816,"type":"C"}]
0x40163b=[{"to":4198448,"type":"C"}]
0x401642=[{"to":4202898,"type":"d"}]
0x40164c=[{"to":4210720,"type":"d"}]
0x401658=[{"to":4198864,"type":"C"}]
0x401662=[{"to":4198848,"type":"C"}]
0x40167b=[{"to":4198688,"type":"C"}]
0x401696=[{"to":4198736,"type":"C"}]
0x4016a2=[{"to":4198688,"type":"C"}]
0x4016bb=[{"to":4198736,"type":"C"}]
0x4016d2=[{"to":4202925,"type":"d"}]
0x4016d7=[{"to":4199982,"type":"C"}]
0x4016dc=[{"to":4202953,"type":"d"}]
0x4016e1=[{"to":4199982,"type":"C"}]
0x4016e6=[{"to":4203056,"type":"d"}]
0x4016eb=[{"to":4199982,"type":"C"}]
0x4016f0=[{"to":4203096,"type":"d"}]
0x4016f5=[{"to":4199982,"type":"C"}]
0x40172c=[{"to":4198704,"type":"C"}]
0x40174f=[{"to":4198480,"type":"C"}]
0x401776=[{"to":4203168,"type":"d"}]
0x40177b=[{"to":4199982,"type":"C"}]
0x401780=[{"to":4203200,"type":"d"}]
0x401785=[{"to":4199982,"type":"C"}]
0x40178a=[{"to":4198592,"type":"C"}]
0x4017ae=[{"to":4198784,"type":"C"}]
0x4017bc=[{"to":4198576,"type":"C"}]
0x4017c9=[{"to":4198528,"type":"C"}]
0x4017d9=[{"to":4198576,"type":"C"}]
0x4017e5=[{"to":4198640,"type":"C"}]
0x4017f7=[{"to":4198448,"type":"C"}]
0x4017fe=[{"to":4198880,"type":"C"}]
0x401809=[{"to":4202983,"type":"d"}]
0x401813=[{"to":4210720,"type":"d"}]
0x40181f=[{"to":4198864,"type":"C"}]
0x401824=[{"to":4202924,"type":"d"}]
0x401829=[{"to":4199982,"type":"C"}]
0x40182e=[{"to":4198448,"type":"C"}]
0x401835=[{"to":4198880,"type":"C"}]
0x401840=[{"to":4203007,"type":"d"}]
0x40184a=[{"to":4210720,"type":"d"}]
0x401856=[{"to":4198864,"type":"C"}]
0x40185b=[{"to":4202924,"type":"d"}]
0x401860=[{"to":4199982,"type":"C"}]
0x401868=[{"to":4203035,"type":"d"}]
0x401872=[{"to":4210720,"type":"d"}]
0x40187e=[{"to":4198864,"type":"C"}]
0x401883=[{"to":4202924,"type":"d"}]
0x401888=[{"to":4199982,"type":"C"}]
0x4018ae=[{"to":4203232,"type":"d"}]
0x4018b3=[{"to":4203234,"type":"d"}]
0x4018b8=[{"to":4198800,"type":"C"}]
0x4018cc=[{"to":4200039,"type":"C"}]
0x40191d=[{"to":4198496,"type":"C"}]
0x40192c=[{"to":4210736,"type":"d"}]
0x40193a=[{"to":4198624,"type":"C"}]
0x40195e=[{"to":4203288,"type":"d"}]
0x401963=[{"to":4199982,"type":"C"}]
0x401968=[{"to":4200649,"type":"c"}]
0x40196d=[{"to":4203456,"type":"d"}]
0x401977=[{"to":4203408,"type":"d"}]
0x40197c=[{"to":4203243,"type":"d"}]
0x401981=[{"to":4198608,"type":"C"}]
0x401986=[{"to":4203456,"type":"d"}]
0x401990=[{"to":4203408,"type":"d"}]
0x401995=[{"to":4203262,"type":"d"}]
0x40199a=[{"to":4198608,"type":"C"}]
0x40199f=[{"to":4198592,"type":"C"}]

/core/config
analysis.apply.signature=true
analysis.arch=x86
analysis.armthumb=false
analysis.autoname=false
analysis.bb.maxsize=512K
analysis.brokenrefs=false
analysis.calls=false
analysis.cpp.abi=itanium
analysis.cpu=x86
analysis.datarefs=false
analysis.delay=true
analysis.depth=64
analysis.detectwrites=false
analysis.esil=false
analysis.fcnprefix=fcn
analysis.from=0xffffffffffffffff
analysis.gp=0
analysis.gpfixed=true
analysis.graph_depth=256
analysis.hasnext=false
analysis.hpskip=false
analysis.ignbithints=false
analysis.in=io.maps.x
analysis.jmp.above=true
analysis.jmp.after=true
analysis.jmp.cref=false
analysis.jmp.indir=false
analysis.jmp.mid=true
analysis.jmp.ref=true
analysis.jmp.retpoline=true
analysis.jmp.tailcall=0
analysis.jmp.tbl=true
analysis.jmp.tblmax=512
analysis.jmp.tblmaxoffset=0x00001000
analysis.limits=false
analysis.loads=false
analysis.nonull=0
analysis.nopskip=true
analysis.norevisit=false
analysis.ptrdepth=3
analysis.pushret=false
analysis.recont=false
analysis.refstr=false
analysis.resolve.pointers=true
analysis.rnr=false
analysis.roregs=gp,zero
analysis.sleep=0
analysis.strings=false
analysis.timeout=0
analysis.to=0xffffffffffffffff
analysis.trap.after=false
analysis.trycatch=false
analysis.types.constraint=false
analysis.types.spec=gcc
analysis.types.verbose=false
analysis.vars=true
analysis.vinfun=true
analysis.vinfunrange=false
asm.analysis=false
asm.arch=x86
asm.bb.line=false
asm.bb.middle=true
asm.bits=64
asm.bytes=false
asm.bytes.right=false
asm.bytes.space=false
asm.calls=true
asm.capitalize=false
asm.cmt.col=35
asm.cmt.esil=false
asm.cmt.flgrefs=true
asm.cmt.il=false
asm.cmt.off=nodup
asm.cmt.patch=false
asm.cmt.refs=false
asm.cmt.right=true
asm.comments=true
asm.cpu=x86
asm.cycles=false
asm.cyclespace=false
asm.decode=false
asm.decoff=false
asm.demangle=true
asm.describe=false
asm.dwarf=true
asm.dwarf.abspath=false
asm.dwarf.file=true
asm.emu=false
asm.esil=false
asm.family=false
asm.fcn.signature=true
asm.fcn.size=false
asm.flags=true
asm.flags.inbytes=false
asm.flags.inline=false
asm.flags.limit=0
asm.flags.maxname=0
asm.flags.middle=2
asm.flags.offset=false
asm.flags.real=true
asm.functions=true
asm.hint.call=true
asm.hint.call.indirect=true
asm.hint.cdiv=false
asm.hint.emu=false
asm.hint.jmp=false
asm.hint.lea=false
asm.hint.pos=1
asm.hints=true
asm.imm.hash=0
asm.imm.str=true
asm.imm.trim=false
asm.indent=false
asm.indentspace=2
asm.instr=true
asm.invhex=false
asm.lbytes=true
asm.lines=true
asm.lines.bb=true
asm.lines.call=false
asm.lines.fcn=true
asm.lines.maxref=0
asm.lines.out=true
asm.lines.ret=false
asm.lines.right=false
asm.lines.wide=false
asm.lines.width=7
asm.marks=false
asm.meta=true
asm.midcursor=false
asm.middle=false
asm.minicols=false
asm.nbytes=10
asm.nodup=false
asm.noisy=true
asm.offset=true
asm.optype=false
asm.os=linux
asm.parser=x86.pseudo
asm.payloads=false
asm.pcalign=0
asm.pseudo=false
asm.refptr=false
asm.reloff=false
asm.reloff.flags=false
asm.section=false
asm.section.col=30
asm.section.name=true
asm.section.perm=false
asm.seggrn=4
asm.segoff=false
asm.size=false
asm.slow=true
asm.stackptr=false
asm.sub.jmp=true
asm.sub.names=true
asm.sub.reg=false
asm.sub.rel=true
asm.sub.section=false
asm.sub.tail=false
asm.sub.var=true
asm.sub.varmin=256
asm.sub.varonly=true
asm.symbol=false
asm.symbol.col=40
asm.syntax=intel
asm.tabs=8
asm.tabs.off=5
asm.tabs.once=true
asm.trace=false
asm.tracespace=false
asm.types=1
asm.ucase=false
asm.usercomments=false
asm.var=true
asm.var.access=false
asm.var.summary=0
asm.xrefs=false
asm.xrefs.code=true
asm.xrefs.fold=5
asm.xrefs.max=20
basefind.alignment=0x00001000
basefind.max.threads=0
basefind.min.score=1
basefind.min.string=10
basefind.progress=false
basefind.search.end=0xf0000000
basefind.search.start=0
bin.at=false
bin.b64str=false
bin.baddr=0x00400000
bin.classes=true
bin.dbginfo=true
bin.debase64=false
bin.demangle=true
bin.demangle.libs=false
bin.filter=true
bin.hashlimit=10M
bin.laddr=0
bin.lang=c
bin.libs=false
bin.maxstr=0
bin.maxstrbuf=0x00a00000
bin.minstr=0
bin.relocs=true
bin.str.enc=guess
bin.strings=true
bin.usextr=true
bin.verbose=false
cfg.bigendian=false
cfg.cpuaffinity=0
cfg.debug=false
cfg.editor=notepad
cfg.fortunes=true
cfg.fortunes.clippy=false
cfg.fortunes.file=tips
cfg.newtab=false
cfg.plugins=true
cfg.prefixdump=dump
cfg.seek.histsize=63
cfg.seek.silent=false
cfg.user=pid5220
cfg.wseek=false
cmd.depth=10
cmd.hitinfo=1
cmd.repeat=false
dbg.aftersyscall=true
dbg.backend=native
dbg.bep=loader
dbg.bpinmaps=true
dbg.bpsysign=false
dbg.btalgo=default
dbg.btdepth=128
dbg.clone=false
dbg.consbreak=false
dbg.create_new_console=true
dbg.execs=false
dbg.exitkills=true
dbg.follow=32
dbg.follow.child=false
dbg.forks=false
dbg.funcarg=false
dbg.gdb.page_size=0x00001000
dbg.gdb.retries=10
dbg.glibc.fastbinmax=10
dbg.glibc.fc_offset=640
dbg.glibc.ma_offset=0
dbg.glibc.tcache=false
dbg.hwbp=0
dbg.malloc=jemalloc
dbg.rebase=true
dbg.skipover=false
dbg.slow=false
dbg.status=false
dbg.swstep=false
dbg.threads=false
dbg.trace=false
dbg.trace.inrange=false
dbg.trace.libs=true
dbg.trace.tag=0
dbg.trace_continue=true
dbg.verbose=false
diff.bare=false
diff.from=0
diff.sort=addr
diff.to=0
dir.depth=10
dir.home=C:\\Users\\janet
dir.magic=C:\\Program Files\\Cutter-v2.2.0-Windows-x86_64\\share\\magic
dir.plugins=C:\\Program Files\\Cutter-v2.2.0-Windows-x86_64\\lib\\plugins
dir.prefix=C:\\Program Files\\Cutter-v2.2.0-Windows-x86_64
dir.projects=C:\\Users\\janet\\.local\\share\\projects
dir.tmp=C:\\Users\\janet\\AppData\\Local\\Temp
dir.types=/usr/include
elf.checks.sections=true
elf.checks.segments=true
elf.load.sections=true
emu.lazy=false
emu.pre=false
emu.skip=ds
emu.ssa=false
emu.stack=false
emu.str=false
emu.str.flag=true
emu.str.inv=true
emu.str.lea=true
emu.str.off=false
emu.write=false
esil.addr.size=64
esil.breakoninvalid=true
esil.exectrap=false
esil.gotolimit=0x00001000
esil.iotrap=true
esil.nonull=false
esil.prestep=true
esil.romem=false
esil.stack.addr=0x00100000
esil.stack.depth=256
esil.stack.pattern=0
esil.stack.size=0x000f0000
esil.stats=false
esil.timeout=0
esil.verbose=0
file.info=true
file.lastpath=C:\\Users\\janet\\OneDrive\\Teilen\\Studium\\Master\\3. Semester\\Praktikum Anwendungssicherheit\\sheets\\sheet3\\material_sheet3\\exercise2\\handler
file.loadalign=0x00000400
file.openmany=1
file.path=C:\\Users\\janet\\OneDrive\\Teilen\\Studium\\Master\\3. Semester\\Praktikum Anwendungssicherheit\\sheets\\sheet3\\material_sheet3\\exercise2\\handler
file.type=elf
flirt.ignore.unknown=true
flirt.node.optimize=2
flirt.sig.deflate=false
flirt.sig.file=all
flirt.sig.library=Built with rizin 0.5.1
flirt.sig.os=all
flirt.sig.version=10
flirt.sigdb.load.home=true
flirt.sigdb.load.system=true
ghidra.cmt.cpp=true
ghidra.cmt.indent=4
ghidra.indent=4
ghidra.linelen=120
ghidra.maximplref=2
ghidra.nl.brace=false
ghidra.nl.else=false
ghidra.rawptr=true
ghidra.ropropagate=true
ghidra.sleighhome=C:/Program Files/Cutter-v2.2.0-Windows-x86_64/lib/plugins/rz_ghidra_sleigh
ghidra.verbose=true
graph.aeab=false
graph.body=true
graph.bytes=false
graph.cmtright=false
graph.comments=true
graph.dotted=false
graph.dummy=true
graph.edges=2
graph.few=false
graph.font=Courier
graph.from=0xffffffffffffffff
graph.gv.current=false
graph.gv.format=gif
graph.hints=true
graph.invscroll=false
graph.json.usenames=true
graph.layout=0
graph.linemode=1
graph.nodejmps=true
graph.ntitles=true
graph.offset=false
graph.refs=false
graph.scroll=5
graph.to=0xffffffffffffffff
graph.trace=false
hex.align=false
hex.ascii=true
hex.bytes=true
hex.cols=16
hex.comments=true
hex.compact=false
hex.depth=5
hex.flagsz=0
hex.hdroff=false
hex.header=true
hex.offset=true
hex.onechar=false
hex.pairs=false
hex.section=false
hex.stride=0
hex.style=false
http.auth=false
http.bind=localhost
http.browser=start
http.colon=false
http.cors=false
http.dirlist=false
http.homeroot=C:\\Users\\janet\\.local\\share\\www
http.index=index.html
http.log=true
http.maxsize=0
http.port=9090
http.root=C:\\Program Files\\Cutter-v2.2.0-Windows-x86_64\\share\\www
http.stop.after=0
http.timeout=3
http.upget=false
http.upload=false
http.uproot=C:\\Users\\janet\\AppData\\Local\\Temp
http.verbose=false
io.0xff=255
io.aslr=false
io.autofd=true
io.cache=false
io.cache.auto=false
io.cache.read=false
io.cache.write=false
io.exec=true
io.ff=true
io.pava=false
io.pcache=false
io.pcache.read=false
io.pcache.write=false
io.unalloc=false
io.unalloc.ch=.
io.va=true
jsdec.asm=false
jsdec.blocks=false
jsdec.casts=false
jsdec.debug=false
jsdec.highlight=default
jsdec.paddr=false
jsdec.slow=false
jsdec.xrefs=false
log.colors=false
log.events=false
log.level=5
log.srcinfo=false
log.traplevel=6
magic.depth=100
pdb.autoload=0
pdb.extract=1
pdb.server=https://msdl.microsoft.com/download/symbols
pdb.symstore=C:\\Users\\janet\\.local\\share\\pdb
prj.compress=false
prj.file=C:\\Users\\janet\\OneDrive\\Teilen\\Studium\\Master\\3. Semester\\Praktikum Anwendungssicherheit\\sheets\\sheet3\\material_sheet3\\exercise2\\handler.rzdb
rap.loop=true
rop.comments=false
rop.conditional=false
rop.db=true
rop.len=5
rop.sdb=false
rop.subchains=false
rzil.step.events.read=false
rzil.step.events.write=true
scr.bgfill=false
scr.breaklines=false
scr.color=0
scr.color.args=true
scr.color.bytes=true
scr.color.grep=false
scr.color.ops=true
scr.color.pipe=false
scr.columns=0
scr.confirmquit=false
scr.dumpcols=false
scr.echo=false
scr.feedback=1
scr.fgets=false
scr.fix.columns=0
scr.fix.rows=0
scr.flush=false
scr.gadgets=true
scr.highlight.grep=false
scr.hist.block=true
scr.histsave=true
scr.html=false
scr.interactive=0
scr.last=true
scr.linesleep=0
scr.maxtab=0x00001000
scr.nkey=flag
scr.null=false
scr.pagesize=1
scr.panelborder=false
scr.prompt=true
scr.prompt.file=false
scr.prompt.flag=false
scr.prompt.flag.only=false
scr.prompt.mode=false
scr.prompt.popup=false
scr.prompt.sect=false
scr.prompt.vi=false
scr.rainbow=false
scr.randpal=false
scr.responsive=false
scr.rows=0
scr.scrollbar=0
scr.slow=true
scr.square=true
scr.strconv=asciiesc
scr.utf8=false
scr.utf8.curvy=false
scr.visual.mode=0
scr.vtmode=2
scr.wheel=true
scr.wheel.nkey=false
scr.wheel.speed=4
scr.wideoff=false
search.align=0
search.case_sensitive=smart
search.chunk=0
search.contiguous=true
search.distance=0
search.esilcombo=8
search.flags=false
search.from=0xffffffffffffffff
search.in=io.maps
search.kwidx=0
search.maxhits=0
search.overlap=false
search.prefix=hit
search.show=true
search.to=0xffffffffffffffff
stack.anotated=false
stack.bytes=true
stack.delta=0
stack.reg=SP
stack.size=64
str.escbslash=false
str.search.check_ascii_freq=true
tcp.islocal=false
time.fmt=%Y-%m-%d %H:%M:%S %z
time.zone=0
yara.date.format=%Y-%m-%d
yara.extensions=.yar,.yara
yara.fastmode=false
yara.timeout=300
zoom.byte=h
zoom.from=0
zoom.in=io.map
zoom.maxsz=512
zoom.to=0

/core/debug

/core/debug/breakpoints

/core/file
absolute=C:\\Users\\janet\\OneDrive\\Teilen\\Studium\\Master\\3. Semester\\Praktikum Anwendungssicherheit\\sheets\\sheet3\\material_sheet3\\exercise2\\handler
raw=C:\\Users\\janet\\OneDrive\\Teilen\\Studium\\Master\\3. Semester\\Praktikum Anwendungssicherheit\\sheets\\sheet3\\material_sheet3\\exercise2\\handler
relative=handler

/core/flags
base=0
realnames=1

/core/flags/flags
data.00402016={"realname":"data.00402016","demangled":false,"offset":4202518,"size":8,"space":"pointers"}
data.004021ac={"realname":"data.004021ac","demangled":false,"offset":4202924,"size":8,"space":"pointers"}
data.004022e0={"realname":"data.004022e0","demangled":false,"offset":4203232,"size":8,"space":"pointers"}
entry.fini0={"realname":"entry.fini0","demangled":false,"offset":4199072,"size":1,"space":"symbols"}
entry.init0={"realname":"entry.init0","demangled":false,"offset":4199120,"size":6,"space":"symbols"}
entry0={"realname":"entry0","demangled":false,"offset":4198896,"size":37,"space":"symbols"}
loc.__GNU_EH_FRAME_HDR={"realname":"__GNU_EH_FRAME_HDR","demangled":false,"offset":4203468,"size":0,"space":"symbols"}
loc.__bss_start={"realname":"__bss_start","demangled":false,"offset":4210704,"size":0,"space":"symbols"}
loc.__data_start={"realname":"__data_start","demangled":false,"offset":4210688,"size":0,"space":"symbols"}
loc._edata={"realname":"_edata","demangled":false,"offset":4210704,"size":0,"space":"symbols"}
loc._end={"realname":"_end","demangled":false,"offset":4210744,"size":0,"space":"symbols"}
loc.data_start={"realname":"data_start","demangled":false,"offset":4210688,"size":0,"space":"symbols"}
main={"realname":"main","demangled":false,"offset":4199397,"size":47,"space":"symbols"}
obj._DYNAMIC={"realname":"_DYNAMIC","demangled":false,"offset":4209928,"size":0,"space":"symbols"}
obj._GLOBAL_OFFSET_TABLE={"realname":"_GLOBAL_OFFSET_TABLE_","demangled":false,"offset":4210424,"size":0,"space":"symbols"}
obj._IO_stdin_used={"realname":"_IO_stdin_used","demangled":false,"offset":4202496,"size":4,"space":"symbols"}
obj.__FRAME_END={"realname":"__FRAME_END__","demangled":false,"offset":4204044,"size":0,"space":"symbols"}
obj.__PRETTY_FUNCTION__.0={"realname":"__PRETTY_FUNCTION__.0","demangled":false,"offset":4203456,"size":11,"space":"symbols"}
obj.__TMC_END={"realname":"__TMC_END__","demangled":false,"offset":4210704,"size":0,"space":"symbols"}
obj.__abi_tag={"realname":"__abi_tag","demangled":false,"offset":4195196,"size":32,"space":"symbols"}
obj.__do_global_dtors_aux_fini_array_entry={"realname":"__do_global_dtors_aux_fini_array_entry","demangled":false,"offset":4209920,"size":0,"space":"symbols"}
obj.__dso_handle={"realname":"__dso_handle","demangled":false,"offset":4210696,"size":0,"space":"symbols"}
obj.__frame_dummy_init_array_entry={"realname":"__frame_dummy_init_array_entry","demangled":false,"offset":4209912,"size":0,"space":"symbols"}
obj.client_stream={"realname":"client_stream","demangled":false,"offset":4210736,"size":8,"space":"symbols"}
obj.completed.0={"realname":"completed.0","demangled":false,"offset":4210728,"size":1,"space":"symbols"}
obj.stderr={"realname":"stderr","demangled":false,"offset":4210720,"size":8,"space":"symbols"}
obj.stderr_GLIBC_2.2.5={"realname":"stderr@GLIBC_2.2.5","demangled":false,"offset":4210720,"size":8,"space":"symbols"}
reloc.__assert_fail={"realname":"__assert_fail","demangled":false,"offset":4210528,"size":8,"space":"relocs"}
reloc.__errno_location={"realname":"__errno_location","demangled":false,"offset":4210448,"size":8,"space":"relocs"}
reloc.__fprintf_chk={"realname":"__fprintf_chk","demangled":false,"offset":4210656,"size":8,"space":"relocs"}
reloc.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":4210680,"size":8,"space":"relocs"}
reloc.__isoc99_fscanf={"realname":"__isoc99_fscanf","demangled":false,"offset":4210456,"size":8,"space":"relocs"}
reloc.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":4210672,"size":8,"space":"relocs"}
reloc.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":4210520,"size":8,"space":"relocs"}
reloc.atoi={"realname":"atoi","demangled":false,"offset":4210640,"size":8,"space":"relocs"}
reloc.close={"realname":"close","demangled":false,"offset":4210544,"size":8,"space":"relocs"}
reloc.exit={"realname":"exit","demangled":false,"offset":4210648,"size":8,"space":"relocs"}
reloc.fclose={"realname":"fclose","demangled":false,"offset":4210496,"size":8,"space":"relocs"}
reloc.fdopen={"realname":"fdopen","demangled":false,"offset":4210600,"size":8,"space":"relocs"}
reloc.fflush={"realname":"fflush","demangled":false,"offset":4210584,"size":8,"space":"relocs"}
reloc.fgets={"realname":"fgets","demangled":false,"offset":4210552,"size":8,"space":"relocs"}
reloc.fopen={"realname":"fopen","demangled":false,"offset":4210624,"size":8,"space":"relocs"}
reloc.fprintf={"realname":"fprintf","demangled":false,"offset":4210560,"size":8,"space":"relocs"}
reloc.fputs={"realname":"fputs","demangled":false,"offset":4210536,"size":8,"space":"relocs"}
reloc.fread={"realname":"fread","demangled":false,"offset":4210472,"size":8,"space":"relocs"}
reloc.fseek={"realname":"fseek","demangled":false,"offset":4210592,"size":8,"space":"relocs"}
reloc.ftell={"realname":"ftell","demangled":false,"offset":4210568,"size":8,"space":"relocs"}
reloc.open={"realname":"open","demangled":false,"offset":4210616,"size":8,"space":"relocs"}
reloc.perror={"realname":"perror","demangled":false,"offset":4210632,"size":8,"space":"relocs"}
reloc.setsockopt={"realname":"setsockopt","demangled":false,"offset":4210480,"size":8,"space":"relocs"}
reloc.setvbuf={"realname":"setvbuf","demangled":false,"offset":4210608,"size":8,"space":"relocs"}
reloc.shutdown={"realname":"shutdown","demangled":false,"offset":4210504,"size":8,"space":"relocs"}
reloc.sigaction={"realname":"sigaction","demangled":false,"offset":4210464,"size":8,"space":"relocs"}
reloc.sigfillset={"realname":"sigfillset","demangled":false,"offset":4210576,"size":8,"space":"relocs"}
reloc.stderr={"realname":"stderr","demangled":false,"offset":4210720,"size":8,"space":"relocs"}
reloc.strerror={"realname":"strerror","demangled":false,"offset":4210664,"size":8,"space":"relocs"}
reloc.strlen={"realname":"strlen","demangled":false,"offset":4210512,"size":8,"space":"relocs"}
reloc.write={"realname":"write","demangled":false,"offset":4210488,"size":8,"space":"relocs"}
section..bss={"realname":"section..bss","demangled":false,"offset":4210720,"size":24,"space":"sections"}
section..data={"realname":"section..data","demangled":false,"offset":4210688,"size":16,"space":"sections"}
section..dynamic={"realname":"section..dynamic","demangled":false,"offset":4209928,"size":496,"space":"sections"}
section..dynstr={"realname":"section..dynstr","demangled":false,"offset":4196040,"size":337,"space":"sections"}
section..dynsym={"realname":"section..dynsym","demangled":false,"offset":4195272,"size":768,"space":"sections"}
section..eh_frame={"realname":"section..eh_frame","demangled":false,"offset":4203584,"size":464,"space":"sections"}
section..eh_frame_hdr={"realname":"section..eh_frame_hdr","demangled":false,"offset":4203468,"size":116,"space":"sections"}
section..fini={"realname":"section..fini","demangled":false,"offset":4200868,"size":13,"space":"sections"}
section..fini_array={"realname":"section..fini_array","demangled":false,"offset":4209920,"size":8,"space":"sections"}
section..gnu.hash={"realname":"section..gnu.hash","demangled":false,"offset":4195232,"size":36,"space":"sections"}
section..gnu.version={"realname":"section..gnu.version","demangled":false,"offset":4196378,"size":64,"space":"sections"}
section..gnu.version_r={"realname":"section..gnu.version_r","demangled":false,"offset":4196448,"size":96,"space":"sections"}
section..got={"realname":"section..got","demangled":false,"offset":4210424,"size":264,"space":"sections"}
section..init={"realname":"section..init","demangled":false,"offset":4198400,"size":27,"space":"sections"}
section..init_array={"realname":"section..init_array","demangled":false,"offset":4209912,"size":8,"space":"sections"}
section..interp={"realname":"section..interp","demangled":false,"offset":4195096,"size":28,"space":"sections"}
section..note.ABI_tag={"realname":"section..note.ABI_tag","demangled":false,"offset":4195196,"size":32,"space":"sections"}
section..note.gnu.build_id={"realname":"section..note.gnu.build_id","demangled":false,"offset":4195160,"size":36,"space":"sections"}
section..note.gnu.property={"realname":"section..note.gnu.property","demangled":false,"offset":4195128,"size":32,"space":"sections"}
section..plt={"realname":"section..plt","demangled":false,"offset":4198432,"size":464,"space":"sections"}
section..rela.dyn={"realname":"section..rela.dyn","demangled":false,"offset":4196544,"size":72,"space":"sections"}
section..rela.plt={"realname":"section..rela.plt","demangled":false,"offset":4196616,"size":672,"space":"sections"}
section..rodata={"realname":"section..rodata","demangled":false,"offset":4202496,"size":971,"space":"sections"}
section..text={"realname":"section..text","demangled":false,"offset":4198896,"size":1972,"space":"sections"}
segment.DYNAMIC={"realname":"segment.DYNAMIC","demangled":false,"offset":4209928,"size":496,"space":"segments"}
segment.GNU_EH_FRAME={"realname":"segment.GNU_EH_FRAME","demangled":false,"offset":4203468,"size":116,"space":"segments"}
segment.GNU_RELRO={"realname":"segment.GNU_RELRO","demangled":false,"offset":4209912,"size":776,"space":"segments"}
segment.GNU_STACK={"realname":"segment.GNU_STACK","demangled":false,"offset":0,"size":0,"space":"segments"}
segment.INTERP={"realname":"segment.INTERP","demangled":false,"offset":4195096,"size":28,"space":"segments"}
segment.LOAD0={"realname":"segment.LOAD0","demangled":false,"offset":4194304,"size":2984,"space":"segments"}
segment.LOAD1={"realname":"segment.LOAD1","demangled":false,"offset":4198400,"size":2481,"space":"segments"}
segment.LOAD2={"realname":"segment.LOAD2","demangled":false,"offset":4202496,"size":1552,"space":"segments"}
segment.LOAD3={"realname":"segment.LOAD3","demangled":false,"offset":4209912,"size":832,"space":"segments"}
segment.NOTE={"realname":"segment.NOTE","demangled":false,"offset":4195128,"size":32,"space":"segments"}
segment.NOTE_1={"realname":"segment.NOTE_1","demangled":false,"offset":4195160,"size":68,"space":"segments"}
segment.PHDR={"realname":"segment.PHDR","demangled":false,"offset":4194368,"size":728,"space":"segments"}
segment.UNKNOWN={"realname":"segment.UNKNOWN","demangled":false,"offset":4195128,"size":32,"space":"segments"}
segment.ehdr={"realname":"segment.ehdr","demangled":false,"offset":4194304,"size":64,"space":"segments"}
str..._.._shared_plaintext_server_print_flag.c={"realname":"str..._.._shared_plaintext_server_print_flag.c","demangled":false,"offset":4203408,"size":43,"space":"strings"}
str.10d__10d={"realname":"str.10d__10d","demangled":false,"offset":4202693,"size":11,"space":"strings"}
str.10s__10s={"realname":"str.10s__10s","demangled":false,"offset":4202682,"size":11,"space":"strings"}
str.Code={"realname":"str.Code","demangled":false,"offset":4202677,"size":5,"space":"strings"}
str.Count={"realname":"str.Count","demangled":false,"offset":4202671,"size":6,"space":"strings"}
str.Error_number__errno_:__d.={"realname":"str.Error_number__errno_:__d.","demangled":false,"offset":4202898,"size":27,"space":"strings"}
str.Error_on_scanf={"realname":"str.Error_on_scanf","demangled":false,"offset":4202709,"size":15,"space":"strings"}
str.Flushing_output_buffers_failed={"realname":"str.Flushing_output_buffers_failed","demangled":false,"offset":4202640,"size":31,"space":"strings"}
str.Here_is_your_frequency_analysis:={"realname":"str.Here_is_your_frequency_analysis:","demangled":false,"offset":4202864,"size":34,"space":"strings"}
str.How_much_data_do_you_want_to_have_analyzed={"realname":"str.How_much_data_do_you_want_to_have_analyzed","demangled":false,"offset":4202752,"size":45,"space":"strings"}
str.Please_enter_your_data_here_and_terminate_it_with_ENTER={"realname":"str.Please_enter_your_data_here_and_terminate_it_with_ENTER","demangled":false,"offset":4202800,"size":57,"space":"strings"}
str.bytes_read____size={"realname":"str.bytes_read____size","demangled":false,"offset":4203262,"size":19,"space":"strings"}
str.could_not_close_client_stream={"realname":"str.could_not_close_client_stream","demangled":false,"offset":4202554,"size":30,"space":"strings"}
str.could_not_get_end_of_file_position={"realname":"str.could_not_get_end_of_file_position","demangled":false,"offset":4203056,"size":35,"space":"strings"}
str.could_not_get_file_position={"realname":"str.could_not_get_file_position","demangled":false,"offset":4202925,"size":28,"space":"strings"}
str.could_not_initialize_signal_set={"realname":"str.could_not_initialize_signal_set","demangled":false,"offset":4203168,"size":32,"space":"strings"}
str.could_not_open_flag_file._Sorry__You_actually_did_it___This_is_just_a_problem_with_giving_you_your_deserved_solution.={"realname":"str.could_not_open_flag_file._Sorry__You_actually_did_it___This_is_just_a_problem_with_giving_you_your_deserved_solution.","demangled":false,"offset":4203288,"size":118,"space":"strings"}
str.could_not_open_socket_as_stream={"realname":"str.could_not_open_socket_as_stream","demangled":false,"offset":4202608,"size":32,"space":"strings"}
str.could_not_seek_back_to_old_file_position_while_determining_file_size={"realname":"str.could_not_seek_back_to_old_file_position_while_determining_file_size","demangled":false,"offset":4203096,"size":69,"space":"strings"}
str.could_not_seek_to_end_of_file={"realname":"str.could_not_seek_to_end_of_file","demangled":false,"offset":4202953,"size":30,"space":"strings"}
str.could_not_set_up_signal_handler={"realname":"str.could_not_set_up_signal_handler","demangled":false,"offset":4203200,"size":32,"space":"strings"}
str.d_c={"realname":"str.d_c","demangled":false,"offset":4202704,"size":5,"space":"strings"}
str.failed_to_close___s={"realname":"str.failed_to_close___s","demangled":false,"offset":4203035,"size":21,"space":"strings"}
str.failed_to_open___s_:__s={"realname":"str.failed_to_open___s_:__s","demangled":false,"offset":4202983,"size":24,"space":"strings"}
str.failed_to_write_to___s_:__s={"realname":"str.failed_to_write_to___s_:__s","demangled":false,"offset":4203007,"size":28,"space":"strings"}
str.flag.txt={"realname":"str.flag.txt","demangled":false,"offset":4203234,"size":9,"space":"strings"}
str.print_flag={"realname":"str.print_flag","demangled":false,"offset":4203456,"size":11,"space":"strings"}
str.reading_input_failed={"realname":"str.reading_input_failed","demangled":false,"offset":4202724,"size":21,"space":"strings"}
str.setsockopt_failed={"realname":"str.setsockopt_failed","demangled":false,"offset":4202500,"size":18,"space":"strings"}
str.setvbuf_failed={"realname":"str.setvbuf_failed","demangled":false,"offset":4202521,"size":15,"space":"strings"}
str.shutdown___failed={"realname":"str.shutdown___failed","demangled":false,"offset":4202536,"size":18,"space":"strings"}
str.size___sizeof_buf={"realname":"str.size___sizeof_buf","demangled":false,"offset":4203243,"size":19,"space":"strings"}
str.too_few_arguments={"realname":"str.too_few_arguments","demangled":false,"offset":4202584,"size":18,"space":"strings"}
sym.__do_global_dtors_aux={"realname":"__do_global_dtors_aux","demangled":false,"offset":4199072,"size":33,"space":"symbols"}
sym._dl_relocate_static_pie={"realname":"_dl_relocate_static_pie","demangled":false,"offset":4198944,"size":5,"space":"symbols"}
sym._fini={"realname":"_fini","demangled":false,"offset":4200868,"size":13,"space":"symbols"}
sym._init={"realname":"_init","demangled":false,"offset":4198400,"size":27,"space":"symbols"}
sym._start={"realname":"_start","demangled":false,"offset":4198896,"size":38,"space":"symbols"}
sym.count_character_frequencies_once={"realname":"count_character_frequencies_once","demangled":false,"offset":4199637,"size":274,"space":"symbols"}
sym.deregister_tm_clones={"realname":"deregister_tm_clones","demangled":false,"offset":4198960,"size":33,"space":"symbols"}
sym.die={"realname":"die","demangled":false,"offset":4199982,"size":57,"space":"symbols"}
sym.frame_dummy={"realname":"frame_dummy","demangled":false,"offset":4199120,"size":0,"space":"symbols"}
sym.frequency_analysis={"realname":"frequency_analysis","demangled":false,"offset":4199446,"size":191,"space":"symbols"}
sym.get_file_size={"realname":"get_file_size","demangled":false,"offset":4200039,"size":147,"space":"symbols"}
sym.handle_client={"realname":"handle_client","demangled":false,"offset":4199911,"size":71,"space":"symbols"}
sym.handle_client_wrapper={"realname":"handle_client_wrapper","demangled":false,"offset":4199126,"size":269,"space":"symbols"}
sym.immediate_write_to_file={"realname":"immediate_write_to_file","demangled":false,"offset":4200335,"size":254,"space":"symbols"}
sym.imp.__assert_fail={"realname":"__assert_fail","demangled":false,"offset":4198608,"size":6,"space":"imports"}
sym.imp.__errno_location={"realname":"__errno_location","demangled":false,"offset":4198448,"size":6,"space":"imports"}
sym.imp.__fprintf_chk={"realname":"__fprintf_chk","demangled":false,"offset":4198864,"size":6,"space":"imports"}
sym.imp.__isoc99_fscanf={"realname":"__isoc99_fscanf","demangled":false,"offset":4198464,"size":6,"space":"imports"}
sym.imp.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":4198592,"size":6,"space":"imports"}
sym.imp.atoi={"realname":"atoi","demangled":false,"offset":4198832,"size":6,"space":"imports"}
sym.imp.close={"realname":"close","demangled":false,"offset":4198640,"size":6,"space":"imports"}
sym.imp.exit={"realname":"exit","demangled":false,"offset":4198848,"size":6,"space":"imports"}
sym.imp.fclose={"realname":"fclose","demangled":false,"offset":4198544,"size":6,"space":"imports"}
sym.imp.fdopen={"realname":"fdopen","demangled":false,"offset":4198752,"size":6,"space":"imports"}
sym.imp.fflush={"realname":"fflush","demangled":false,"offset":4198720,"size":6,"space":"imports"}
sym.imp.fgets={"realname":"fgets","demangled":false,"offset":4198656,"size":6,"space":"imports"}
sym.imp.fopen={"realname":"fopen","demangled":false,"offset":4198800,"size":6,"space":"imports"}
sym.imp.fprintf={"realname":"fprintf","demangled":false,"offset":4198672,"size":6,"space":"imports"}
sym.imp.fputs={"realname":"fputs","demangled":false,"offset":4198624,"size":6,"space":"imports"}
sym.imp.fread={"realname":"fread","demangled":false,"offset":4198496,"size":6,"space":"imports"}
sym.imp.fseek={"realname":"fseek","demangled":false,"offset":4198736,"size":6,"space":"imports"}
sym.imp.ftell={"realname":"ftell","demangled":false,"offset":4198688,"size":6,"space":"imports"}
sym.imp.open={"realname":"open","demangled":false,"offset":4198784,"size":6,"space":"imports"}
sym.imp.perror={"realname":"perror","demangled":false,"offset":4198816,"size":6,"space":"imports"}
sym.imp.setsockopt={"realname":"setsockopt","demangled":false,"offset":4198512,"size":6,"space":"imports"}
sym.imp.setvbuf={"realname":"setvbuf","demangled":false,"offset":4198768,"size":6,"space":"imports"}
sym.imp.shutdown={"realname":"shutdown","demangled":false,"offset":4198560,"size":6,"space":"imports"}
sym.imp.sigaction={"realname":"sigaction","demangled":false,"offset":4198480,"size":6,"space":"imports"}
sym.imp.sigfillset={"realname":"sigfillset","demangled":false,"offset":4198704,"size":6,"space":"imports"}
sym.imp.strerror={"realname":"strerror","demangled":false,"offset":4198880,"size":6,"space":"imports"}
sym.imp.strlen={"realname":"strlen","demangled":false,"offset":4198576,"size":6,"space":"imports"}
sym.imp.write={"realname":"write","demangled":false,"offset":4198528,"size":6,"space":"imports"}
sym.main={"realname":"main","demangled":false,"offset":4199397,"size":49,"space":"symbols"}
sym.print_flag={"realname":"print_flag","demangled":false,"offset":4200589,"size":279,"space":"symbols"}
sym.register_tm_clones={"realname":"register_tm_clones","demangled":false,"offset":4199008,"size":49,"space":"symbols"}
sym.set_signal_handler={"realname":"set_signal_handler","demangled":false,"offset":4200186,"size":149,"space":"symbols"}

/core/flags/spaces
name=fs
spacestack=["*"]

/core/flags/spaces/spaces
classes=s
flirt=s
functions=s
imports=s
platform.ports=s
pointers=s
registers=s
registers.extended=s
registers.mmio=s
relocs=s
search=s
sections=s
segments=s
strings=s
symbols=s

/core/flags/tags
tag.alloc=malloc free$ calloc kalloc realloc
tag.dylib=dlopen dlsym dlclose mmap LoadLibrary GetProcAddress
tag.env=getenv putenv unsetenv setenv GetEnvironmentVariable SetEnvironmentVariable ExpandEnvironmentStrings
tag.fs=open$ close read$ write CloseHandle FindFirstFileW _wfopen _wstat ftruncate lseek _chsize GetFullPathName realpath RemoveDirectory DeleteFile CreateFile WriteFile UnmapViewOfFile CreateFileMapping MapViewOfFile readlink chmod fchmod chown stat fstat lstat fstatat lstat64 stat64 chflags fchflags lchflags
tag.network=socket connect bind$ listen accept sendto recvfrom gethostbyname htons ntohs
tag.process=getpid getppid kill exit abort assert gethostid sethostid sysctl
tag.stdout=^printf puts write
tag.string=strcat strcpy strncpy strlen strtok strstr strlcpy asprintf sprintf snprintf
tag.threads=pthread_create pthread_mutex_init pthread_cond_init CreateThread TerminateThread WaitForSingleObject GetCurrentThreadId
tag.time=settimeofday gettimeofday time adjtime ctime timed date$ sleep Sleep usleep clock_nanosleep localtime asctime difftime gmtime mktime timelocal timegm tzfile tzset

/core/flags/zones
